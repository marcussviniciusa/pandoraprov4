{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/src/app/admin/ai-config/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useSession } from \"next-auth/react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { AlertCircle, Bot, Check, Key, Loader2, Settings, Zap, X, Plus, Trash2 } from \"lucide-react\"\nimport { toast } from \"sonner\"\n\ninterface ProviderConfig {\n  id: string\n  provider: string\n  isActive: boolean\n  createdAt: string\n  updatedAt: string\n}\n\ninterface Agent {\n  id: string\n  name: string\n  type: string\n  prompt: string\n  provider: string\n  aiModel: string\n  temperature: number\n  maxTokens: number\n  isActive: boolean\n}\n\ninterface AvailableModel {\n  provider: string\n  model: string\n  displayName: string\n  description: string\n}\n\ninterface ProviderHealth {\n  OPENAI: boolean\n  GOOGLE: boolean\n  ANTHROPIC: boolean\n}\n\nexport default function AIConfigPage() {\n  const { data: session } = useSession()\n  const [loading, setLoading] = useState(true)\n  const [saving, setSaving] = useState(false)\n  \n  // Estados\n  const [providerConfigs, setProviderConfigs] = useState<ProviderConfig[]>([])\n  const [agents, setAgents] = useState<Agent[]>([])\n  const [availableModels, setAvailableModels] = useState<AvailableModel[]>([])\n  const [providerHealth, setProviderHealth] = useState<ProviderHealth>({\n    OPENAI: false,\n    GOOGLE: false,\n    ANTHROPIC: false\n  })\n\n  // Formulários\n  const [newProviderForm, setNewProviderForm] = useState({\n    provider: \"\",\n    apiKey: \"\",\n    isActive: true\n  })\n\n  const [editingAgent, setEditingAgent] = useState<string | null>(null)\n  const [agentForm, setAgentForm] = useState({\n    provider: \"\",\n    aiModel: \"\",\n    temperature: 0.7,\n    maxTokens: 1000\n  })\n\n  // Novo formulário para criar agentes\n  const [creatingAgent, setCreatingAgent] = useState(false)\n  const [newAgentForm, setNewAgentForm] = useState({\n    name: \"\",\n    type: \"\",\n    prompt: \"\",\n    provider: \"\",\n    aiModel: \"\",\n    temperature: 0.7,\n    maxTokens: 1000\n  })\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    if (session?.user?.role === \"USER\") {\n      toast.error(\"Acesso negado\")\n      return\n    }\n    loadData()\n  }, [session])\n\n  const loadData = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch(\"/api/admin/ai-config\")\n      \n      if (!response.ok) {\n        throw new Error(\"Erro ao carregar configurações\")\n      }\n\n      const data = await response.json()\n      setProviderConfigs(data.data.providerConfigs)\n      setAgents(data.data.agents)\n      setAvailableModels(data.data.availableModels)\n      setProviderHealth(data.data.providerHealth)\n    } catch (error) {\n      console.error(\"Erro ao carregar dados:\", error)\n      toast.error(\"Erro ao carregar configurações de IA\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const saveProviderConfig = async () => {\n    if (!newProviderForm.provider || !newProviderForm.apiKey) {\n      toast.error(\"Provider e API Key são obrigatórios\")\n      return\n    }\n\n    try {\n      setSaving(true)\n      const response = await fetch(\"/api/admin/ai-config\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newProviderForm)\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error)\n      }\n\n      toast.success(result.message)\n      setNewProviderForm({ provider: \"\", apiKey: \"\", isActive: true })\n      loadData()\n    } catch (error: any) {\n      toast.error(error.message || \"Erro ao salvar configuração\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const updateAgent = async (agentId: string) => {\n    try {\n      setSaving(true)\n      const response = await fetch(\"/api/admin/ai-config\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          agentId,\n          ...agentForm\n        })\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error)\n      }\n\n      toast.success(result.message)\n      setEditingAgent(null)\n      loadData()\n    } catch (error: any) {\n      toast.error(error.message || \"Erro ao atualizar agente\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const removeProvider = async (provider: string) => {\n    if (!confirm(`Tem certeza que deseja remover a configuração do ${provider}?`)) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const response = await fetch(`/api/admin/ai-config?provider=${provider}`, {\n        method: \"DELETE\"\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        toast.error(result.error)\n        return\n      }\n\n      toast.success(result.message)\n      loadData()\n    } catch (error) {\n      toast.error(\"Erro ao remover configuração\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const createAgent = async () => {\n    if (!newAgentForm.name || !newAgentForm.type || !newAgentForm.prompt || !newAgentForm.provider || !newAgentForm.aiModel) {\n      toast.error(\"Todos os campos são obrigatórios\")\n      return\n    }\n\n    try {\n      setSaving(true)\n      const response = await fetch(\"/api/admin/ai-config/agents\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newAgentForm)\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error)\n      }\n\n      toast.success(result.message)\n      setNewAgentForm({\n        name: \"\",\n        type: \"\",\n        prompt: \"\",\n        provider: \"\",\n        aiModel: \"\",\n        temperature: 0.7,\n        maxTokens: 1000\n      })\n      setCreatingAgent(false)\n      loadData()\n    } catch (error: any) {\n      toast.error(error.message || \"Erro ao criar agente\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const deleteAgent = async (agentId: string) => {\n    if (!confirm(\"Tem certeza que deseja deletar este agente?\")) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const response = await fetch(`/api/admin/ai-config/agents?agentId=${agentId}`, {\n        method: \"DELETE\"\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error)\n      }\n\n      toast.success(result.message)\n      loadData()\n    } catch (error: any) {\n      toast.error(error.message || \"Erro ao deletar agente\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const getProviderIcon = (provider: string) => {\n    switch (provider) {\n      case \"OPENAI\": return \"🤖\"\n      case \"GOOGLE\": return \"🧠\"\n      case \"ANTHROPIC\": return \"🔮\"\n      default: return \"⚡\"\n    }\n  }\n\n  const getProviderColor = (provider: string) => {\n    switch (provider) {\n      case \"OPENAI\": return \"bg-green-500\"\n      case \"GOOGLE\": return \"bg-blue-500\"\n      case \"ANTHROPIC\": return \"bg-purple-500\"\n      default: return \"bg-gray-500\"\n    }\n  }\n\n  const getModelsByProvider = (provider: string) => {\n    return availableModels.filter(m => m.provider === provider)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto py-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Configuração de IA</h1>\n          <p className=\"text-muted-foreground\">Gerencie providers e modelos de IA para seu escritório</p>\n        </div>\n        <Button onClick={loadData} variant=\"outline\">\n          <Settings className=\"h-4 w-4 mr-2\" />\n          Atualizar\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"providers\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"providers\">Providers</TabsTrigger>\n          <TabsTrigger value=\"agents\">Agentes</TabsTrigger>\n          <TabsTrigger value=\"health\">Status</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"providers\" className=\"space-y-6\">\n          {/* Adicionar novo provider */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Key className=\"h-5 w-5\" />\n                Adicionar Provider\n              </CardTitle>\n              <CardDescription>\n                Configure API Keys para diferentes providers de IA\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"provider\">Provider</Label>\n                  <Select\n                    value={newProviderForm.provider}\n                    onValueChange={(value) => setNewProviderForm(prev => ({ ...prev, provider: value }))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Selecione o provider\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"OPENAI\">OpenAI</SelectItem>\n                      <SelectItem value=\"GOOGLE\">Google (Gemini)</SelectItem>\n                      <SelectItem value=\"ANTHROPIC\">Anthropic (Claude)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"apiKey\">API Key</Label>\n                  <Input\n                    type=\"password\"\n                    placeholder=\"sk-proj-... ou sua API Key\"\n                    value={newProviderForm.apiKey}\n                    onChange={(e) => setNewProviderForm(prev => ({ ...prev, apiKey: e.target.value }))}\n                  />\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={newProviderForm.isActive}\n                  onCheckedChange={(checked: boolean) => setNewProviderForm(prev => ({ ...prev, isActive: checked }))}\n                />\n                <Label>Ativar provider</Label>\n              </div>\n              <Button onClick={saveProviderConfig} disabled={saving}>\n                {saving ? <Loader2 className=\"h-4 w-4 animate-spin mr-2\" /> : <Key className=\"h-4 w-4 mr-2\" />}\n                Salvar Configuração\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* Lista de providers configurados */}\n          <div className=\"grid gap-4\">\n            {providerConfigs.map((config) => (\n              <Card key={config.id}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className={`p-2 rounded-lg ${getProviderColor(config.provider)}`}>\n                        <span className=\"text-white text-lg\">\n                          {getProviderIcon(config.provider)}\n                        </span>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold\">{config.provider}</h3>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Configurado em {new Date(config.createdAt).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={config.isActive ? \"default\" : \"secondary\"}>\n                        {config.isActive ? \"Ativo\" : \"Inativo\"}\n                      </Badge>\n                      <Button \n                        variant=\"destructive\" \n                        size=\"sm\"\n                        onClick={() => removeProvider(config.provider)}\n                        disabled={saving}\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"agents\" className=\"space-y-6\">\n          {/* Botão para adicionar novo agente */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Bot className=\"h-5 w-5\" />\n                    Agentes Especialistas\n                  </CardTitle>\n                  <CardDescription>\n                    Crie agentes especializados para diferentes áreas do direito\n                  </CardDescription>\n                </div>\n                <Button onClick={() => setCreatingAgent(true)} disabled={creatingAgent}>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Novo Agente\n                </Button>\n              </div>\n            </CardHeader>\n\n            {creatingAgent && (\n              <CardContent className=\"space-y-4 border-t\">\n                <div className=\"grid grid-cols-2 gap-4 pt-4\">\n                  <div>\n                    <Label>Nome do Agente</Label>\n                    <Input\n                      placeholder=\"Ex: Especialista Previdenciário\"\n                      value={newAgentForm.name}\n                      onChange={(e) => setNewAgentForm(prev => ({ ...prev, name: e.target.value }))}\n                    />\n                  </div>\n                  <div>\n                    <Label>Tipo/Especialidade</Label>\n                    <Input\n                      placeholder=\"Ex: Previdenciário, Trabalhista, Família, etc.\"\n                      value={newAgentForm.type}\n                      onChange={(e) => setNewAgentForm(prev => ({ ...prev, type: e.target.value }))}\n                    />\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Digite a especialidade que este agente irá atender\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label>Provider</Label>\n                    <Select\n                      value={newAgentForm.provider}\n                      onValueChange={(value) => setNewAgentForm(prev => ({ ...prev, provider: value }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecione o provider\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {providerConfigs.filter(p => p.isActive).map(p => (\n                          <SelectItem key={p.provider} value={p.provider}>\n                            {p.provider}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label>Modelo IA</Label>\n                    <Select\n                      value={newAgentForm.aiModel}\n                      onValueChange={(value) => setNewAgentForm(prev => ({ ...prev, aiModel: value }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecione o modelo\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {getModelsByProvider(newAgentForm.provider).map(model => (\n                          <SelectItem key={model.model} value={model.model}>\n                            {model.displayName}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div>\n                  <Label>Prompt do Sistema</Label>\n                  <Textarea\n                    placeholder=\"Defina como o agente deve se comportar e responder...\"\n                    value={newAgentForm.prompt}\n                    onChange={(e) => setNewAgentForm(prev => ({ ...prev, prompt: e.target.value }))}\n                    className=\"min-h-32\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label>Temperature (0-1)</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={newAgentForm.temperature}\n                      onChange={(e) => setNewAgentForm(prev => ({ ...prev, temperature: parseFloat(e.target.value) }))}\n                    />\n                  </div>\n                  <div>\n                    <Label>Max Tokens</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"100\"\n                      max=\"4000\"\n                      value={newAgentForm.maxTokens}\n                      onChange={(e) => setNewAgentForm(prev => ({ ...prev, maxTokens: parseInt(e.target.value) }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2 pt-2\">\n                  <Button onClick={createAgent} disabled={saving}>\n                    {saving ? <Loader2 className=\"h-4 w-4 animate-spin mr-2\" /> : <Check className=\"h-4 w-4 mr-2\" />}\n                    Criar Agente\n                  </Button>\n                  <Button variant=\"outline\" onClick={() => setCreatingAgent(false)}>\n                    Cancelar\n                  </Button>\n                </div>\n              </CardContent>\n            )}\n          </Card>\n\n          {/* Lista de agentes existentes */}\n          <div className=\"grid gap-4\">{agents.map((agent) => (\n              <Card key={agent.id}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-4\">\n                      <Bot className=\"h-8 w-8 text-primary\" />\n                      <div>\n                        <h3 className=\"font-semibold\">{agent.name}</h3>\n                        <p className=\"text-sm text-muted-foreground\">{agent.type}</p>\n                        <div className=\"flex items-center gap-2 mt-1\">\n                          <Badge variant=\"outline\">\n                            {agent.provider} - {agent.aiModel}\n                          </Badge>\n                          <span className=\"text-xs text-muted-foreground\">\n                            Temp: {agent.temperature} | Tokens: {agent.maxTokens}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant={agent.isActive ? \"default\" : \"secondary\"}>\n                        {agent.isActive ? \"Ativo\" : \"Inativo\"}\n                      </Badge>\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\"\n                        onClick={() => {\n                          setEditingAgent(agent.id)\n                          setAgentForm({\n                            provider: agent.provider,\n                            aiModel: agent.aiModel,\n                            temperature: agent.temperature,\n                            maxTokens: agent.maxTokens\n                          })\n                        }}\n                      >\n                        <Settings className=\"h-4 w-4\" />\n                      </Button>\n                      {agent.type !== \"RECEPTIONIST\" && (\n                        <Button \n                          variant=\"destructive\" \n                          size=\"sm\"\n                          onClick={() => deleteAgent(agent.id)}\n                          disabled={saving}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n\n                  {editingAgent === agent.id && (\n                    <div className=\"mt-4 pt-4 border-t space-y-4\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div>\n                          <Label>Provider</Label>\n                          <Select\n                            value={agentForm.provider}\n                            onValueChange={(value) => setAgentForm(prev => ({ ...prev, provider: value }))}\n                          >\n                            <SelectTrigger>\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {providerConfigs.filter(p => p.isActive).map(p => (\n                                <SelectItem key={p.provider} value={p.provider}>\n                                  {p.provider}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div>\n                          <Label>Modelo</Label>\n                          <Select\n                            value={agentForm.aiModel}\n                            onValueChange={(value) => setAgentForm(prev => ({ ...prev, aiModel: value }))}\n                          >\n                            <SelectTrigger>\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {getModelsByProvider(agentForm.provider).map(model => (\n                                <SelectItem key={model.model} value={model.model}>\n                                  {model.displayName}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div>\n                          <Label>Temperature (0-1)</Label>\n                          <Input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"1\"\n                            step=\"0.1\"\n                            value={agentForm.temperature}\n                            onChange={(e) => setAgentForm(prev => ({ ...prev, temperature: parseFloat(e.target.value) }))}\n                          />\n                        </div>\n                        <div>\n                          <Label>Max Tokens</Label>\n                          <Input\n                            type=\"number\"\n                            min=\"100\"\n                            max=\"4000\"\n                            value={agentForm.maxTokens}\n                            onChange={(e) => setAgentForm(prev => ({ ...prev, maxTokens: parseInt(e.target.value) }))}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button onClick={() => updateAgent(agent.id)} disabled={saving}>\n                          {saving ? <Loader2 className=\"h-4 w-4 animate-spin mr-2\" /> : <Check className=\"h-4 w-4 mr-2\" />}\n                          Salvar\n                        </Button>\n                        <Button variant=\"outline\" onClick={() => setEditingAgent(null)}>\n                          Cancelar\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"health\" className=\"space-y-6\">\n          <div className=\"grid gap-4\">\n            {Object.entries(providerHealth).map(([provider, isHealthy]) => (\n              <Card key={provider}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className={`p-2 rounded-lg ${getProviderColor(provider)}`}>\n                        <span className=\"text-white text-lg\">\n                          {getProviderIcon(provider)}\n                        </span>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold\">{provider}</h3>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Status da conexão com a API\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {isHealthy ? (\n                        <Badge className=\"bg-green-500 hover:bg-green-600\">\n                          <Check className=\"h-3 w-3 mr-1\" />\n                          Online\n                        </Badge>\n                      ) : (\n                        <Badge variant=\"destructive\">\n                          <AlertCircle className=\"h-3 w-3 mr-1\" />\n                          Offline\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}