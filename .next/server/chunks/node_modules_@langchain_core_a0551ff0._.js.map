{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/json.js"],"sourcesContent":["export function parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const firstFenceIndex = s.indexOf(\"```\");\n    if (firstFenceIndex === -1) {\n        return parser(s);\n    }\n    let contentAfterFence = s.substring(firstFenceIndex + 3);\n    if (contentAfterFence.startsWith(\"json\\n\")) {\n        contentAfterFence = contentAfterFence.substring(5);\n    }\n    else if (contentAfterFence.startsWith(\"json\")) {\n        contentAfterFence = contentAfterFence.substring(4);\n    }\n    else if (contentAfterFence.startsWith(\"\\n\")) {\n        contentAfterFence = contentAfterFence.substring(1);\n    }\n    const closingFenceIndex = contentAfterFence.indexOf(\"```\");\n    let finalContent = contentAfterFence;\n    if (closingFenceIndex !== -1) {\n        finalContent = contentAfterFence.substring(0, closingFenceIndex);\n    }\n    return parser(finalContent.trim());\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,kBAAkB,CAAC,EAAE,SAAS,gBAAgB;IAC1D,6CAA6C;IAC7C,IAAI,EAAE,IAAI;IACV,MAAM,kBAAkB,EAAE,OAAO,CAAC;IAClC,IAAI,oBAAoB,CAAC,GAAG;QACxB,OAAO,OAAO;IAClB;IACA,IAAI,oBAAoB,EAAE,SAAS,CAAC,kBAAkB;IACtD,IAAI,kBAAkB,UAAU,CAAC,WAAW;QACxC,oBAAoB,kBAAkB,SAAS,CAAC;IACpD,OACK,IAAI,kBAAkB,UAAU,CAAC,SAAS;QAC3C,oBAAoB,kBAAkB,SAAS,CAAC;IACpD,OACK,IAAI,kBAAkB,UAAU,CAAC,OAAO;QACzC,oBAAoB,kBAAkB,SAAS,CAAC;IACpD;IACA,MAAM,oBAAoB,kBAAkB,OAAO,CAAC;IACpD,IAAI,eAAe;IACnB,IAAI,sBAAsB,CAAC,GAAG;QAC1B,eAAe,kBAAkB,SAAS,CAAC,GAAG;IAClD;IACA,OAAO,OAAO,aAAa,IAAI;AACnC;AAGO,SAAS,iBAAiB,CAAC;IAC9B,8DAA8D;IAC9D,IAAI,OAAO,MAAM,aAAa;QAC1B,OAAO;IACX;IACA,qCAAqC;IACrC,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,OAAO;IACV,OAAO;IACX;IACA,wBAAwB;IACxB,IAAI,QAAQ;IACZ,MAAM,QAAQ,EAAE;IAChB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,sDAAsD;IACtD,KAAK,IAAI,QAAQ,EAAG;QAChB,IAAI,gBAAgB;YAChB,IAAI,SAAS,OAAO,CAAC,SAAS;gBAC1B,iBAAiB;YACrB,OACK,IAAI,SAAS,QAAQ,CAAC,SAAS;gBAChC,OAAO,OAAO,0DAA0D;YAC5E,OACK,IAAI,SAAS,MAAM;gBACpB,UAAU,CAAC;YACf,OACK;gBACD,UAAU;YACd;QACJ,OACK;YACD,IAAI,SAAS,KAAK;gBACd,iBAAiB;gBACjB,UAAU;YACd,OACK,IAAI,SAAS,KAAK;gBACnB,MAAM,IAAI,CAAC;YACf,OACK,IAAI,SAAS,KAAK;gBACnB,MAAM,IAAI,CAAC;YACf,OACK,IAAI,SAAS,OAAO,SAAS,KAAK;gBACnC,IAAI,SAAS,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK,MAAM;oBAC3C,MAAM,GAAG;gBACb,OACK;oBACD,wDAAwD;oBACxD,OAAO;gBACX;YACJ;QACJ;QACA,oDAAoD;QACpD,SAAS;IACb;IACA,2DAA2D;IAC3D,+BAA+B;IAC/B,IAAI,gBAAgB;QAChB,SAAS;IACb;IACA,kFAAkF;IAClF,IAAK,IAAI,IAAI,MAAM,MAAM,GAAG,GAAG,KAAK,GAAG,KAAK,EAAG;QAC3C,SAAS,KAAK,CAAC,EAAE;IACrB;IACA,gDAAgD;IAChD,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,OAAO;QACV,+EAA+E;QAC/E,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/load/map_keys.js"],"sourcesContent":["import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AACO,SAAS,UAAU,GAAG,EAAE,GAAG;IAC9B,OAAO,KAAK,CAAC,IAAI,IAAI,CAAA,GAAA,qIAAA,CAAA,UAAS,AAAD,EAAE;AACnC;AACO,SAAS,YAAY,GAAG,EAAE,GAAG;IAChC,OAAO,KAAK,CAAC,IAAI,IAAI,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD,EAAE;AACnC;AACO,SAAS,QAAQ,MAAM,EAAE,MAAM,EAAE,GAAG;IACvC,MAAM,SAAS,CAAC;IAChB,IAAK,MAAM,OAAO,OAAQ;QACtB,IAAI,OAAO,MAAM,CAAC,QAAQ,MAAM;YAC5B,MAAM,CAAC,OAAO,KAAK,KAAK,GAAG,MAAM,CAAC,IAAI;QAC1C;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/load/serializable.js"],"sourcesContent":["import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * A manual list of keys that should be serialized.\n     * If not overridden, all fields passed into the constructor will be serialized.\n     */\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.lc_serializable_keys !== undefined) {\n            this.lc_kwargs = Object.fromEntries(Object.entries(kwargs || {}).filter(([key]) => this.lc_serializable_keys?.includes(key)));\n        }\n        else {\n            this.lc_kwargs = kwargs ?? {};\n        }\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/content_blocks.js"],"sourcesContent":["export function isDataContentBlock(content_block) {\n    return (typeof content_block === \"object\" &&\n        content_block !== null &&\n        \"type\" in content_block &&\n        typeof content_block.type === \"string\" &&\n        \"source_type\" in content_block &&\n        (content_block.source_type === \"url\" ||\n            content_block.source_type === \"base64\" ||\n            content_block.source_type === \"text\" ||\n            content_block.source_type === \"id\"));\n}\nexport function isURLContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"url\" &&\n        \"url\" in content_block &&\n        typeof content_block.url === \"string\");\n}\nexport function isBase64ContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"base64\" &&\n        \"data\" in content_block &&\n        typeof content_block.data === \"string\");\n}\nexport function isPlainTextContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"text\" &&\n        \"text\" in content_block &&\n        typeof content_block.text === \"string\");\n}\nexport function isIDContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"id\" &&\n        \"id\" in content_block &&\n        typeof content_block.id === \"string\");\n}\nexport function convertToOpenAIImageBlock(content_block) {\n    if (isDataContentBlock(content_block)) {\n        if (content_block.source_type === \"url\") {\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: content_block.url,\n                },\n            };\n        }\n        if (content_block.source_type === \"base64\") {\n            if (!content_block.mime_type) {\n                throw new Error(\"mime_type key is required for base64 data.\");\n            }\n            const mime_type = content_block.mime_type;\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: `data:${mime_type};base64,${content_block.data}`,\n                },\n            };\n        }\n    }\n    throw new Error(\"Unsupported source type. Only 'url' and 'base64' are supported.\");\n}\n/**\n * Utility function for ChatModelProviders. Parses a mime type into a type, subtype, and parameters.\n *\n * @param mime_type - The mime type to parse.\n * @returns An object containing the type, subtype, and parameters.\n */\nexport function parseMimeType(mime_type) {\n    const parts = mime_type.split(\";\")[0].split(\"/\");\n    if (parts.length !== 2) {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - does not match type/subtype format.`);\n    }\n    const type = parts[0].trim();\n    const subtype = parts[1].trim();\n    if (type === \"\" || subtype === \"\") {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - type or subtype is empty.`);\n    }\n    const parameters = {};\n    for (const parameterKvp of mime_type.split(\";\").slice(1)) {\n        const parameterParts = parameterKvp.split(\"=\");\n        if (parameterParts.length !== 2) {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        const key = parameterParts[0].trim();\n        const value = parameterParts[1].trim();\n        if (key === \"\") {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        parameters[key] = value;\n    }\n    return {\n        type,\n        subtype,\n        parameters,\n    };\n}\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns The parsed data and mime type, or undefined if the data URL is invalid.\n */\nexport function parseBase64DataUrl({ dataUrl: data_url, asTypedArray = false, }) {\n    const formatMatch = data_url.match(/^data:(\\w+\\/\\w+);base64,([A-Za-z0-9+/]+=*)$/);\n    let mime_type;\n    if (formatMatch) {\n        mime_type = formatMatch[1].toLowerCase();\n        const data = asTypedArray\n            ? Uint8Array.from(atob(formatMatch[2]), (c) => c.charCodeAt(0))\n            : formatMatch[2];\n        return {\n            mime_type,\n            data,\n        };\n    }\n    return undefined;\n}\n/**\n * Convert from a standard data content block to a provider's proprietary data content block format.\n *\n * Don't override this method. Instead, override the more specific conversion methods and use this\n * method unmodified.\n *\n * @param block - The standard data content block to convert.\n * @returns The provider data content block.\n * @throws An error if the standard data content block type is not supported.\n */\nexport function convertToProviderContentBlock(block, converter) {\n    if (block.type === \"text\") {\n        if (!converter.fromStandardTextBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardTextBlock\\` method.`);\n        }\n        return converter.fromStandardTextBlock(block);\n    }\n    if (block.type === \"image\") {\n        if (!converter.fromStandardImageBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardImageBlock\\` method.`);\n        }\n        return converter.fromStandardImageBlock(block);\n    }\n    if (block.type === \"audio\") {\n        if (!converter.fromStandardAudioBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardAudioBlock\\` method.`);\n        }\n        return converter.fromStandardAudioBlock(block);\n    }\n    if (block.type === \"file\") {\n        if (!converter.fromStandardFileBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardFileBlock\\` method.`);\n        }\n        return converter.fromStandardFileBlock(block);\n    }\n    throw new Error(`Unable to convert content block type '${block.type}' to provider-specific format: not recognized.`);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/base.js"],"sourcesContent":["import { Serializable } from \"../load/serializable.js\";\nimport { isDataContentBlock, } from \"./content_blocks.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (firstContent === \"\") {\n            return secondContent;\n        }\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else if (Array.isArray(secondContent) &&\n            secondContent.some((c) => isDataContentBlock(c))) {\n            return [\n                {\n                    type: \"text\",\n                    source_type: \"text\",\n                    text: firstContent,\n                },\n                ...secondContent,\n            ];\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        if (secondContent === \"\") {\n            return firstContent;\n        }\n        else if (Array.isArray(firstContent) &&\n            firstContent.some((c) => isDataContentBlock(c))) {\n            return [\n                ...firstContent,\n                {\n                    type: \"file\",\n                    source_type: \"text\",\n                    text: secondContent,\n                },\n            ];\n        }\n        else {\n            return [...firstContent, { type: \"text\", text: secondContent }];\n        }\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * Get text content of the message.\n     */\n    get text() {\n        if (typeof this.content === \"string\") {\n            return this.content;\n        }\n        if (!Array.isArray(this.content))\n            return \"\";\n        return this.content\n            .map((c) => {\n            if (typeof c === \"string\")\n                return c;\n            if (c.type === \"text\")\n                return c.text;\n            return \"\";\n        })\n            .join(\"\");\n    }\n    /** The type of the message. */\n    getType() {\n        return this._getType();\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            merged[key] += value;\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/tool.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeObj, _mergeStatus, } from \"./base.js\";\nexport function isDirectToolOutput(x) {\n    return (x != null &&\n        typeof x === \"object\" &&\n        \"lc_direct_tool_output\" in x &&\n        x.lc_direct_tool_output === true);\n}\n/**\n * Represents a tool message in a conversation.\n */\nexport class ToolMessage extends BaseMessage {\n    static lc_name() {\n        return \"ToolMessage\";\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { tool_call_id: \"tool_call_id\" };\n    }\n    constructor(fields, tool_call_id, name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name, tool_call_id: tool_call_id };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_direct_tool_output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    _getType() {\n        return \"tool\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"tool\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nexport class ToolMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    static lc_name() {\n        return \"ToolMessageChunk\";\n    }\n    _getType() {\n        return \"tool\";\n    }\n    concat(chunk) {\n        return new ToolMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            artifact: _mergeObj(this.artifact, chunk.artifact),\n            tool_call_id: this.tool_call_id,\n            id: this.id ?? chunk.id,\n            status: _mergeStatus(this.status, chunk.status),\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\nexport function defaultToolCallParser(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCalls) {\n    const toolCalls = [];\n    const invalidToolCalls = [];\n    for (const toolCall of rawToolCalls) {\n        if (!toolCall.function) {\n            continue;\n        }\n        else {\n            const functionName = toolCall.function.name;\n            try {\n                const functionArgs = JSON.parse(toolCall.function.arguments);\n                const parsed = {\n                    name: functionName || \"\",\n                    args: functionArgs || {},\n                    id: toolCall.id,\n                };\n                toolCalls.push(parsed);\n            }\n            catch (error) {\n                invalidToolCalls.push({\n                    name: functionName,\n                    args: toolCall.function.arguments,\n                    id: toolCall.id,\n                    error: \"Malformed args.\",\n                });\n            }\n        }\n    }\n    return [toolCalls, invalidToolCalls];\n}\nexport function isToolMessage(x) {\n    return x._getType() === \"tool\";\n}\nexport function isToolMessageChunk(x) {\n    return x._getType() === \"tool\";\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/ai.js"],"sourcesContent":["import { parsePartialJson } from \"../utils/json.js\";\nimport { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeLists, } from \"./base.js\";\nimport { defaultToolCallParser, } from \"./tool.js\";\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = defaultToolCallParser(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n}\nexport function isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\nexport function isAIMessageChunk(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: fields.tool_calls ?? [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        else {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const toolCallChunk of fields.tool_call_chunks) {\n                let parsedArgs = {};\n                try {\n                    parsedArgs = parsePartialJson(toolCallChunk.args || \"{}\");\n                    if (parsedArgs === null ||\n                        typeof parsedArgs !== \"object\" ||\n                        Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name: toolCallChunk.name ?? \"\",\n                        args: parsedArgs,\n                        id: toolCallChunk.id,\n                        type: \"tool_call\",\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name: toolCallChunk.name,\n                        args: toolCallChunk.args,\n                        id: toolCallChunk.id,\n                        error: \"Malformed args.\",\n                        type: \"invalid_tool_call\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_chunks =\n            initParams.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            tool_call_chunks: this.tool_call_chunks,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n            id: this.id ?? chunk.id,\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = _mergeLists(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        if (this.usage_metadata !== undefined ||\n            chunk.usage_metadata !== undefined) {\n            const inputTokenDetails = {\n                ...((this.usage_metadata?.input_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.input_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.input_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_read !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_read !==\n                        undefined) && {\n                    cache_read: (this.usage_metadata?.input_token_details?.cache_read ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_read ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_creation !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_creation !==\n                        undefined) && {\n                    cache_creation: (this.usage_metadata?.input_token_details?.cache_creation ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_creation ?? 0),\n                }),\n            };\n            const outputTokenDetails = {\n                ...((this.usage_metadata?.output_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.output_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.output_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.output_token_details?.reasoning !==\n                    undefined ||\n                    chunk.usage_metadata?.output_token_details?.reasoning !==\n                        undefined) && {\n                    reasoning: (this.usage_metadata?.output_token_details?.reasoning ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.reasoning ?? 0),\n                }),\n            };\n            const left = this.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const right = chunk.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const usage_metadata = {\n                input_tokens: left.input_tokens + right.input_tokens,\n                output_tokens: left.output_tokens + right.output_tokens,\n                total_tokens: left.total_tokens + right.total_tokens,\n                // Do not include `input_token_details` / `output_token_details` keys in combined fields\n                // unless their values are defined.\n                ...(Object.keys(inputTokenDetails).length > 0 && {\n                    input_token_details: inputTokenDetails,\n                }),\n                ...(Object.keys(outputTokenDetails).length > 0 && {\n                    output_token_details: outputTokenDetails,\n                }),\n            };\n            combinedFields.usage_metadata = usage_metadata;\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/chat.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage extends BaseMessage {\n    static lc_name() {\n        return \"ChatMessage\";\n    }\n    static _chatMessageClass() {\n        return ChatMessage;\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"generic\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"ChatMessageChunk\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    concat(chunk) {\n        return new ChatMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            role: this.role,\n            id: this.id ?? chunk.id,\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\nexport function isChatMessage(x) {\n    return x._getType() === \"generic\";\n}\nexport function isChatMessageChunk(x) {\n    return x._getType() === \"generic\";\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,MAAM,oBAAoB,iKAAA,CAAA,cAAW;IACxC,OAAO,UAAU;QACb,OAAO;IACX;IACA,OAAO,oBAAoB;QACvB,OAAO;IACX;IACA,YAAY,MAAM,EAAE,IAAI,CAAE;QACtB,IAAI,OAAO,WAAW,UAAU;YAC5B,uFAAuF;YACvF,SAAS;gBAAE,SAAS;gBAAQ,MAAM;YAAK;QAC3C;QACA,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,IAAI,GAAG,OAAO,IAAI;IAC3B;IACA,WAAW;QACP,OAAO;IACX;IACA,OAAO,WAAW,OAAO,EAAE;QACvB,OAAO,QAAQ,QAAQ,OAAO;IAClC;IACA,IAAI,mBAAmB;QACnB,OAAO;YACH,GAAG,KAAK,CAAC,gBAAgB;YACzB,MAAM,IAAI,CAAC,IAAI;QACnB;IACJ;AACJ;AAKO,MAAM,yBAAyB,iKAAA,CAAA,mBAAgB;IAClD,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,EAAE,IAAI,CAAE;QACtB,IAAI,OAAO,WAAW,UAAU;YAC5B,uFAAuF;YACvF,SAAS;gBAAE,SAAS;gBAAQ,MAAM;YAAK;QAC3C;QACA,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,IAAI,GAAG,OAAO,IAAI;IAC3B;IACA,WAAW;QACP,OAAO;IACX;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,iBAAiB;YACxB,SAAS,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,OAAO;YACjD,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,MAAM,IAAI,CAAC,IAAI;YACf,IAAI,IAAI,CAAC,EAAE,IAAI,MAAM,EAAE;QAC3B;IACJ;IACA,IAAI,mBAAmB;QACnB,OAAO;YACH,GAAG,KAAK,CAAC,gBAAgB;YACzB,MAAM,IAAI,CAAC,IAAI;QACnB;IACJ;AACJ;AACO,SAAS,cAAc,CAAC;IAC3B,OAAO,EAAE,QAAQ,OAAO;AAC5B;AACO,SAAS,mBAAmB,CAAC;IAChC,OAAO,EAAE,QAAQ,OAAO;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1354, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/function.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage extends BaseMessage {\n    static lc_name() {\n        return \"FunctionMessage\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name: name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"FunctionMessageChunk\";\n    }\n    _getType() {\n        return \"function\";\n    }\n    concat(chunk) {\n        return new FunctionMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            name: this.name ?? \"\",\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isFunctionMessage(x) {\n    return x._getType() === \"function\";\n}\nexport function isFunctionMessageChunk(x) {\n    return x._getType() === \"function\";\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,MAAM,wBAAwB,iKAAA,CAAA,cAAW;IAC5C,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,EAClB,gBAAgB,GAChB,IAAI,CAAE;QACF,IAAI,OAAO,WAAW,UAAU;YAC5B,uFAAuF;YACvF,SAAS;gBAAE,SAAS;gBAAQ,MAAM;YAAK;QAC3C;QACA,KAAK,CAAC;IACV;IACA,WAAW;QACP,OAAO;IACX;AACJ;AAKO,MAAM,6BAA6B,iKAAA,CAAA,mBAAgB;IACtD,OAAO,UAAU;QACb,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,qBAAqB;YAC5B,SAAS,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,OAAO;YACjD,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,MAAM,IAAI,CAAC,IAAI,IAAI;YACnB,IAAI,IAAI,CAAC,EAAE,IAAI,MAAM,EAAE;QAC3B;IACJ;AACJ;AACO,SAAS,kBAAkB,CAAC;IAC/B,OAAO,EAAE,QAAQ,OAAO;AAC5B;AACO,SAAS,uBAAuB,CAAC;IACpC,OAAO,EAAE,QAAQ,OAAO;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1409, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/human.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a human message in a conversation.\n */\nexport class HumanMessage extends BaseMessage {\n    static lc_name() {\n        return \"HumanMessage\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport class HumanMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"HumanMessageChunk\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n    concat(chunk) {\n        return new HumanMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isHumanMessage(x) {\n    return x.getType() === \"human\";\n}\nexport function isHumanMessageChunk(x) {\n    return x.getType() === \"human\";\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,MAAM,qBAAqB,iKAAA,CAAA,cAAW;IACzC,OAAO,UAAU;QACb,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,YAAY,MAAM,EAClB,gBAAgB,GAChB,MAAM,CAAE;QACJ,KAAK,CAAC,QAAQ;IAClB;AACJ;AAKO,MAAM,0BAA0B,iKAAA,CAAA,mBAAgB;IACnD,OAAO,UAAU;QACb,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,YAAY,MAAM,EAClB,gBAAgB,GAChB,MAAM,CAAE;QACJ,KAAK,CAAC,QAAQ;IAClB;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,kBAAkB;YACzB,SAAS,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,OAAO;YACjD,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,IAAI,IAAI,CAAC,EAAE,IAAI,MAAM,EAAE;QAC3B;IACJ;AACJ;AACO,SAAS,eAAe,CAAC;IAC5B,OAAO,EAAE,OAAO,OAAO;AAC3B;AACO,SAAS,oBAAoB,CAAC;IACjC,OAAO,EAAE,OAAO,OAAO;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/system.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isSystemMessage(x) {\n    return x._getType() === \"system\";\n}\nexport function isSystemMessageChunk(x) {\n    return x._getType() === \"system\";\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,MAAM,sBAAsB,iKAAA,CAAA,cAAW;IAC1C,OAAO,UAAU;QACb,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,YAAY,MAAM,EAClB,gBAAgB,GAChB,MAAM,CAAE;QACJ,KAAK,CAAC,QAAQ;IAClB;AACJ;AAKO,MAAM,2BAA2B,iKAAA,CAAA,mBAAgB;IACpD,OAAO,UAAU;QACb,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,YAAY,MAAM,EAClB,gBAAgB,GAChB,MAAM,CAAE;QACJ,KAAK,CAAC,QAAQ;IAClB;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,mBAAmB;YAC1B,SAAS,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,OAAO;YACjD,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,mBAAmB,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,iBAAiB;YAC9E,IAAI,IAAI,CAAC,EAAE,IAAI,MAAM,EAAE;QAC3B;IACJ;AACJ;AACO,SAAS,gBAAgB,CAAC;IAC7B,OAAO,EAAE,QAAQ,OAAO;AAC5B;AACO,SAAS,qBAAqB,CAAC;IAClC,OAAO,EAAE,QAAQ,OAAO;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/errors/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nexport function addLangChainErrorFields(error, lc_error_code) {\n    error.lc_error_code = lc_error_code;\n    error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n    return error;\n}\n"],"names":[],"mappings":"AAAA,qDAAqD,GACrD,oCAAoC;;;AAC7B,SAAS,wBAAwB,KAAK,EAAE,aAAa;IACxD,MAAM,aAAa,GAAG;IACtB,MAAM,OAAO,GAAG,GAAG,MAAM,OAAO,CAAC,8EAA8E,EAAE,cAAc,GAAG,CAAC;IACnI,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1523, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tools/utils.js"],"sourcesContent":["export function _isToolCall(toolCall) {\n    return !!(toolCall &&\n        typeof toolCall === \"object\" &&\n        \"type\" in toolCall &&\n        toolCall.type === \"tool_call\");\n}\nexport function _configHasToolCallId(config) {\n    return !!(config &&\n        typeof config === \"object\" &&\n        \"toolCall\" in config &&\n        config.toolCall != null &&\n        typeof config.toolCall === \"object\" &&\n        \"id\" in config.toolCall &&\n        typeof config.toolCall.id === \"string\");\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,YAAY,QAAQ;IAChC,OAAO,CAAC,CAAC,CAAC,YACN,OAAO,aAAa,YACpB,UAAU,YACV,SAAS,IAAI,KAAK,WAAW;AACrC;AACO,SAAS,qBAAqB,MAAM;IACvC,OAAO,CAAC,CAAC,CAAC,UACN,OAAO,WAAW,YAClB,cAAc,UACd,OAAO,QAAQ,IAAI,QACnB,OAAO,OAAO,QAAQ,KAAK,YAC3B,QAAQ,OAAO,QAAQ,IACvB,OAAO,OAAO,QAAQ,CAAC,EAAE,KAAK,QAAQ;AAC9C;AAMO,MAAM,kCAAkC;IAC3C,YAAY,OAAO,EAAE,MAAM,CAAE;QACzB,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,MAAM,GAAG;IAClB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/utils.js"],"sourcesContent":["import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction isSerializedConstructor(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        x.lc === 1 &&\n        Array.isArray(x.id) &&\n        x.kwargs != null &&\n        typeof x.kwargs === \"object\");\n}\nfunction _constructMessageFromParams(params) {\n    let type;\n    let rest;\n    // Support serialized messages\n    if (isSerializedConstructor(params)) {\n        const className = params.id.at(-1);\n        if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n            type = \"user\";\n        }\n        else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n            type = \"assistant\";\n        }\n        else if (className === \"SystemMessage\" ||\n            className === \"SystemMessageChunk\") {\n            type = \"system\";\n        }\n        else if (className === \"FunctionMessage\" ||\n            className === \"FunctionMessageChunk\") {\n            type = \"function\";\n        }\n        else if (className === \"ToolMessage\" ||\n            className === \"ToolMessageChunk\") {\n            type = \"tool\";\n        }\n        else {\n            type = \"unknown\";\n        }\n        rest = params.kwargs;\n    }\n    else {\n        const { type: extractedType, ...otherParams } = params;\n        type = extractedType;\n        rest = otherParams;\n    }\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"developer\") {\n        return new SystemMessage({\n            ...rest,\n            additional_kwargs: {\n                ...rest.additional_kwargs,\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else {\n        const error = addLangChainErrorFields(new Error(`Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(params, null, 2)}`), \"MESSAGE_COERCION_FAILURE\");\n        throw error;\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1814, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/fast-json-patch/src/helpers.js"],"sourcesContent":["// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1994, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/fast-json-patch/src/core.js"],"sourcesContent":["// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/fast-json-patch/src/duplex.js"],"sourcesContent":["// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty, } from \"./helpers.js\";\nimport { applyPatch } from \"./core.js\";\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + escapePathComponent(key),\n                            value: _deepClone(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + escapePathComponent(key),\n                        value: _deepClone(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + escapePathComponent(key),\n                    value: _deepClone(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + escapePathComponent(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + escapePathComponent(key),\n                value: _deepClone(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n"],"names":[],"mappings":"AAAA,cAAc;AACd,uCAAuC;AACvC;;;;CAIC;;;;;;AACD;AACA;;;AACA,IAAI,aAAa,IAAI;AACrB,MAAM;IACF,YAAY,GAAG,CAAE;QACb,OAAO,cAAc,CAAC,IAAI,EAAE,OAAO;YAC/B,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;YACrC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,IAAI;QACf;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,GAAG,GAAG;IACf;AACJ;AACA,MAAM;IACF,YAAY,QAAQ,EAAE,QAAQ,CAAE;QAC5B,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;YACpC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;YACpC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;IACpB;AACJ;AACA,SAAS,UAAU,GAAG;IAClB,OAAO,WAAW,GAAG,CAAC;AAC1B;AACA,SAAS,sBAAsB,MAAM,EAAE,QAAQ;IAC3C,OAAO,OAAO,SAAS,CAAC,GAAG,CAAC;AAChC;AACA,SAAS,yBAAyB,MAAM,EAAE,QAAQ;IAC9C,OAAO,SAAS,CAAC,MAAM,CAAC,SAAS,QAAQ;AAC7C;AAIO,SAAS,UAAU,IAAI,EAAE,QAAQ;IACpC,SAAS,SAAS;AACtB;AAIO,SAAS,QAAQ,GAAG,EAAE,QAAQ;IACjC,IAAI,UAAU,EAAE;IAChB,IAAI;IACJ,IAAI,SAAS,UAAU;IACvB,IAAI,CAAC,QAAQ;QACT,SAAS,IAAI,OAAO;QACpB,WAAW,GAAG,CAAC,KAAK;IACxB,OACK;QACD,MAAM,eAAe,sBAAsB,QAAQ;QACnD,WAAW,gBAAgB,aAAa,QAAQ;IACpD;IACA,IAAI,UAAU;QACV,OAAO;IACX;IACA,WAAW,CAAC;IACZ,OAAO,KAAK,GAAG,CAAA,GAAA,iMAAA,CAAA,aAAU,AAAD,EAAE;IAC1B,IAAI,UAAU;QACV,SAAS,QAAQ,GAAG;QACpB,SAAS,IAAI,GAAG;QAChB,IAAI,aAAa;YACb,SAAS;QACb;QACA,IAAI,YAAY;YACZ,aAAa,SAAS,IAAI;YAC1B,SAAS,IAAI,GAAG,WAAW;QAC/B;QACA,uCAAmC;;QAOnC;IACJ;IACA,SAAS,OAAO,GAAG;IACnB,SAAS,MAAM,GAAG;IAClB,SAAS,SAAS,GAAG;QACjB,SAAS;QACT,aAAa,SAAS,IAAI;QAC1B,yBAAyB,QAAQ;QACjC,uCAAmC;;QAMnC;IACJ;IACA,OAAO,SAAS,CAAC,GAAG,CAAC,UAAU,IAAI,aAAa,UAAU;IAC1D,OAAO;AACX;AAIO,SAAS,SAAS,QAAQ,EAAE,aAAa,KAAK;IACjD,IAAI,SAAS,WAAW,GAAG,CAAC,SAAS,MAAM;IAC3C,UAAU,OAAO,KAAK,EAAE,SAAS,MAAM,EAAE,SAAS,OAAO,EAAE,IAAI;IAC/D,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE;QACzB,CAAA,GAAA,8LAAA,CAAA,aAAU,AAAD,EAAE,OAAO,KAAK,EAAE,SAAS,OAAO;IAC7C;IACA,IAAI,OAAO,SAAS,OAAO;IAC3B,IAAI,KAAK,MAAM,GAAG,GAAG;QACjB,SAAS,OAAO,GAAG,EAAE;QACrB,IAAI,SAAS,QAAQ,EAAE;YACnB,SAAS,QAAQ,CAAC;QACtB;IACJ;IACA,OAAO;AACX;AACA,kFAAkF;AAClF,SAAS,UAAU,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU;IACrD,IAAI,QAAQ,QAAQ;QAChB;IACJ;IACA,IAAI,OAAO,IAAI,MAAM,KAAK,YAAY;QAClC,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,UAAU,CAAA,GAAA,iMAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,IAAI,UAAU,CAAA,GAAA,iMAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,IAAI,UAAU;IACd,IAAI,UAAU;IACd,8HAA8H;IAC9H,IAAK,IAAI,IAAI,QAAQ,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC1C,IAAI,MAAM,OAAO,CAAC,EAAE;QACpB,IAAI,SAAS,MAAM,CAAC,IAAI;QACxB,IAAI,CAAA,GAAA,iMAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,QACpB,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,aACX,WAAW,aACX,MAAM,OAAO,CAAC,SAAS,KAAK,GAAG;YACnC,IAAI,SAAS,GAAG,CAAC,IAAI;YACrB,IAAI,OAAO,UAAU,YACjB,UAAU,QACV,OAAO,UAAU,YACjB,UAAU,QACV,MAAM,OAAO,CAAC,YAAY,MAAM,OAAO,CAAC,SAAS;gBACjD,UAAU,QAAQ,QAAQ,SAAS,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE,MAAM;YAC9E,OACK;gBACD,IAAI,WAAW,QAAQ;oBACnB,UAAU;oBACV,IAAI,YAAY;wBACZ,QAAQ,IAAI,CAAC;4BACT,IAAI;4BACJ,MAAM,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE;4BACvC,OAAO,CAAA,GAAA,iMAAA,CAAA,aAAU,AAAD,EAAE;wBACtB;oBACJ;oBACA,QAAQ,IAAI,CAAC;wBACT,IAAI;wBACJ,MAAM,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE;wBACvC,OAAO,CAAA,GAAA,iMAAA,CAAA,aAAU,AAAD,EAAE;oBACtB;gBACJ;YACJ;QACJ,OACK,IAAI,MAAM,OAAO,CAAC,YAAY,MAAM,OAAO,CAAC,MAAM;YACnD,IAAI,YAAY;gBACZ,QAAQ,IAAI,CAAC;oBACT,IAAI;oBACJ,MAAM,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE;oBACvC,OAAO,CAAA,GAAA,iMAAA,CAAA,aAAU,AAAD,EAAE;gBACtB;YACJ;YACA,QAAQ,IAAI,CAAC;gBACT,IAAI;gBACJ,MAAM,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE;YAC3C;YACA,UAAU,MAAM,4BAA4B;QAChD,OACK;YACD,IAAI,YAAY;gBACZ,QAAQ,IAAI,CAAC;oBAAE,IAAI;oBAAQ;oBAAM,OAAO;gBAAO;YACnD;YACA,QAAQ,IAAI,CAAC;gBAAE,IAAI;gBAAW;gBAAM,OAAO;YAAI;YAC/C,UAAU;QACd;IACJ;IACA,IAAI,CAAC,WAAW,QAAQ,MAAM,IAAI,QAAQ,MAAM,EAAE;QAC9C;IACJ;IACA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;QACrC,IAAI,MAAM,OAAO,CAAC,EAAE;QACpB,IAAI,CAAC,CAAA,GAAA,iMAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,QAAQ,GAAG,CAAC,IAAI,KAAK,WAAW;YACxD,QAAQ,IAAI,CAAC;gBACT,IAAI;gBACJ,MAAM,OAAO,MAAM,CAAA,GAAA,iMAAA,CAAA,sBAAmB,AAAD,EAAE;gBACvC,OAAO,CAAA,GAAA,iMAAA,CAAA,aAAU,AAAD,EAAE,GAAG,CAAC,IAAI;YAC9B;QACJ;IACJ;AACJ;AAIO,SAAS,QAAQ,KAAK,EAAE,KAAK,EAAE,aAAa,KAAK;IACpD,IAAI,UAAU,EAAE;IAChB,UAAU,OAAO,OAAO,SAAS,IAAI;IACrC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2592, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/fast-json-patch/index.js"],"sourcesContent":["export * from \"./src/core.js\";\nexport * from \"./src/duplex.js\";\nexport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\n/**\n * Default export for backwards compat\n */\nimport * as core from \"./src/core.js\";\nimport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\nexport default {\n    ...core,\n    // ...duplex,\n    JsonPatchError,\n    deepClone,\n    escapePathComponent,\n    unescapePathComponent,\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;uCAMe;IACX,GAAG,8LAAI;IACP,aAAa;IACb,gBAAA,iMAAA,CAAA,aAAc;IACd,WAAA,iMAAA,CAAA,aAAS;IACT,qBAAA,iMAAA,CAAA,sBAAmB;IACnB,uBAAA,iMAAA,CAAA,wBAAqB;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/env.js"],"sourcesContent":["export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,YAAY,IAAM,gBAAkB,eAAe,OAAO,OAAO,QAAQ,KAAK;AACpF,MAAM,cAAc,IAAM,OAAO,eAAe,YACnD,WAAW,WAAW,IACtB,WAAW,WAAW,CAAC,IAAI,KAAK;AAC7B,MAAM,UAAU,IAAM,AAAC,gBAAkB,eAAe,OAAO,IAAI,KAAK,YAC1E,OAAO,cAAc,eAClB,CAAC,UAAU,SAAS,CAAC,QAAQ,CAAC,cAC1B,UAAU,SAAS,CAAC,QAAQ,CAAC,QAAQ;AAG1C,MAAM,SAAS,IAAM,OAAO,SAAS;AAErC,MAAM,SAAS,IAAM,OAAO,YAAY,eAC3C,OAAO,QAAQ,QAAQ,KAAK,eAC5B,OAAO,QAAQ,QAAQ,CAAC,IAAI,KAAK,eACjC,CAAC;AACE,MAAM,SAAS;IAClB,IAAI;IACJ,IAAI,aAAa;QACb,MAAM;IACV,OACK,IAAI,UAAU;QACf,MAAM;IACV,OACK,IAAI,eAAe;QACpB,MAAM;IACV,OACK,IAAI,WAAW;QAChB,MAAM;IACV,OACK,IAAI,UAAU;QACf,MAAM;IACV,OACK;QACD,MAAM;IACV;IACA,OAAO;AACX;AACA,IAAI;AACG,eAAe;IAClB,IAAI,uBAAuB,WAAW;QAClC,MAAM,MAAM;QACZ,qBAAqB;YACjB,SAAS;YACT,SAAS;QACb;IACJ;IACA,OAAO;AACX;AACO,SAAS,uBAAuB,IAAI;IACvC,qFAAqF;IACrF,0DAA0D;IAC1D,IAAI;QACA,IAAI,OAAO,YAAY,aAAa;YAChC,0CAA0C;YAC1C,OAAO,QAAQ,GAAG,EAAE,CAAC,KAAK;QAC9B,OACK,IAAI,UAAU;YACf,OAAO,MAAM,IAAI,IAAI;QACzB,OACK;YACD,OAAO;QACX;IACJ,EACA,OAAO,GAAG;QACN,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2693, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/callbacks/base.js"],"sourcesContent":["import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2851, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/base.js"],"sourcesContent":["import { BaseCallbackHandler, } from \"../callbacks/base.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId, _parentRunId, _tags, extraParams) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId, _parentRunId, _tags, extraParams) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3357, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/console.js"],"sourcesContent":["import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3561, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/tracer.js"],"sourcesContent":["import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nlet client;\nexport const getDefaultLangChainClientSingleton = () => {\n    if (client === undefined) {\n        const clientParams = getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n            ? {\n                // LangSmith has its own backgrounding system\n                blockOnRootRunFinalization: true,\n            }\n            : {};\n        client = new Client(clientParams);\n    }\n    return client;\n};\nexport const setDefaultLangChainClientSingleton = (newClient) => {\n    client = newClient;\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AACA,IAAI;AACG,MAAM,qCAAqC;IAC9C,IAAI,WAAW,WAAW;QACtB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,yBAAsB,AAAD,EAAE,sCAAsC,UAC5E;YACE,6CAA6C;YAC7C,4BAA4B;QAChC,IACE,CAAC;QACP,SAAS,IAAI,6IAAA,CAAA,SAAM,CAAC;IACxB;IACA,OAAO;AACX;AACO,MAAM,qCAAqC,CAAC;IAC/C,SAAS;AACb","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3590, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/tracer_langchain.js"],"sourcesContent":["import { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"../utils/env.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? getDefaultLangChainClientSingleton();\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async onRunUpdate(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            parent_run_id: run.parent_run_id,\n            extra: run.extra,\n            session_name: this.projectName,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    getRun(id) {\n        return this.runMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            // @ts-expect-error Types of property 'events' are incompatible.\n            this.runMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    convertToRunTree(id) {\n        const runTreeMap = {};\n        const runTreeList = [];\n        for (const [id, run] of this.runMap) {\n            // by converting the run map to a run tree, we are doing a copy\n            // thus, any mutation performed on the run tree will not be reflected\n            // back in the run map\n            // TODO: Stop using `this.runMap` in favour of LangSmith's `RunTree`\n            const runTree = new RunTree({\n                ...run,\n                child_runs: [],\n                parent_run: undefined,\n                // inherited properties\n                client: this.client,\n                project_name: this.projectName,\n                reference_example_id: this.exampleId,\n                tracingEnabled: true,\n            });\n            runTreeMap[id] = runTree;\n            runTreeList.push([id, run.dotted_order]);\n        }\n        runTreeList.sort((a, b) => {\n            if (!a[1] || !b[1])\n                return 0;\n            return a[1].localeCompare(b[1]);\n        });\n        for (const [id] of runTreeList) {\n            const run = this.runMap.get(id);\n            const runTree = runTreeMap[id];\n            if (!run || !runTree)\n                continue;\n            if (run.parent_run_id) {\n                const parentRunTree = runTreeMap[run.parent_run_id];\n                if (parentRunTree) {\n                    parentRunTree.child_runs.push(runTree);\n                    runTree.parent_run = parentRunTree;\n                }\n            }\n        }\n        return runTreeMap[id];\n    }\n    static getTraceableRunTree() {\n        try {\n            return (\n            // The type cast here provides forward compatibility. Old versions of LangSmith will just\n            // ignore the permitAbsentRunTree arg.\n            getCurrentRunTree(true));\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3761, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/async_local_storage/globals.js"],"sourcesContent":["export const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\nexport const setGlobalAsyncLocalStorageInstance = (instance) => {\n    globalThis[TRACING_ALS_KEY] = instance;\n};\nexport const getGlobalAsyncLocalStorageInstance = () => {\n    return globalThis[TRACING_ALS_KEY];\n};\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,kBAAkB,OAAO,GAAG,CAAC;AACnC,MAAM,yBAAyB,OAAO,GAAG,CAAC;AAC1C,MAAM,qCAAqC,CAAC;IAC/C,UAAU,CAAC,gBAAgB,GAAG;AAClC;AACO,MAAM,qCAAqC;IAC9C,OAAO,UAAU,CAAC,gBAAgB;AACtC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3781, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/callbacks.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\nexport function getQueue() {\n    if (typeof queue === \"undefined\") {\n        queue = createQueue();\n    }\n    return queue;\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        // Clear config since callbacks are not part of the root run\n        // Avoid using global singleton due to circuluar dependency issues\n        const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n        if (asyncLocalStorageInstance !== undefined) {\n            await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n        }\n        else {\n            await promiseFn();\n        }\n    }\n    else {\n        queue = getQueue();\n        void queue.add(async () => {\n            const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n            if (asyncLocalStorageInstance !== undefined) {\n                await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n            }\n            else {\n                await promiseFn();\n            }\n        });\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AACrD;AACA;;;AACA,IAAI;AACJ;;;;CAIC,GACD,SAAS;IACL,MAAM,SAAS,aAAa,6IAAA,CAAA,UAAS,GAAG,6IAAA,CAAA,UAAS,CAAC,OAAO,GAAG,6IAAA,CAAA,UAAS;IACrE,OAAO,IAAI,OAAO;QACd,WAAW;QACX,aAAa;IACjB;AACJ;AACO,SAAS;IACZ,IAAI,OAAO,UAAU,aAAa;QAC9B,QAAQ;IACZ;IACA,OAAO;AACX;AAMO,eAAe,gBAAgB,SAAS,EAAE,IAAI;IACjD,IAAI,SAAS,MAAM;QACf,4DAA4D;QAC5D,kEAAkE;QAClE,MAAM,4BAA4B,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD;QACnE,IAAI,8BAA8B,WAAW;YACzC,MAAM,0BAA0B,GAAG,CAAC,WAAW,UAAY;QAC/D,OACK;YACD,MAAM;QACV;IACJ,OACK;QACD,QAAQ;QACR,KAAK,MAAM,GAAG,CAAC;YACX,MAAM,4BAA4B,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD;YACnE,IAAI,8BAA8B,WAAW;gBACzC,MAAM,0BAA0B,GAAG,CAAC,WAAW,UAAY;YAC/D,OACK;gBACD,MAAM;YACV;QACJ;IACJ;AACJ;AAKO,SAAS;IACZ,OAAO,OAAO,UAAU,cAAc,MAAM,MAAM,KAAK,QAAQ,OAAO;AAC1E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3839, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/callbacks/promises.js"],"sourcesContent":["import { awaitAllCallbacks, consumeCallback } from \"../singletons/callbacks.js\";\nexport { awaitAllCallbacks, consumeCallback };\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3858, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/callbacks.js"],"sourcesContent":["import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAC;IAC7B,IAAI,mBAAmB,WAAW;QAC9B,OAAO;IACX;IACA,MAAM,UAAU;QACZ;QACA;QACA;QACA;KACH;IACD,OAAO,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,SAAW,CAAA,GAAA,6JAAA,CAAA,yBAAsB,AAAD,EAAE,YAAY;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3881, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/async_local_storage/context.js"],"sourcesContent":["import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { _CONTEXT_VARIABLES_KEY, getGlobalAsyncLocalStorageInstance, } from \"./globals.js\";\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContextVariable(name, value) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        throw new Error(`Internal error: Global shared async local storage instance has not been initialized.`);\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n    contextVars[name] = value;\n    let newValue = {};\n    if (isRunTree(runTree)) {\n        newValue = new RunTree(runTree);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newValue[_CONTEXT_VARIABLES_KEY] = contextVars;\n    asyncLocalStorageInstance.enterWith(newValue);\n}\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable(name) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        return undefined;\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\nexport const _getConfigureHooks = () => getContextVariable(LC_CONFIGURE_HOOKS_KEY) || [];\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config) => {\n    if (config.envVar && !config.handlerClass) {\n        throw new Error(\"If envVar is set, handlerClass must also be set to a non-None value.\");\n    }\n    setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;;;AAoDO,SAAS,mBAAmB,IAAI,EAAE,KAAK;IAC1C,kEAAkE;IAClE,MAAM,4BAA4B,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD;IACnE,IAAI,8BAA8B,WAAW;QACzC,MAAM,IAAI,MAAM,CAAC,oFAAoF,CAAC;IAC1G;IACA,MAAM,UAAU,0BAA0B,QAAQ;IAClD,MAAM,cAAc;QAAE,GAAG,SAAS,CAAC,6LAAA,CAAA,yBAAsB,CAAC;IAAC;IAC3D,WAAW,CAAC,KAAK,GAAG;IACpB,IAAI,WAAW,CAAC;IAChB,IAAI,CAAA,GAAA,gJAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QACpB,WAAW,IAAI,gJAAA,CAAA,UAAO,CAAC;IAC3B;IACA,8DAA8D;IAC9D,QAAQ,CAAC,6LAAA,CAAA,yBAAsB,CAAC,GAAG;IACnC,0BAA0B,SAAS,CAAC;AACxC;AAmDO,SAAS,mBAAmB,IAAI;IACnC,kEAAkE;IAClE,MAAM,4BAA4B,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD;IACnE,IAAI,8BAA8B,WAAW;QACzC,OAAO;IACX;IACA,MAAM,UAAU,0BAA0B,QAAQ;IAClD,OAAO,SAAS,CAAC,6LAAA,CAAA,yBAAsB,CAAC,EAAE,CAAC,KAAK;AACpD;AACA,MAAM,yBAAyB,OAAO;AAC/B,MAAM,qBAAqB,IAAM,mBAAmB,2BAA2B,EAAE;AA8CjF,MAAM,wBAAwB,CAAC;IAClC,IAAI,OAAO,MAAM,IAAI,CAAC,OAAO,YAAY,EAAE;QACvC,MAAM,IAAI,MAAM;IACpB;IACA,mBAAmB,wBAAwB;WAAI;QAAsB;KAAO;AAChF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3937, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/callbacks/manager.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, isBaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport { getContextVariable, _getConfigureHooks, } from \"../singletons/async_local_storage/context.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                    // handoff between langchain and langsmith/traceable\n                    // override the parent run ID\n                    callbackManager._parentRunId =\n                        LangChainTracer.getTraceableRunTree()?.id ??\n                            callbackManager._parentRunId;\n                }\n            }\n        }\n        for (const { contextVar, inheritable = true, handlerClass, envVar, } of _getConfigureHooks()) {\n            const createIfNotInContext = envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n            let handler;\n            const contextVarValue = contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n            if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n                handler = contextVarValue;\n            }\n            else if (createIfNotInContext) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                handler = new handlerClass({});\n            }\n            if (handler !== undefined) {\n                if (!callbackManager) {\n                    callbackManager = new CallbackManager();\n                }\n                if (!callbackManager.handlers.some((h) => h.name === handler.name)) {\n                    callbackManager.addHandler(handler, inheritable);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @deprecated Use [`traceable`](https://docs.smith.langchain.com/observability/how_to_guides/tracing/annotate_code)\n * from \"langsmith\" instead.\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4771, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/async_local_storage/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { getGlobalAsyncLocalStorageInstance, setGlobalAsyncLocalStorageInstance, _CONTEXT_VARIABLES_KEY, } from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n    enterWith(_store) {\n        return undefined;\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const previousValue = storage.getStore();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.convertToRunTree(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        if (previousValue !== undefined &&\n            previousValue[_CONTEXT_VARIABLES_KEY] !== undefined) {\n            if (runTree === undefined) {\n                runTree = {};\n            }\n            runTree[_CONTEXT_VARIABLES_KEY] =\n                previousValue[_CONTEXT_VARIABLES_KEY];\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (getGlobalAsyncLocalStorageInstance() === undefined) {\n            setGlobalAsyncLocalStorageInstance(instance);\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;AACrD;AAAA;AACA;AACA;;;;AACO,MAAM;IACT,WAAW;QACP,OAAO;IACX;IACA,IAAI,MAAM,EAAE,QAAQ,EAAE;QAClB,OAAO;IACX;IACA,UAAU,MAAM,EAAE;QACd,OAAO;IACX;AACJ;AACA,MAAM,wBAAwB,IAAI;AAClC,MAAM,eAAe,OAAO,GAAG,CAAC;AAChC,MAAM;IACF,cAAc;QACV,OAAO,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD,OAAO;IACnD;IACA,oBAAoB;QAChB,MAAM,UAAU,IAAI,CAAC,WAAW;QAChC,+BAA+B;QAC/B,wEAAwE;QACxE,gCAAgC;QAChC,OAAO,QAAQ,QAAQ,IAAI,OAAO,CAAC,aAAa;IACpD;IACA,cAAc,MAAM,EAAE,QAAQ,EAAE,wBAAwB,EAAE;QACtD,MAAM,kBAAkB,qKAAA,CAAA,kBAAe,CAAC,cAAc,CAAC,QAAQ,WAAW,WAAW,QAAQ,MAAM,WAAW,QAAQ;QACtH,MAAM,UAAU,IAAI,CAAC,WAAW;QAChC,MAAM,gBAAgB,QAAQ,QAAQ;QACtC,MAAM,cAAc,iBAAiB;QACrC,MAAM,kBAAkB,iBAAiB,UAAU,KAAK,CAAC,UAAY,SAAS,SAAS;QACvF,IAAI;QACJ,IAAI,mBAAmB,aAAa;YAChC,UAAU,gBAAgB,gBAAgB,CAAC;QAC/C,OACK,IAAI,CAAC,0BAA0B;YAChC,UAAU,IAAI,gJAAA,CAAA,UAAO,CAAC;gBAClB,MAAM;gBACN,gBAAgB;YACpB;QACJ;QACA,IAAI,SAAS;YACT,QAAQ,KAAK,GAAG;gBAAE,GAAG,QAAQ,KAAK;gBAAE,CAAC,aAAa,EAAE;YAAO;QAC/D;QACA,IAAI,kBAAkB,aAClB,aAAa,CAAC,6LAAA,CAAA,yBAAsB,CAAC,KAAK,WAAW;YACrD,IAAI,YAAY,WAAW;gBACvB,UAAU,CAAC;YACf;YACA,OAAO,CAAC,6LAAA,CAAA,yBAAsB,CAAC,GAC3B,aAAa,CAAC,6LAAA,CAAA,yBAAsB,CAAC;QAC7C;QACA,OAAO,QAAQ,GAAG,CAAC,SAAS;IAChC;IACA,yBAAyB,QAAQ,EAAE;QAC/B,IAAI,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD,QAAQ,WAAW;YACpD,CAAA,GAAA,6LAAA,CAAA,qCAAkC,AAAD,EAAE;QACvC;IACJ;AACJ;AACA,MAAM,qCAAqC,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4849, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/singletons/index.js"],"sourcesContent":["import { AsyncLocalStorageProviderSingleton, MockAsyncLocalStorage, } from \"./async_local_storage/index.js\";\nimport { _CONTEXT_VARIABLES_KEY } from \"./async_local_storage/globals.js\";\nexport { AsyncLocalStorageProviderSingleton, MockAsyncLocalStorage, };\nexport { _CONTEXT_VARIABLES_KEY };\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4872, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/config.js"],"sourcesContent":["import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"timeout\") {\n                if (copy.timeout === undefined) {\n                    copy.timeout = options.timeout;\n                }\n                else if (options.timeout !== undefined) {\n                    copy.timeout = Math.min(copy.timeout, options.timeout);\n                }\n            }\n            else if (key === \"signal\") {\n                if (copy.signal === undefined) {\n                    copy.signal = options.signal;\n                }\n                else if (options.signal !== undefined) {\n                    if (\"any\" in AbortSignal) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        copy.signal = AbortSignal.any([\n                            copy.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        copy.signal = options.signal;\n                    }\n                }\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig(config) {\n    const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    let empty = {\n        tags: [],\n        metadata: {},\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (implicitConfig) {\n        // Don't allow runId and runName to be loaded implicitly, as this can cause\n        // child runs to improperly inherit their parents' run ids.\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { runId, runName, ...rest } = implicitConfig;\n        empty = Object.entries(rest).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (config) {\n        empty = Object.entries(config).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (empty?.configurable) {\n        for (const key of Object.keys(empty.configurable)) {\n            if (PRIMITIVES.has(typeof empty.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = empty.configurable[key];\n            }\n        }\n    }\n    if (empty.timeout !== undefined) {\n        if (empty.timeout <= 0) {\n            throw new Error(\"Timeout must be a positive number\");\n        }\n        const timeoutSignal = AbortSignal.timeout(empty.timeout);\n        if (empty.signal !== undefined) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                empty.signal = AbortSignal.any([empty.signal, timeoutSignal]);\n            }\n        }\n        else {\n            empty.signal = timeoutSignal;\n        }\n        delete empty.timeout;\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function pickRunnableConfigKeys(config) {\n    return config\n        ? {\n            configurable: config.configurable,\n            recursionLimit: config.recursionLimit,\n            callbacks: config.callbacks,\n            tags: config.tags,\n            metadata: config.metadata,\n            maxConcurrency: config.maxConcurrency,\n            timeout: config.timeout,\n            signal: config.signal,\n        }\n        : undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5094, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/signal.js"],"sourcesContent":["export async function raceWithSignal(promise, signal) {\n    if (signal === undefined) {\n        return promise;\n    }\n    let listener;\n    return Promise.race([\n        promise.catch((err) => {\n            if (!signal?.aborted) {\n                throw err;\n            }\n            else {\n                return undefined;\n            }\n        }),\n        new Promise((_, reject) => {\n            listener = () => {\n                reject(new Error(\"Aborted\"));\n            };\n            signal.addEventListener(\"abort\", listener);\n            // Must be here inside the promise to avoid a race condition\n            if (signal.aborted) {\n                reject(new Error(\"Aborted\"));\n            }\n        }),\n    ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n"],"names":[],"mappings":";;;AAAO,eAAe,eAAe,OAAO,EAAE,MAAM;IAChD,IAAI,WAAW,WAAW;QACtB,OAAO;IACX;IACA,IAAI;IACJ,OAAO,QAAQ,IAAI,CAAC;QAChB,QAAQ,KAAK,CAAC,CAAC;YACX,IAAI,CAAC,QAAQ,SAAS;gBAClB,MAAM;YACV,OACK;gBACD,OAAO;YACX;QACJ;QACA,IAAI,QAAQ,CAAC,GAAG;YACZ,WAAW;gBACP,OAAO,IAAI,MAAM;YACrB;YACA,OAAO,gBAAgB,CAAC,SAAS;YACjC,4DAA4D;YAC5D,IAAI,OAAO,OAAO,EAAE;gBAChB,OAAO,IAAI,MAAM;YACrB;QACJ;KACH,EAAE,OAAO,CAAC,IAAM,OAAO,mBAAmB,CAAC,SAAS;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5128, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/stream.js"],"sourcesContent":["import { pickRunnableConfigKeys } from \"../runnables/config.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { raceWithSignal } from \"./signal.js\";\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(params) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = params.generator;\n        this.config = params.config;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.signal = params.signal ?? this.config?.signal;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(params.config), async () => {\n                this.firstResult = params.generator.next();\n                if (params.startSetup) {\n                    this.firstResult.then(params.startSetup).then(resolve, reject);\n                }\n                else {\n                    this.firstResult.then((_result) => resolve(undefined), reject);\n                }\n            }, true);\n        });\n    }\n    async next(...args) {\n        this.signal?.throwIfAborted();\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(this.config), this.signal\n            ? async () => {\n                return raceWithSignal(this.generator.next(...args), this.signal);\n            }\n            : async () => {\n                return this.generator.next(...args);\n            }, true);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, signal, ...args) {\n    const gen = new AsyncGeneratorWithSetup({\n        generator,\n        startSetup,\n        signal,\n    });\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;AACA;;;;AAKO,MAAM,+BAA+B;IACxC,aAAc;QACV,KAAK,IAAI;QACT,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;IACJ;IACA,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS;QAChC;IACJ;IACA,MAAM,OAAO;QACT,IAAI,CAAC,YAAY;QACjB,IAAI;YACA,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI;YACrC,IAAI,OAAO,IAAI,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,0CAA0C;gBACrE,OAAO;oBACH,MAAM;oBACN,OAAO;gBACX;YACJ,OACK;gBACD,OAAO;oBACH,MAAM;oBACN,OAAO,OAAO,KAAK;gBACvB;YACJ;QACJ,EACA,OAAO,GAAG;YACN,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,2CAA2C;YACtE,MAAM;QACV;IACJ;IACA,MAAM,SAAS;QACX,IAAI,CAAC,YAAY;QACjB,yDAAyD;QACzD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,gBAAgB,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,oCAAoC;YAChF,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,qBAAqB;YAChD,MAAM,eAAe,eAAe;QACxC;QACA,OAAO;YAAE,MAAM;YAAM,OAAO;QAAU;IAC1C;IACA,8DAA8D;IAC9D,MAAM,MAAM,CAAC,EAAE;QACX,IAAI,CAAC,YAAY;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,gBAAgB,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,oCAAoC;YAChF,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,qBAAqB;YAChD,MAAM,eAAe,eAAe;QACxC;QACA,MAAM;IACV;IACA,CAAC,OAAO,aAAa,CAAC,GAAG;QACrB,OAAO,IAAI;IACf;IACA,6DAA6D;IAC7D,sEAAsE;IACtE,MAAM,CAAC,OAAO,YAAY,CAAC,GAAG;QAC1B,MAAM,IAAI,CAAC,MAAM;IACrB;IACA,OAAO,mBAAmB,MAAM,EAAE;QAC9B,8GAA8G;QAC9G,MAAM,SAAS,OAAO,SAAS;QAC/B,OAAO,IAAI,uBAAuB;YAC9B,OAAM,UAAU;gBACZ,OAAO;;gBACP,SAAS;oBACL,OAAO,OAAO,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;wBACtC,2DAA2D;wBAC3D,IAAI,MAAM;4BACN,WAAW,KAAK;4BAChB;wBACJ;wBACA,qDAAqD;wBACrD,WAAW,OAAO,CAAC;wBACnB,OAAO;oBACX;gBACJ;YACJ;YACA;gBACI,OAAO,WAAW;YACtB;QACJ;IACJ;IACA,OAAO,mBAAmB,SAAS,EAAE;QACjC,OAAO,IAAI,uBAAuB;YAC9B,MAAM,MAAK,UAAU;gBACjB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,UAAU,IAAI;gBAC5C,2DAA2D;gBAC3D,IAAI,MAAM;oBACN,WAAW,KAAK;gBACpB;gBACA,kGAAkG;gBAClG,WAAW,OAAO,CAAC;YACvB;YACA,MAAM,QAAO,MAAM;gBACf,MAAM,UAAU,MAAM,CAAC;YAC3B;QACJ;IACJ;AACJ;AACO,SAAS,KAAK,IAAI,EAAE,SAAS,CAAC;IACjC,MAAM,UAAU,MAAM,IAAI,CAAC;QAAE;IAAO,GAAG,IAAM,EAAE;IAC/C,OAAO,QAAQ,GAAG,CAAC,gBAAgB,SAAS,MAAM;QAC9C,MAAO,KAAM;YACT,IAAI,OAAO,MAAM,KAAK,GAAG;gBACrB,MAAM,SAAS,MAAM,KAAK,IAAI;gBAC9B,KAAK,MAAM,UAAU,QAAS;oBAC1B,OAAO,IAAI,CAAC;gBAChB;YACJ,OACK,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE;gBACrB;YACJ,OACK;gBACD,oEAAoE;gBACpE,MAAM,OAAO,KAAK,GAAG,KAAK;YAC9B;QACJ;IACJ;AACJ;AACO,SAAS,OAAO,KAAK,EAAE,MAAM;IAChC,IAAI,MAAM,OAAO,CAAC,UAAU,MAAM,OAAO,CAAC,SAAS;QAC/C,OAAO,MAAM,MAAM,CAAC;IACxB,OACK,IAAI,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;QAC9D,OAAQ,QAAQ;IACpB,OACK,IAAI,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;QAC9D,OAAQ,QAAQ;IACpB,OACK,IACL,8DAA8D;IAC9D,YAAY,SACR,8DAA8D;IAC9D,OAAO,MAAM,MAAM,KAAK,YAAY;QACpC,8DAA8D;QAC9D,OAAO,MAAM,MAAM,CAAC;IACxB,OACK,IAAI,OAAO,UAAU,YAAY,OAAO,WAAW,UAAU;QAC9D,8DAA8D;QAC9D,MAAM,QAAQ;YAAE,GAAG,KAAK;QAAC;QACzB,8DAA8D;QAC9D,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,QAAS;YAC/C,IAAI,OAAO,SAAS,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG;gBAC5C,KAAK,CAAC,IAAI,GAAG,OAAO,KAAK,CAAC,IAAI,EAAE;YACpC,OACK;gBACD,KAAK,CAAC,IAAI,GAAG;YACjB;QACJ;QACA,OAAO;IACX,OACK;QACD,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,OAAO,MAAM,KAAK,EAAE,OAAO,QAAQ;IACxE;AACJ;AACO,MAAM;IACT,YAAY,MAAM,CAAE;QAChB,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;YACrC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,eAAe;YACvC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,IAAI,CAAC,SAAS,GAAG,OAAO,SAAS;QACjC,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM;QAC3B,8DAA8D;QAC9D,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;QAC5C,uEAAuE;QACvE,sEAAsE;QACtE,uEAAuE;QACvE,kCAAkC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,SAAS;YAC/B,KAAK,2LAAA,CAAA,qCAAkC,CAAC,aAAa,CAAC,CAAA,GAAA,oKAAA,CAAA,yBAAsB,AAAD,EAAE,OAAO,MAAM,GAAG;gBACzF,IAAI,CAAC,WAAW,GAAG,OAAO,SAAS,CAAC,IAAI;gBACxC,IAAI,OAAO,UAAU,EAAE;oBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,UAAU,EAAE,IAAI,CAAC,SAAS;gBAC3D,OACK;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAY,QAAQ,YAAY;gBAC3D;YACJ,GAAG;QACP;IACJ;IACA,MAAM,KAAK,GAAG,IAAI,EAAE;QAChB,IAAI,CAAC,MAAM,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,eAAe,GAAG;YACvB,OAAO,IAAI,CAAC,WAAW;QAC3B;QACA,OAAO,2LAAA,CAAA,qCAAkC,CAAC,aAAa,CAAC,CAAA,GAAA,oKAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAClG;YACE,OAAO,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM;QACnE,IACE;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI;QAClC,GAAG;IACX;IACA,MAAM,OAAO,KAAK,EAAE;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC;IACA,MAAM,MAAM,CAAC,EAAE;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAChC;IACA,CAAC,OAAO,aAAa,CAAC,GAAG;QACrB,OAAO,IAAI;IACf;IACA,6DAA6D;IAC7D,sEAAsE;IACtE,MAAM,CAAC,OAAO,YAAY,CAAC,GAAG;QAC1B,MAAM,IAAI,CAAC,MAAM;IACrB;AACJ;AACO,eAAe,uBAAuB,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,IAAI;IACnF,MAAM,MAAM,IAAI,wBAAwB;QACpC;QACA;QACA;IACJ;IACA,MAAM,QAAQ,MAAM,IAAI,KAAK;IAC7B,OAAO;QAAE,QAAQ,GAAG,KAAK,UAAU;QAAO;IAAM;AACpD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5403, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/log_stream.js"],"sourcesContent":["import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = applyPatch({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new AIMessageChunk({\n                    id: `run-${run.id}`,\n                    content: token,\n                });\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5838, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/outputs.js"],"sourcesContent":["export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU;AAIhB,MAAM;IACT,YAAY,MAAM,CAAE;QAChB,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,8DAA8D;QAC9D,OAAO,cAAc,CAAC,IAAI,EAAE,kBAAkB;YAC1C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,IAAI,GAAG,OAAO,IAAI;QACvB,IAAI,CAAC,cAAc,GAAG,OAAO,cAAc;IAC/C;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,gBAAgB;YACvB,MAAM,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC5B,gBAAgB;gBACZ,GAAG,IAAI,CAAC,cAAc;gBACtB,GAAG,MAAM,cAAc;YAC3B;QACJ;IACJ;AACJ;AACO,MAAM,4BAA4B;IACrC,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,WAAW;YACnC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,OAAO,GAAG,OAAO,OAAO;IACjC;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,oBAAoB;YAC3B,MAAM,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC5B,gBAAgB;gBACZ,GAAG,IAAI,CAAC,cAAc;gBACtB,GAAG,MAAM,cAAc;YAC3B;YACA,SAAS,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,OAAO;QAC9C;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5900, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/event_stream.js"],"sourcesContent":["import { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { GenerationChunk } from \"../outputs.js\";\nfunction assignName({ name, serialized, }) {\n    if (name !== undefined) {\n        return name;\n    }\n    if (serialized?.name !== undefined) {\n        return serialized.name;\n    }\n    else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n        return serialized.id[serialized.id.length - 1];\n    }\n    return \"Unnamed\";\n}\nexport const isStreamEventsHandler = (handler) => handler.name === \"event_stream_tracer\";\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runInfoMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"tappedPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"event_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.runType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.runType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, outputStream) {\n        const firstChunk = await outputStream.next();\n        if (firstChunk.done) {\n            return;\n        }\n        const runInfo = this.runInfoMap.get(runId);\n        // Run has finished, don't issue any stream events.\n        // An example of this is for runnables that use the default\n        // implementation of .stream(), which delegates to .invoke()\n        // and calls .onChainEnd() before passing it to the iterator.\n        if (runInfo === undefined) {\n            yield firstChunk.value;\n            return;\n        }\n        // Match format from handlers below\n        function _formatOutputChunk(eventType, data) {\n            if (eventType === \"llm\" && typeof data === \"string\") {\n                return new GenerationChunk({ text: data });\n            }\n            return data;\n        }\n        let tappedPromise = this.tappedPromises.get(runId);\n        // if we are the first to tap, issue stream events\n        if (tappedPromise === undefined) {\n            let tappedPromiseResolver;\n            tappedPromise = new Promise((resolve) => {\n                tappedPromiseResolver = resolve;\n            });\n            this.tappedPromises.set(runId, tappedPromise);\n            try {\n                const event = {\n                    event: `on_${runInfo.runType}_stream`,\n                    run_id: runId,\n                    name: runInfo.name,\n                    tags: runInfo.tags,\n                    metadata: runInfo.metadata,\n                    data: {},\n                };\n                await this.send({\n                    ...event,\n                    data: {\n                        chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n                    },\n                }, runInfo);\n                yield firstChunk.value;\n                for await (const chunk of outputStream) {\n                    // Don't yield tool and retriever stream events\n                    if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n                        await this.send({\n                            ...event,\n                            data: {\n                                chunk: _formatOutputChunk(runInfo.runType, chunk),\n                            },\n                        }, runInfo);\n                    }\n                    yield chunk;\n                }\n            }\n            finally {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tappedPromiseResolver();\n                // Don't delete from the promises map to keep track of which runs have been tapped.\n            }\n        }\n        else {\n            // otherwise just pass through\n            yield firstChunk.value;\n            for await (const chunk of outputStream) {\n                yield chunk;\n            }\n        }\n    }\n    async send(payload, run) {\n        if (this._includeRun(run)) {\n            await this.writer.write(payload);\n        }\n    }\n    async sendEndEvent(payload, run) {\n        const tappedPromise = this.tappedPromises.get(payload.run_id);\n        if (tappedPromise !== undefined) {\n            void tappedPromise.then(() => {\n                void this.send(payload, run);\n            });\n        }\n        else {\n            await this.send(payload, run);\n        }\n    }\n    async onLLMStart(run) {\n        const runName = assignName(run);\n        const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: run.inputs,\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        const eventName = `on_${runType}_start`;\n        await this.send({\n            event: eventName,\n            data: {\n                input: run.inputs,\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onLLMNewToken(run, token, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs) {\n        const runInfo = this.runInfoMap.get(run.id);\n        let chunk;\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n        }\n        // Top-level streaming events are covered by tapOutputIterable\n        if (this.runInfoMap.size === 1) {\n            return;\n        }\n        if (runInfo.runType === \"chat_model\") {\n            eventName = \"on_chat_model_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n            }\n            else {\n                chunk = kwargs.chunk.message;\n            }\n        }\n        else if (runInfo.runType === \"llm\") {\n            eventName = \"on_llm_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new GenerationChunk({ text: token });\n            }\n            else {\n                chunk = kwargs.chunk;\n            }\n        }\n        else {\n            throw new Error(`Unexpected run type ${runInfo.runType}`);\n        }\n        await this.send({\n            event: eventName,\n            data: {\n                chunk,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onLLMEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const generations = run.outputs?.generations;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let output;\n        if (runInfo.runType === \"chat_model\") {\n            for (const generation of generations ?? []) {\n                if (output !== undefined) {\n                    break;\n                }\n                output = generation[0]?.message;\n            }\n            eventName = \"on_chat_model_end\";\n        }\n        else if (runInfo.runType === \"llm\") {\n            output = {\n                generations: generations?.map((generation) => {\n                    return generation.map((chunk) => {\n                        return {\n                            text: chunk.text,\n                            generationInfo: chunk.generationInfo,\n                        };\n                    });\n                }),\n                llmOutput: run.outputs?.llmOutput ?? {},\n            };\n            eventName = \"on_llm_end\";\n        }\n        else {\n            throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onChainStart(run) {\n        const runName = assignName(run);\n        const runType = run.run_type ?? \"chain\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: run.run_type,\n        };\n        let eventData = {};\n        // Workaround Runnable core code not sending input when transform streaming.\n        if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n            eventData = {};\n            runInfo.inputs = {};\n        }\n        else if (run.inputs.input !== undefined) {\n            eventData.input = run.inputs.input;\n            runInfo.inputs = run.inputs.input;\n        }\n        else {\n            eventData.input = run.inputs;\n            runInfo.inputs = run.inputs;\n        }\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: `on_${runType}_start`,\n            data: eventData,\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onChainEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const eventName = `on_${run.run_type}_end`;\n        const inputs = run.inputs ?? runInfo.inputs ?? {};\n        const outputs = run.outputs?.output ?? run.outputs;\n        const data = {\n            output: outputs,\n            input: inputs,\n        };\n        if (inputs.input && Object.keys(inputs).length === 1) {\n            data.input = inputs.input;\n            runInfo.inputs = inputs.input;\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data,\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolStart(run) {\n        const runName = assignName(run);\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: \"tool\",\n            inputs: run.inputs ?? {},\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_tool_start\",\n            data: {\n                input: run.inputs ?? {},\n            },\n            name: runName,\n            run_id: run.id,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n        }\n        if (runInfo.inputs === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`);\n        }\n        const output = run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n        await this.sendEndEvent({\n            event: \"on_tool_end\",\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onRetrieverStart(run) {\n        const runName = assignName(run);\n        const runType = \"retriever\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: {\n                query: run.inputs.query,\n            },\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_retriever_start\",\n            data: {\n                input: {\n                    query: run.inputs.query,\n                },\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onRetrieverEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n        }\n        await this.sendEndEvent({\n            event: \"on_retriever_end\",\n            data: {\n                output: run.outputs?.documents ?? run.outputs,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleCustomEvent(eventName, data, runId) {\n        const runInfo = this.runInfoMap.get(runId);\n        if (runInfo === undefined) {\n            throw new Error(`handleCustomEvent: Run ID ${runId} not found in run map.`);\n        }\n        await this.send({\n            event: \"on_custom_event\",\n            run_id: runId,\n            name: eventName,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n            data,\n        }, runInfo);\n    }\n    async finish() {\n        const pendingPromises = [...this.tappedPromises.values()];\n        void Promise.all(pendingPromises).finally(() => {\n            void this.writer.close();\n        });\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6430, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/async_caller.js"],"sourcesContent":["import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,kBAAkB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD,8DAA8D;AAC9D,MAAM,8BAA8B,CAAC;IACjC,IAAI,MAAM,OAAO,CAAC,UAAU,CAAC,aACzB,MAAM,OAAO,CAAC,UAAU,CAAC,iBACzB,MAAM,IAAI,KAAK,cAAc;QAC7B,MAAM;IACV;IACA,8DAA8D;IAC9D,IAAI,OAAO,SAAS,gBAAgB;QAChC,MAAM;IACV;IACA,MAAM,SACN,8DAA8D;IAC9D,OAAO,UAAU,UAAU,OAAO;IAClC,IAAI,UAAU,gBAAgB,QAAQ,CAAC,CAAC,SAAS;QAC7C,MAAM;IACV;IACA,8DAA8D;IAC9D,IAAI,OAAO,OAAO,SAAS,sBAAsB;QAC7C,MAAM,MAAM,IAAI,MAAM,OAAO;QAC7B,IAAI,IAAI,GAAG;QACX,MAAM;IACV;AACJ;AAcO,MAAM;IACT,YAAY,MAAM,CAAE;QAChB,OAAO,cAAc,CAAC,IAAI,EAAE,kBAAkB;YAC1C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,cAAc;YACtC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,cAAc,GAAG,OAAO,cAAc,IAAI;QAC/C,IAAI,CAAC,UAAU,GAAG,OAAO,UAAU,IAAI;QACvC,IAAI,CAAC,eAAe,GAChB,OAAO,eAAe,IAAI;QAC9B,MAAM,SAAS,aAAa,6IAAA,CAAA,UAAS,GAAG,6IAAA,CAAA,UAAS,CAAC,OAAO,GAAG,6IAAA,CAAA,UAAS;QACrE,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO;YAAE,aAAa,IAAI,CAAC,cAAc;QAAC;IAC/D;IACA,8DAA8D;IAC9D,KAAK,QAAQ,EAAE,GAAG,IAAI,EAAE;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAM,CAAA,GAAA,qIAAA,CAAA,UAAM,AAAD,EAAE,IAAM,YAAY,MAAM,KAAK,CAAC,CAAC;oBAC9D,uDAAuD;oBACvD,IAAI,iBAAiB,OAAO;wBACxB,MAAM;oBACV,OACK;wBACD,MAAM,IAAI,MAAM;oBACpB;gBACJ,IAAI;gBACA,iBAAiB,IAAI,CAAC,eAAe;gBACrC,SAAS,IAAI,CAAC,UAAU;gBACxB,WAAW;YAGf,IAAI;YAAE,gBAAgB;QAAK;IAC/B;IACA,8DAA8D;IAC9D,gBAAgB,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE;QACxC,mDAAmD;QACnD,wEAAwE;QACxE,IAAI,QAAQ,MAAM,EAAE;YAChB,OAAO,QAAQ,IAAI,CAAC;gBAChB,IAAI,CAAC,IAAI,CAAC,aAAa;gBACvB,IAAI,QAAQ,CAAC,GAAG;oBACZ,QAAQ,MAAM,EAAE,iBAAiB,SAAS;wBACtC,OAAO,IAAI,MAAM;oBACrB;gBACJ;aACH;QACL;QACA,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa;IAClC;IACA,MAAM,GAAG,IAAI,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAM,SAAS,MAAM,IAAI,CAAC,CAAC,MAAS,IAAI,EAAE,GAAG,MAAM,QAAQ,MAAM,CAAC;IACvF;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6546, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tracers/root_listener.js"],"sourcesContent":["import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            await this.argOnStart(run, this.config);\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                await this.argOnEnd(run, this.config);\n            }\n        }\n        else if (this.argOnError) {\n            await this.argOnError(run, this.config);\n        }\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,4BAA4B,gKAAA,CAAA,aAAU;IAC/C,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAG,CAAE;QAC9C,KAAK,CAAC;YAAE,eAAe;QAAK;QAC5B,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,4BAA4B,GAC5B,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,cAAc;YACtC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;YACpC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,cAAc;YACtC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;IACtB;IACA;;;;KAIC,GACD,WAAW,CAAC,EAAE;QACV,OAAO,QAAQ,OAAO;IAC1B;IACA,MAAM,YAAY,GAAG,EAAE;QACnB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb;QACJ;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE;QACpB,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,MAAM;QAC1C;IACJ;IACA,MAAM,YAAY,GAAG,EAAE;QACnB,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB;QACJ;QACA,IAAI,CAAC,IAAI,KAAK,EAAE;YACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,MAAM;YACxC;QACJ,OACK,IAAI,IAAI,CAAC,UAAU,EAAE;YACtB,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,MAAM;QAC1C;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6632, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/utils.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n"],"names":[],"mappings":"AAAA,8DAA8D;;;;;AACvD,SAAS,oBAAoB,KAAK;IACrC,OAAO,QAAQ,MAAM,WAAW,GAAG;AACvC;AAQO,MAAM;IACT,YAAY,MAAM,CAAE;QAChB,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,eAAe;YACvC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,eAAe;YACvC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,YAAY,GAAG,OAAO,YAAY;QACvC,IAAI,CAAC,YAAY,GAAG,OAAO,YAAY;QACvC,IAAI,CAAC,WAAW,GAAG,OAAO,WAAW;QACrC,IAAI,CAAC,YAAY,GAAG,OAAO,YAAY;QACvC,IAAI,CAAC,YAAY,GAAG,OAAO,YAAY;QACvC,IAAI,CAAC,WAAW,GAAG,OAAO,WAAW;IACzC;IACA,aAAa,KAAK,EAAE,QAAQ,EAAE;QAC1B,IAAI,UAAU,IAAI,CAAC,YAAY,KAAK,aAChC,IAAI,CAAC,YAAY,KAAK,aACtB,IAAI,CAAC,WAAW,KAAK;QACzB,MAAM,YAAY,MAAM,IAAI,IAAI,EAAE;QAClC,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW;YACjC,UAAU,WAAW,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,IAAI;QAC9D;QACA,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW;YACjC,UAAU,WAAW,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QACpD;QACA,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW;YAChC,UACI,WAAW,UAAU,IAAI,CAAC,CAAC,MAAQ,IAAI,CAAC,WAAW,EAAE,SAAS;QACtE;QACA,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW;YACjC,UAAU,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,IAAI;QAC/D;QACA,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW;YACjC,UAAU,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QACrD;QACA,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW;YAChC,UACI,WAAW,UAAU,KAAK,CAAC,CAAC,MAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS;QACxE;QACA,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6715, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/graph_mermaid.js"],"sourcesContent":["function _escapeNodeLabel(nodeLabel) {\n    // Escapes the node label for Mermaid syntax.\n    return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\nconst MARKDOWN_SPECIAL_CHARS = [\"*\", \"_\", \"`\"];\nfunction _generateMermaidGraphStyles(nodeColors) {\n    let styles = \"\";\n    for (const [className, color] of Object.entries(nodeColors)) {\n        styles += `\\tclassDef ${className} ${color};\\n`;\n    }\n    return styles;\n}\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(nodes, edges, config) {\n    const { firstNode, lastNode, nodeColors, withStyles = true, curveStyle = \"linear\", wrapLabelNWords = 9, } = config ?? {};\n    // Initialize Mermaid graph configuration\n    let mermaidGraph = withStyles\n        ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n        : \"graph TD;\\n\";\n    if (withStyles) {\n        // Node formatting templates\n        const defaultClassLabel = \"default\";\n        const formatDict = {\n            [defaultClassLabel]: \"{0}({1})\",\n        };\n        if (firstNode !== undefined) {\n            formatDict[firstNode] = \"{0}([{1}]):::first\";\n        }\n        if (lastNode !== undefined) {\n            formatDict[lastNode] = \"{0}([{1}]):::last\";\n        }\n        // Add nodes to the graph\n        for (const [key, node] of Object.entries(nodes)) {\n            const nodeName = node.name.split(\":\").pop() ?? \"\";\n            const label = MARKDOWN_SPECIAL_CHARS.some((char) => nodeName.startsWith(char) && nodeName.endsWith(char))\n                ? `<p>${nodeName}</p>`\n                : nodeName;\n            let finalLabel = label;\n            if (Object.keys(node.metadata ?? {}).length) {\n                finalLabel += `<hr/><small><em>${Object.entries(node.metadata ?? {})\n                    .map(([k, v]) => `${k} = ${v}`)\n                    .join(\"\\n\")}</em></small>`;\n            }\n            const nodeLabel = (formatDict[key] ?? formatDict[defaultClassLabel])\n                .replace(\"{0}\", _escapeNodeLabel(key))\n                .replace(\"{1}\", finalLabel);\n            mermaidGraph += `\\t${nodeLabel}\\n`;\n        }\n    }\n    // Group edges by their common prefixes\n    const edgeGroups = {};\n    for (const edge of edges) {\n        const srcParts = edge.source.split(\":\");\n        const tgtParts = edge.target.split(\":\");\n        const commonPrefix = srcParts\n            .filter((src, i) => src === tgtParts[i])\n            .join(\":\");\n        if (!edgeGroups[commonPrefix]) {\n            edgeGroups[commonPrefix] = [];\n        }\n        edgeGroups[commonPrefix].push(edge);\n    }\n    const seenSubgraphs = new Set();\n    function addSubgraph(edges, prefix) {\n        const selfLoop = edges.length === 1 && edges[0].source === edges[0].target;\n        if (prefix && !selfLoop) {\n            const subgraph = prefix.split(\":\").pop();\n            if (seenSubgraphs.has(subgraph)) {\n                throw new Error(`Found duplicate subgraph '${subgraph}' -- this likely means that ` +\n                    \"you're reusing a subgraph node with the same name. \" +\n                    \"Please adjust your graph to have subgraph nodes with unique names.\");\n            }\n            seenSubgraphs.add(subgraph);\n            mermaidGraph += `\\tsubgraph ${subgraph}\\n`;\n        }\n        for (const edge of edges) {\n            const { source, target, data, conditional } = edge;\n            let edgeLabel = \"\";\n            if (data !== undefined) {\n                let edgeData = data;\n                const words = edgeData.split(\" \");\n                if (words.length > wrapLabelNWords) {\n                    edgeData = Array.from({ length: Math.ceil(words.length / wrapLabelNWords) }, (_, i) => words\n                        .slice(i * wrapLabelNWords, (i + 1) * wrapLabelNWords)\n                        .join(\" \")).join(\"&nbsp;<br>&nbsp;\");\n                }\n                edgeLabel = conditional\n                    ? ` -. &nbsp;${edgeData}&nbsp; .-> `\n                    : ` -- &nbsp;${edgeData}&nbsp; --> `;\n            }\n            else {\n                edgeLabel = conditional ? \" -.-> \" : \" --> \";\n            }\n            mermaidGraph += `\\t${_escapeNodeLabel(source)}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n        }\n        // Recursively add nested subgraphs\n        for (const nestedPrefix in edgeGroups) {\n            if (nestedPrefix.startsWith(`${prefix}:`) && nestedPrefix !== prefix) {\n                addSubgraph(edgeGroups[nestedPrefix], nestedPrefix);\n            }\n        }\n        if (prefix && !selfLoop) {\n            mermaidGraph += \"\\tend\\n\";\n        }\n    }\n    // Start with the top-level edges (no common prefix)\n    addSubgraph(edgeGroups[\"\"] ?? [], \"\");\n    // Add remaining subgraphs\n    for (const prefix in edgeGroups) {\n        if (!prefix.includes(\":\") && prefix !== \"\") {\n            addSubgraph(edgeGroups[prefix], prefix);\n        }\n    }\n    // Add custom styles for nodes\n    if (withStyles) {\n        mermaidGraph += _generateMermaidGraphStyles(nodeColors ?? {});\n    }\n    return mermaidGraph;\n}\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n */\nexport async function drawMermaidPng(mermaidSyntax, config) {\n    let { backgroundColor = \"white\" } = config ?? {};\n    // Use btoa for compatibility, assume ASCII\n    const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n    // Check if the background color is a hexadecimal color code using regex\n    if (backgroundColor !== undefined) {\n        const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n        if (!hexColorPattern.test(backgroundColor)) {\n            backgroundColor = `!${backgroundColor}`;\n        }\n    }\n    const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}`;\n    const res = await fetch(imageUrl);\n    if (!res.ok) {\n        throw new Error([\n            `Failed to render the graph using the Mermaid.INK API.`,\n            `Status code: ${res.status}`,\n            `Status text: ${res.statusText}`,\n        ].join(\"\\n\"));\n    }\n    const content = await res.blob();\n    return content;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6855, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/graph.js"],"sourcesContent":["import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nfunction nodeDataStr(id, data) {\n    if (id !== undefined && !isUuid(id)) {\n        return id;\n    }\n    else if (isRunnableInterface(data)) {\n        try {\n            let dataStr = data.getName();\n            dataStr = dataStr.startsWith(\"Runnable\")\n                ? dataStr.slice(\"Runnable\".length)\n                : dataStr;\n            return dataStr;\n        }\n        catch (error) {\n            return data.getName();\n        }\n    }\n    else {\n        return data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...zodToJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor(params) {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.nodes = params?.nodes ?? this.nodes;\n        this.edges = params?.edges ?? this.edges;\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id ?? uuidv4();\n        const node = {\n            id: nodeId,\n            data,\n            name: nodeDataStr(id, data),\n            metadata,\n        };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        return _firstNode(this);\n    }\n    lastNode() {\n        return _lastNode(this);\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode && _firstNode(this, [firstNode.id])) {\n            this.removeNode(firstNode);\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode && _lastNode(this, [lastNode.id])) {\n            this.removeNode(lastNode);\n        }\n    }\n    /**\n     * Return a new graph with all nodes re-identified,\n     * using their unique, readable names where possible.\n     */\n    reid() {\n        const nodeLabels = Object.fromEntries(Object.values(this.nodes).map((node) => [node.id, node.name]));\n        const nodeLabelCounts = new Map();\n        Object.values(nodeLabels).forEach((label) => {\n            nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n        });\n        const getNodeId = (nodeId) => {\n            const label = nodeLabels[nodeId];\n            if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n                return label;\n            }\n            else {\n                return nodeId;\n            }\n        };\n        return new Graph({\n            nodes: Object.fromEntries(Object.entries(this.nodes).map(([id, node]) => [\n                getNodeId(id),\n                { ...node, id: getNodeId(id) },\n            ])),\n            edges: this.edges.map((edge) => ({\n                ...edge,\n                source: getNodeId(edge.source),\n                target: getNodeId(edge.target),\n            })),\n        });\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = {\n            default: \"fill:#f2f0ff,line-height:1.2\",\n            first: \"fill-opacity:0\",\n            last: \"fill:#bfb6fc\",\n        }, wrapLabelNWords, } = params ?? {};\n        const graph = this.reid();\n        const firstNode = graph.firstNode();\n        const lastNode = graph.lastNode();\n        return drawMermaid(graph.nodes, graph.edges, {\n            firstNode: firstNode?.id,\n            lastNode: lastNode?.id,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph, exclude = []) {\n    const targets = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.source))\n        .map((edge) => edge.target));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !targets.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph, exclude = []) {\n    const sources = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.target))\n        .map((edge) => edge.source));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !sources.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7145, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/wrappers.js"],"sourcesContent":["import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,yBAAyB,MAAM;IAC3C,MAAM,UAAU,IAAI;IACpB,MAAM,cAAc,IAAI,eAAe;QACnC,MAAM,OAAM,UAAU;YAClB,WAAW,MAAM,SAAS,OAAQ;gBAC9B,WAAW,OAAO,CAAC,QAAQ,MAAM,CAAC,CAAC,mBAAmB,EAAE,KAAK,SAAS,CAAC,OAAO,IAAI,CAAC;YACvF;YACA,WAAW,OAAO,CAAC,QAAQ,MAAM,CAAC;YAClC,WAAW,KAAK;QACpB;IACJ;IACA,OAAO,gKAAA,CAAA,yBAAsB,CAAC,kBAAkB,CAAC;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7169, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/iter.js"],"sourcesContent":["import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { pickRunnableConfigKeys } from \"./config.js\";\nexport function isIterableIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nexport const isIterator = (x) => x != null &&\n    typeof x === \"object\" &&\n    \"next\" in x &&\n    typeof x.next === \"function\";\nexport function isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nexport function* consumeIteratorInContext(context, iter) {\n    while (true) {\n        const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iter.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nexport async function* consumeAsyncIterableInContext(context, iter) {\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iterator.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AACA;;;AACO,SAAS,mBAAmB,KAAK;IACpC,OAAQ,OAAO,UAAU,YACrB,UAAU,QACV,OAAO,KAAK,CAAC,OAAO,QAAQ,CAAC,KAAK,cAClC,wCAAwC;IACxC,OAAO,MAAM,IAAI,KAAK;AAC9B;AACO,MAAM,aAAa,CAAC,IAAM,KAAK,QAClC,OAAO,MAAM,YACb,UAAU,KACV,OAAO,EAAE,IAAI,KAAK;AACf,SAAS,gBAAgB,KAAK;IACjC,OAAQ,OAAO,UAAU,YACrB,UAAU,QACV,OAAO,KAAK,CAAC,OAAO,aAAa,CAAC,KAC9B;AACZ;AACO,UAAU,yBAAyB,OAAO,EAAE,IAAI;IACnD,MAAO,KAAM;QACT,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,2LAAA,CAAA,qCAAkC,CAAC,aAAa,CAAC,CAAA,GAAA,oKAAA,CAAA,yBAAsB,AAAD,EAAE,UAAU,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO;QAChI,IAAI,MAAM;YACN;QACJ,OACK;YACD,MAAM;QACV;IACJ;AACJ;AACO,gBAAgB,8BAA8B,OAAO,EAAE,IAAI;IAC9D,MAAM,WAAW,IAAI,CAAC,OAAO,aAAa,CAAC;IAC3C,MAAO,KAAM;QACT,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,2LAAA,CAAA,qCAAkC,CAAC,aAAa,CAAC,CAAA,GAAA,oKAAA,CAAA,yBAAsB,AAAD,EAAE,UAAU,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO;QAC1I,IAAI,MAAM;YACN;QACJ,OACK;YACD,MAAM;QACV;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7216, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/base.js"],"sourcesContent":["import { z } from \"zod\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, pickRunnableConfigKeys, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     *\n     * @deprecated This will be removed in the next breaking release.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param fields.stopAfterAttempt The number of attempts to retry.\n     * @param fields.onFailedAttempt A function that is called when a retry fails.\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const abortController = new AbortController();\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            try {\n                let signal;\n                if (options?.signal) {\n                    if (\"any\" in AbortSignal) {\n                        // Use native AbortSignal.any() if available (Node 19+)\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        signal = AbortSignal.any([\n                            abortController.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        // Fallback for Node 18 and below - just use the provided signal\n                        signal = options.signal;\n                        // Ensure we still abort our controller when the parent signal aborts\n                        options.signal.addEventListener(\"abort\", () => {\n                            abortController.abort();\n                        }, { once: true });\n                    }\n                }\n                else {\n                    signal = abortController.signal;\n                }\n                const runnableStream = await outerThis.stream(input, {\n                    ...config,\n                    signal,\n                });\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                    if (abortController.signal.aborted)\n                        break;\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            abortController.abort();\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * Wraps a runnable and applies partial config upon invocation.\n *\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.bind({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.bind({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableBinding` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n *\n * @deprecated This will be removed in the next breaking release.\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke.bind(this), inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke.bind(this), input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"omitSequenceTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n        this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], nameOrFields) {\n        let extra = {};\n        if (typeof nameOrFields === \"string\") {\n            extra.name = nameOrFields;\n        }\n        else if (nameOrFields !== undefined) {\n            extra = nameOrFields;\n        }\n        return new RunnableSequence({\n            ...extra,\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke.bind(this), input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = sequence.invoke(25);\n *\n * // { years_to_fifty: 25, years_to_hundred: 75 }\n * ```\n */\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        const childConfig = patchConfig(otherConfigFields, {\n            callbacks: runManager?.getChild(),\n        });\n        const res = await AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n            let firstError;\n            for (const runnable of this.runnables()) {\n                config?.signal?.throwIfAborted();\n                try {\n                    const output = await runnable.invoke(input, childConfig);\n                    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                    return output;\n                }\n                catch (e) {\n                    if (firstError === undefined) {\n                        firstError = e;\n                    }\n                }\n            }\n            if (firstError === undefined) {\n                throw new Error(\"No error stored at end of fallback.\");\n            }\n            await runManager?.handleChainError(firstError);\n            throw firstError;\n        });\n        return res;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                const originalStream = await runnable.stream(input, childConfig);\n                stream = consumeAsyncIterableInContext(childConfig, originalStream);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output = output === undefined ? output : concat(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await this.schema.parseAsync(input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {z.ZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<z.ZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? fields.schema?.description;\n    if (fields.schema.constructor === z.ZodString) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({\n                input: z.string(),\n            })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9338, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/modifier.js"],"sourcesContent":["import { BaseMessage } from \"./base.js\";\n/**\n * Message responsible for deleting other messages.\n */\nexport class RemoveMessage extends BaseMessage {\n    constructor(fields) {\n        super({\n            ...fields,\n            content: \"\",\n        });\n        /**\n         * The ID of the message to remove.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.id = fields.id;\n    }\n    _getType() {\n        return \"remove\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            id: this.id,\n        };\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAIO,MAAM,sBAAsB,iKAAA,CAAA,cAAW;IAC1C,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC;YACF,GAAG,MAAM;YACT,SAAS;QACb;QACA;;SAEC,GACD,OAAO,cAAc,CAAC,IAAI,EAAE,MAAM;YAC9B,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE;IACvB;IACA,WAAW;QACP,OAAO;IACX;IACA,IAAI,mBAAmB;QACnB,OAAO;YACH,GAAG,KAAK,CAAC,gBAAgB;YACzB,IAAI,IAAI,CAAC,EAAE;QACf;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9375, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/transformers.js"],"sourcesContent":["import { RunnableLambda } from \"../runnables/base.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessageChunk, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { RemoveMessage } from \"./modifier.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, ToolMessageChunk, } from \"./tool.js\";\nimport { convertToChunk } from \"./utils.js\";\nconst _isMessageType = (msg, types) => {\n    const typesAsStrings = [\n        ...new Set(types?.map((t) => {\n            if (typeof t === \"string\") {\n                return t;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const instantiatedMsgClass = new t({});\n            if (!(\"getType\" in instantiatedMsgClass) ||\n                typeof instantiatedMsgClass.getType !== \"function\") {\n                throw new Error(\"Invalid type provided.\");\n            }\n            return instantiatedMsgClass.getType();\n        })),\n    ];\n    const msgType = msg.getType();\n    return typesAsStrings.some((t) => t === msgType);\n};\nexport function filterMessages(messagesOrOptions, options) {\n    if (Array.isArray(messagesOrOptions)) {\n        return _filterMessages(messagesOrOptions, options);\n    }\n    return RunnableLambda.from((input) => {\n        return _filterMessages(input, messagesOrOptions);\n    });\n}\nfunction _filterMessages(messages, options = {}) {\n    const { includeNames, excludeNames, includeTypes, excludeTypes, includeIds, excludeIds, } = options;\n    const filtered = [];\n    for (const msg of messages) {\n        if (excludeNames && msg.name && excludeNames.includes(msg.name)) {\n            continue;\n        }\n        else if (excludeTypes && _isMessageType(msg, excludeTypes)) {\n            continue;\n        }\n        else if (excludeIds && msg.id && excludeIds.includes(msg.id)) {\n            continue;\n        }\n        // default to inclusion when no inclusion criteria given.\n        if (!(includeTypes || includeIds || includeNames)) {\n            filtered.push(msg);\n        }\n        else if (includeNames &&\n            msg.name &&\n            includeNames.some((iName) => iName === msg.name)) {\n            filtered.push(msg);\n        }\n        else if (includeTypes && _isMessageType(msg, includeTypes)) {\n            filtered.push(msg);\n        }\n        else if (includeIds && msg.id && includeIds.some((id) => id === msg.id)) {\n            filtered.push(msg);\n        }\n    }\n    return filtered;\n}\nexport function mergeMessageRuns(messages) {\n    if (Array.isArray(messages)) {\n        return _mergeMessageRuns(messages);\n    }\n    return RunnableLambda.from(_mergeMessageRuns);\n}\nfunction _mergeMessageRuns(messages) {\n    if (!messages.length) {\n        return [];\n    }\n    const merged = [];\n    for (const msg of messages) {\n        const curr = msg;\n        const last = merged.pop();\n        if (!last) {\n            merged.push(curr);\n        }\n        else if (curr.getType() === \"tool\" ||\n            !(curr.getType() === last.getType())) {\n            merged.push(last, curr);\n        }\n        else {\n            const lastChunk = convertToChunk(last);\n            const currChunk = convertToChunk(curr);\n            const mergedChunks = lastChunk.concat(currChunk);\n            if (typeof lastChunk.content === \"string\" &&\n                typeof currChunk.content === \"string\") {\n                mergedChunks.content = `${lastChunk.content}\\n${currChunk.content}`;\n            }\n            merged.push(_chunkToMsg(mergedChunks));\n        }\n    }\n    return merged;\n}\nexport function trimMessages(messagesOrOptions, options) {\n    if (Array.isArray(messagesOrOptions)) {\n        const messages = messagesOrOptions;\n        if (!options) {\n            throw new Error(\"Options parameter is required when providing messages.\");\n        }\n        return _trimMessagesHelper(messages, options);\n    }\n    else {\n        const trimmerOptions = messagesOrOptions;\n        return RunnableLambda.from((input) => _trimMessagesHelper(input, trimmerOptions)).withConfig({\n            runName: \"trim_messages\",\n        });\n    }\n}\nasync function _trimMessagesHelper(messages, options) {\n    const { maxTokens, tokenCounter, strategy = \"last\", allowPartial = false, endOn, startOn, includeSystem = false, textSplitter, } = options;\n    if (startOn && strategy === \"first\") {\n        throw new Error(\"`startOn` should only be specified if `strategy` is 'last'.\");\n    }\n    if (includeSystem && strategy === \"first\") {\n        throw new Error(\"`includeSystem` should only be specified if `strategy` is 'last'.\");\n    }\n    let listTokenCounter;\n    if (\"getNumTokens\" in tokenCounter) {\n        listTokenCounter = async (msgs) => {\n            const tokenCounts = await Promise.all(msgs.map((msg) => tokenCounter.getNumTokens(msg.content)));\n            return tokenCounts.reduce((sum, count) => sum + count, 0);\n        };\n    }\n    else {\n        listTokenCounter = async (msgs) => tokenCounter(msgs);\n    }\n    let textSplitterFunc = defaultTextSplitter;\n    if (textSplitter) {\n        if (\"splitText\" in textSplitter) {\n            textSplitterFunc = textSplitter.splitText;\n        }\n        else {\n            textSplitterFunc = async (text) => textSplitter(text);\n        }\n    }\n    if (strategy === \"first\") {\n        return _firstMaxTokens(messages, {\n            maxTokens,\n            tokenCounter: listTokenCounter,\n            textSplitter: textSplitterFunc,\n            partialStrategy: allowPartial ? \"first\" : undefined,\n            endOn,\n        });\n    }\n    else if (strategy === \"last\") {\n        return _lastMaxTokens(messages, {\n            maxTokens,\n            tokenCounter: listTokenCounter,\n            textSplitter: textSplitterFunc,\n            allowPartial,\n            includeSystem,\n            startOn,\n            endOn,\n        });\n    }\n    else {\n        throw new Error(`Unrecognized strategy: '${strategy}'. Must be one of 'first' or 'last'.`);\n    }\n}\nasync function _firstMaxTokens(messages, options) {\n    const { maxTokens, tokenCounter, textSplitter, partialStrategy, endOn } = options;\n    let messagesCopy = [...messages];\n    let idx = 0;\n    for (let i = 0; i < messagesCopy.length; i += 1) {\n        const remainingMessages = i > 0 ? messagesCopy.slice(0, -i) : messagesCopy;\n        if ((await tokenCounter(remainingMessages)) <= maxTokens) {\n            idx = messagesCopy.length - i;\n            break;\n        }\n    }\n    if (idx < messagesCopy.length - 1 && partialStrategy) {\n        let includedPartial = false;\n        if (Array.isArray(messagesCopy[idx].content)) {\n            const excluded = messagesCopy[idx];\n            if (typeof excluded.content === \"string\") {\n                throw new Error(\"Expected content to be an array.\");\n            }\n            const numBlock = excluded.content.length;\n            const reversedContent = partialStrategy === \"last\"\n                ? [...excluded.content].reverse()\n                : excluded.content;\n            for (let i = 1; i <= numBlock; i += 1) {\n                const partialContent = partialStrategy === \"first\"\n                    ? reversedContent.slice(0, i)\n                    : reversedContent.slice(-i);\n                const fields = Object.fromEntries(Object.entries(excluded).filter(([k]) => k !== \"type\" && !k.startsWith(\"lc_\")));\n                const updatedMessage = _switchTypeToMessage(excluded.getType(), {\n                    ...fields,\n                    content: partialContent,\n                });\n                const slicedMessages = [...messagesCopy.slice(0, idx), updatedMessage];\n                if ((await tokenCounter(slicedMessages)) <= maxTokens) {\n                    messagesCopy = slicedMessages;\n                    idx += 1;\n                    includedPartial = true;\n                }\n                else {\n                    break;\n                }\n            }\n            if (includedPartial && partialStrategy === \"last\") {\n                excluded.content = [...reversedContent].reverse();\n            }\n        }\n        if (!includedPartial) {\n            const excluded = messagesCopy[idx];\n            let text;\n            if (Array.isArray(excluded.content) &&\n                excluded.content.some((block) => typeof block === \"string\" || block.type === \"text\")) {\n                const textBlock = excluded.content.find((block) => block.type === \"text\" && block.text);\n                text = textBlock?.text;\n            }\n            else if (typeof excluded.content === \"string\") {\n                text = excluded.content;\n            }\n            if (text) {\n                const splitTexts = await textSplitter(text);\n                const numSplits = splitTexts.length;\n                if (partialStrategy === \"last\") {\n                    splitTexts.reverse();\n                }\n                for (let _ = 0; _ < numSplits - 1; _ += 1) {\n                    splitTexts.pop();\n                    excluded.content = splitTexts.join(\"\");\n                    if ((await tokenCounter([...messagesCopy.slice(0, idx), excluded])) <=\n                        maxTokens) {\n                        if (partialStrategy === \"last\") {\n                            excluded.content = [...splitTexts].reverse().join(\"\");\n                        }\n                        messagesCopy = [...messagesCopy.slice(0, idx), excluded];\n                        idx += 1;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    if (endOn) {\n        const endOnArr = Array.isArray(endOn) ? endOn : [endOn];\n        while (idx > 0 && !_isMessageType(messagesCopy[idx - 1], endOnArr)) {\n            idx -= 1;\n        }\n    }\n    return messagesCopy.slice(0, idx);\n}\nasync function _lastMaxTokens(messages, options) {\n    const { allowPartial = false, includeSystem = false, endOn, startOn, ...rest } = options;\n    // Create a copy of messages to avoid mutation\n    let messagesCopy = messages.map((message) => {\n        const fields = Object.fromEntries(Object.entries(message).filter(([k]) => k !== \"type\" && !k.startsWith(\"lc_\")));\n        return _switchTypeToMessage(message.getType(), fields, isBaseMessageChunk(message));\n    });\n    if (endOn) {\n        const endOnArr = Array.isArray(endOn) ? endOn : [endOn];\n        while (messagesCopy.length > 0 &&\n            !_isMessageType(messagesCopy[messagesCopy.length - 1], endOnArr)) {\n            messagesCopy = messagesCopy.slice(0, -1);\n        }\n    }\n    const swappedSystem = includeSystem && messagesCopy[0]?.getType() === \"system\";\n    let reversed_ = swappedSystem\n        ? messagesCopy.slice(0, 1).concat(messagesCopy.slice(1).reverse())\n        : messagesCopy.reverse();\n    reversed_ = await _firstMaxTokens(reversed_, {\n        ...rest,\n        partialStrategy: allowPartial ? \"last\" : undefined,\n        endOn: startOn,\n    });\n    if (swappedSystem) {\n        return [reversed_[0], ...reversed_.slice(1).reverse()];\n    }\n    else {\n        return reversed_.reverse();\n    }\n}\nconst _MSG_CHUNK_MAP = {\n    human: {\n        message: HumanMessage,\n        messageChunk: HumanMessageChunk,\n    },\n    ai: {\n        message: AIMessage,\n        messageChunk: AIMessageChunk,\n    },\n    system: {\n        message: SystemMessage,\n        messageChunk: SystemMessageChunk,\n    },\n    developer: {\n        message: SystemMessage,\n        messageChunk: SystemMessageChunk,\n    },\n    tool: {\n        message: ToolMessage,\n        messageChunk: ToolMessageChunk,\n    },\n    function: {\n        message: FunctionMessage,\n        messageChunk: FunctionMessageChunk,\n    },\n    generic: {\n        message: ChatMessage,\n        messageChunk: ChatMessageChunk,\n    },\n    remove: {\n        message: RemoveMessage,\n        messageChunk: RemoveMessage, // RemoveMessage does not have a chunk class.\n    },\n};\nfunction _switchTypeToMessage(messageType, fields, returnChunk) {\n    let chunk;\n    let msg;\n    switch (messageType) {\n        case \"human\":\n            if (returnChunk) {\n                chunk = new HumanMessageChunk(fields);\n            }\n            else {\n                msg = new HumanMessage(fields);\n            }\n            break;\n        case \"ai\":\n            if (returnChunk) {\n                let aiChunkFields = {\n                    ...fields,\n                };\n                if (\"tool_calls\" in aiChunkFields) {\n                    aiChunkFields = {\n                        ...aiChunkFields,\n                        tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                            ...tc,\n                            type: \"tool_call_chunk\",\n                            index: undefined,\n                            args: JSON.stringify(tc.args),\n                        })),\n                    };\n                }\n                chunk = new AIMessageChunk(aiChunkFields);\n            }\n            else {\n                msg = new AIMessage(fields);\n            }\n            break;\n        case \"system\":\n            if (returnChunk) {\n                chunk = new SystemMessageChunk(fields);\n            }\n            else {\n                msg = new SystemMessage(fields);\n            }\n            break;\n        case \"developer\":\n            if (returnChunk) {\n                chunk = new SystemMessageChunk({\n                    ...fields,\n                    additional_kwargs: {\n                        ...fields.additional_kwargs,\n                        __openai_role__: \"developer\",\n                    },\n                });\n            }\n            else {\n                msg = new SystemMessage({\n                    ...fields,\n                    additional_kwargs: {\n                        ...fields.additional_kwargs,\n                        __openai_role__: \"developer\",\n                    },\n                });\n            }\n            break;\n        case \"tool\":\n            if (\"tool_call_id\" in fields) {\n                if (returnChunk) {\n                    chunk = new ToolMessageChunk(fields);\n                }\n                else {\n                    msg = new ToolMessage(fields);\n                }\n            }\n            else {\n                throw new Error(\"Can not convert ToolMessage to ToolMessageChunk if 'tool_call_id' field is not defined.\");\n            }\n            break;\n        case \"function\":\n            if (returnChunk) {\n                chunk = new FunctionMessageChunk(fields);\n            }\n            else {\n                if (!fields.name) {\n                    throw new Error(\"FunctionMessage must have a 'name' field\");\n                }\n                msg = new FunctionMessage(fields);\n            }\n            break;\n        case \"generic\":\n            if (\"role\" in fields) {\n                if (returnChunk) {\n                    chunk = new ChatMessageChunk(fields);\n                }\n                else {\n                    msg = new ChatMessage(fields);\n                }\n            }\n            else {\n                throw new Error(\"Can not convert ChatMessage to ChatMessageChunk if 'role' field is not defined.\");\n            }\n            break;\n        default:\n            throw new Error(`Unrecognized message type ${messageType}`);\n    }\n    if (returnChunk && chunk) {\n        return chunk;\n    }\n    if (msg) {\n        return msg;\n    }\n    throw new Error(`Unrecognized message type ${messageType}`);\n}\nfunction _chunkToMsg(chunk) {\n    const chunkType = chunk.getType();\n    let msg;\n    const fields = Object.fromEntries(Object.entries(chunk).filter(([k]) => ![\"type\", \"tool_call_chunks\"].includes(k) && !k.startsWith(\"lc_\")));\n    if (chunkType in _MSG_CHUNK_MAP) {\n        msg = _switchTypeToMessage(chunkType, fields);\n    }\n    if (!msg) {\n        throw new Error(`Unrecognized message chunk class ${chunkType}. Supported classes are ${Object.keys(_MSG_CHUNK_MAP)}`);\n    }\n    return msg;\n}\n/**\n * The default text splitter function that splits text by newlines.\n *\n * @param {string} text\n * @returns A promise that resolves to an array of strings split by newlines.\n */\nexport function defaultTextSplitter(text) {\n    const splits = text.split(\"\\n\");\n    return Promise.resolve([\n        ...splits.slice(0, -1).map((s) => `${s}\\n`),\n        splits[splits.length - 1],\n    ]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9832, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/messages/index.js"],"sourcesContent":["export * from \"./ai.js\";\nexport * from \"./base.js\";\nexport * from \"./chat.js\";\nexport * from \"./function.js\";\nexport * from \"./human.js\";\nexport * from \"./system.js\";\nexport * from \"./utils.js\";\nexport * from \"./transformers.js\";\nexport * from \"./modifier.js\";\nexport * from \"./content_blocks.js\";\n// TODO: Use a star export when we deprecate the\n// existing \"ToolCall\" type in \"base.js\".\nexport { ToolMessage, ToolMessageChunk, isToolMessage, isToolMessageChunk, } from \"./tool.js\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,yCAAyC;AACzC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9882, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/messages.js"],"sourcesContent":["export * from './dist/messages/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9900, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/outputs.js"],"sourcesContent":["export * from './dist/outputs.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9918, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/utils/env.js"],"sourcesContent":["export * from '../dist/utils/env.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9936, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/js-sha1/hash.js"],"sourcesContent":["// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nexport const insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10235, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/hash.js"],"sourcesContent":["export { insecureHash } from \"./js-sha1/hash.js\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10253, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/caches/base.js"],"sourcesContent":["import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AACA;;;AAWO,MAAM,cAAc,CAAC,GAAG,UAAY,CAAA,GAAA,4KAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,IAAI,CAAC;AAC9D,SAAS,4BAA4B,gBAAgB;IACxD,IAAI,iBAAiB,OAAO,KAAK,WAAW;QACxC,OAAO;YACH,MAAM,iBAAiB,IAAI;YAC3B,SAAS,CAAA,GAAA,kKAAA,CAAA,gCAA6B,AAAD,EAAE,iBAAiB,OAAO;QACnE;IACJ,OACK;QACD,OAAO;YAAE,MAAM,iBAAiB,IAAI;QAAC;IACzC;AACJ;AACO,SAAS,oBAAoB,UAAU;IAC1C,MAAM,kBAAkB;QACpB,MAAM,WAAW,IAAI;IACzB;IACA,IAAI,WAAW,OAAO,KAAK,WAAW;QAClC,gBAAgB,OAAO,GAAG,WAAW,OAAO,CAAC,MAAM;IACvD;IACA,OAAO;AACX;AAIO,MAAM;AACb;AACA,MAAM,aAAa,IAAI;AAIhB,MAAM,sBAAsB;IAC/B,YAAY,GAAG,CAAE;QACb,KAAK;QACL,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,KAAK,GAAG,OAAO,IAAI;IAC5B;IACA;;;;;;KAMC,GACD,OAAO,MAAM,EAAE,MAAM,EAAE;QACnB,OAAO,QAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,QAAQ,YAAY;IAC1E;IACA;;;;;KAKC,GACD,MAAM,OAAO,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;QAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,QAAQ,SAAS;IAChD;IACA;;;;KAIC,GACD,OAAO,SAAS;QACZ,OAAO,IAAI,cAAc;IAC7B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10332, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/prompt_values.js"],"sourcesContent":["import { Serializable } from \"./load/serializable.js\";\nimport { HumanMessage } from \"./messages/human.js\";\nimport { getBufferString } from \"./messages/utils.js\";\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nexport class StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nexport class ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return getBufferString(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n/**\n * Class that represents an image prompt value. It extends the\n * BasePromptValue and includes an ImageURL instance.\n */\nexport class ImagePromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ImagePromptValue\";\n    }\n    constructor(fields) {\n        if (!(\"imageUrl\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { imageUrl: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"imageUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.imageUrl = fields.imageUrl;\n    }\n    toString() {\n        return this.imageUrl.url;\n    }\n    toChatMessages() {\n        return [\n            new HumanMessage({\n                content: [\n                    {\n                        type: \"image_url\",\n                        image_url: {\n                            detail: this.imageUrl.detail,\n                            url: this.imageUrl.url,\n                        },\n                    },\n                ],\n            }),\n        ];\n    }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAIO,MAAM,wBAAwB,qKAAA,CAAA,eAAY;AACjD;AAKO,MAAM,0BAA0B;IACnC,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;YAAE;QAAM;QACd,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAgB;QAC9C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,KAAK,GAAG;IACjB;IACA,WAAW;QACP,OAAO,IAAI,CAAC,KAAK;IACrB;IACA,iBAAiB;QACb,OAAO;YAAC,IAAI,kKAAA,CAAA,eAAY,CAAC,IAAI,CAAC,KAAK;SAAE;IACzC;AACJ;AAKO,MAAM,wBAAwB;IACjC,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,CAAE;QAChB,IAAI,MAAM,OAAO,CAAC,SAAS;YACvB,6CAA6C;YAC7C,SAAS;gBAAE,UAAU;YAAO;QAChC;QACA,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAgB;QAC9C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;YACpC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ;IACnC;IACA,WAAW;QACP,OAAO,CAAA,GAAA,kKAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,CAAC,QAAQ;IACxC;IACA,iBAAiB;QACb,OAAO,IAAI,CAAC,QAAQ;IACxB;AACJ;AAKO,MAAM,yBAAyB;IAClC,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,CAAE;QAChB,IAAI,CAAC,CAAC,cAAc,MAAM,GAAG;YACzB,6CAA6C;YAC7C,SAAS;gBAAE,UAAU;YAAO;QAChC;QACA,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAgB;QAC9C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;YACpC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,YAAY,GACZ,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;YACjC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ;IACnC;IACA,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG;IAC5B;IACA,iBAAiB;QACb,OAAO;YACH,IAAI,kKAAA,CAAA,eAAY,CAAC;gBACb,SAAS;oBACL;wBACI,MAAM;wBACN,WAAW;4BACP,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM;4BAC5B,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG;wBAC1B;oBACJ;iBACH;YACL;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10494, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/tiktoken.js"],"sourcesContent":["import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n    return getEncoding(getEncodingNameForModel(model));\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AACA,MAAM,QAAQ,CAAC;AACf,MAAM,SAAS,aAAa,GAAG,IAAI,sKAAA,CAAA,cAAW,CAAC,CAAC;AACzC,eAAe,YAAY,QAAQ;IACtC,IAAI,CAAC,CAAC,YAAY,KAAK,GAAG;QACtB,KAAK,CAAC,SAAS,GAAG,OACb,KAAK,CAAC,CAAC,8BAA8B,EAAE,SAAS,KAAK,CAAC,EACtD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS,IAAI,6JAAA,CAAA,WAAQ,CAAC,OAC5B,KAAK,CAAC,CAAC;YACR,OAAO,KAAK,CAAC,SAAS;YACtB,MAAM;QACV;IACJ;IACA,OAAO,MAAM,KAAK,CAAC,SAAS;AAChC;AACO,eAAe,iBAAiB,KAAK;IACxC,OAAO,YAAY,CAAA,GAAA,6JAAA,CAAA,0BAAuB,AAAD,EAAE;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10523, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/language_models/base.js"],"sourcesContent":["import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        const { cache, ...rest } = params;\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...rest,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10785, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/passthrough.js"],"sourcesContent":["import { concat } from \"../utils/stream.js\";\nimport { Runnable, RunnableAssign, RunnableMap, } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnablePassthrough extends Runnable {\n    static lc_name() {\n        return \"RunnablePassthrough\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (fields) {\n            this.func = fields.func;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        if (this.func) {\n            await this.func(input, config);\n        }\n        return this._callWithConfig((input) => Promise.resolve(input), input, config);\n    }\n    async *transform(generator, options) {\n        const config = ensureConfig(options);\n        let finalOutput;\n        let finalOutputSupported = true;\n        for await (const chunk of this._transformStreamWithConfig(generator, (input) => input, config)) {\n            yield chunk;\n            if (finalOutputSupported) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        finalOutput = concat(finalOutput, chunk);\n                    }\n                    catch {\n                        finalOutput = undefined;\n                        finalOutputSupported = false;\n                    }\n                }\n            }\n        }\n        if (this.func && finalOutput !== undefined) {\n            await this.func(finalOutput, config);\n        }\n    }\n    /**\n     * A runnable that assigns key-value pairs to the input.\n     *\n     * The example below shows how you could use it with an inline function.\n     *\n     * @example\n     * ```typescript\n     * const prompt =\n     *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n     * Question: {question}\n     * SQL Query:`);\n     *\n     * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n     * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n     * // In this case, we're passing the schema.\n     * const sqlQueryGeneratorChain = RunnableSequence.from([\n     *   RunnablePassthrough.assign({\n     *     schema: async () => db.getTableInfo(),\n     *   }),\n     *   prompt,\n     *   new ChatOpenAI({}).withConfig({ stop: [\"\\nSQLResult:\"] }),\n     *   new StringOutputParser(),\n     * ]);\n     * const result = await sqlQueryGeneratorChain.invoke({\n     *   question: \"How many employees are there?\",\n     * });\n     * ```\n     */\n    static assign(mapping) {\n        return new RunnableAssign(new RunnableMap({ steps: mapping }));\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AA4BO,MAAM,4BAA4B,kKAAA,CAAA,WAAQ;IAC7C,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAY;QAC1C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,QAAQ;YACR,IAAI,CAAC,IAAI,GAAG,OAAO,IAAI;QAC3B;IACJ;IACA,MAAM,OAAO,KAAK,EAAE,OAAO,EAAE;QACzB,MAAM,SAAS,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE;QAC5B,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;QAC3B;QACA,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,QAAU,QAAQ,OAAO,CAAC,QAAQ,OAAO;IAC1E;IACA,OAAO,UAAU,SAAS,EAAE,OAAO,EAAE;QACjC,MAAM,SAAS,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE;QAC5B,IAAI;QACJ,IAAI,uBAAuB;QAC3B,WAAW,MAAM,SAAS,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,QAAU,OAAO,QAAS;YAC5F,MAAM;YACN,IAAI,sBAAsB;gBACtB,IAAI,gBAAgB,WAAW;oBAC3B,cAAc;gBAClB,OACK;oBACD,IAAI;wBACA,8DAA8D;wBAC9D,cAAc,CAAA,GAAA,gKAAA,CAAA,SAAM,AAAD,EAAE,aAAa;oBACtC,EACA,OAAM;wBACF,cAAc;wBACd,uBAAuB;oBAC3B;gBACJ;YACJ;QACJ;QACA,IAAI,IAAI,CAAC,IAAI,IAAI,gBAAgB,WAAW;YACxC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa;QACjC;IACJ;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2BC,GACD,OAAO,OAAO,OAAO,EAAE;QACnB,OAAO,IAAI,kKAAA,CAAA,iBAAc,CAAC,IAAI,kKAAA,CAAA,cAAW,CAAC;YAAE,OAAO;QAAQ;IAC/D;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10895, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/types/is_zod_schema.js"],"sourcesContent":["import { z } from \"zod\";\n/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {z.ZodType<RunOutput> | Record<string, unknown>} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isZodSchema(input) {\n    if (!input) {\n        return false;\n    }\n    if (typeof input !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(input)) {\n        return false;\n    }\n    const asZodSchema = input;\n    // relies on an internal property of Zod schemas, so this may break in the future, hence the\n    // additional fallback checks below\n    if (asZodSchema._def) {\n        return true;\n    }\n    const zodFirstPartyTypeKinds = Object.values(z.ZodFirstPartyTypeKind);\n    if (zodFirstPartyTypeKinds.includes(asZodSchema.constructor?.name ?? \"NOT_INCLUDED\")) {\n        return true;\n    }\n    // if all else fails, assume based on the presence of parse, parseAsync, safeParse, and\n    // safeParseAsync, as these are characteristic of Zod schemas\n    return (typeof asZodSchema.parse === \"function\" &&\n        typeof asZodSchema.parseAsync === \"function\" &&\n        typeof asZodSchema.safeParse === \"function\" &&\n        typeof asZodSchema.safeParseAsync === \"function\");\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAOO,SAAS,YAAY,KAAK;IAC7B,IAAI,CAAC,OAAO;QACR,OAAO;IACX;IACA,IAAI,OAAO,UAAU,UAAU;QAC3B,OAAO;IACX;IACA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACtB,OAAO;IACX;IACA,MAAM,cAAc;IACpB,4FAA4F;IAC5F,mCAAmC;IACnC,IAAI,YAAY,IAAI,EAAE;QAClB,OAAO;IACX;IACA,MAAM,yBAAyB,OAAO,MAAM,CAAC,mLAAA,CAAA,IAAC,CAAC,qBAAqB;IACpE,IAAI,uBAAuB,QAAQ,CAAC,YAAY,WAAW,EAAE,QAAQ,iBAAiB;QAClF,OAAO;IACX;IACA,uFAAuF;IACvF,6DAA6D;IAC7D,OAAQ,OAAO,YAAY,KAAK,KAAK,cACjC,OAAO,YAAY,UAAU,KAAK,cAClC,OAAO,YAAY,SAAS,KAAK,cACjC,OAAO,YAAY,cAAc,KAAK;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10931, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/language_models/chat_models.js"],"sourcesContent":["import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { AIMessage, HumanMessage, coerceMessageLikeToMessage, isAIMessageChunk, isBaseMessage, isAIMessage, convertToOpenAIImageBlock, isURLContentBlock, isBase64ContentBlock, } from \"../messages/index.js\";\nimport { RUN_KEY, } from \"../outputs.js\";\nimport { BaseLanguageModel, } from \"./base.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { RunnableLambda, RunnableSequence, } from \"../runnables/base.js\";\nimport { concat } from \"../utils/stream.js\";\nimport { RunnablePassthrough } from \"../runnables/passthrough.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\nimport { callbackHandlerPrefersStreaming } from \"../callbacks/base.js\";\n/**\n * Creates a transform stream for encoding chat message chunks.\n * @deprecated Use {@link BytesOutputParser} instead\n * @returns A TransformStream instance that encodes chat message chunks.\n */\nexport function createChatMessageChunkEncoderStream() {\n    const textEncoder = new TextEncoder();\n    return new TransformStream({\n        transform(chunk, controller) {\n            controller.enqueue(textEncoder.encode(typeof chunk.content === \"string\"\n                ? chunk.content\n                : JSON.stringify(chunk.content)));\n        },\n    });\n}\nfunction _formatForTracing(messages) {\n    const messagesToTrace = [];\n    for (const message of messages) {\n        let messageToTrace = message;\n        if (Array.isArray(message.content)) {\n            for (let idx = 0; idx < message.content.length; idx++) {\n                const block = message.content[idx];\n                if (isURLContentBlock(block) || isBase64ContentBlock(block)) {\n                    if (messageToTrace === message) {\n                        // Also shallow-copy content\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        messageToTrace = new message.constructor({\n                            ...messageToTrace,\n                            content: [\n                                ...message.content.slice(0, idx),\n                                convertToOpenAIImageBlock(block),\n                                ...message.content.slice(idx + 1),\n                            ],\n                        });\n                    }\n                }\n            }\n        }\n        messagesToTrace.push(messageToTrace);\n    }\n    return messagesToTrace;\n}\n/**\n * Base class for chat models. It extends the BaseLanguageModel class and\n * provides methods for generating chat based on input messages.\n */\nexport class BaseChatModel extends BaseLanguageModel {\n    constructor(fields) {\n        super(fields);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", this._llmType()]\n        });\n        Object.defineProperty(this, \"disableStreaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _separateRunnableConfigFromCallOptionsCompat(options) {\n        // For backwards compat, keep `signal` in both runnableConfig and callOptions\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\n        callOptions.signal = runnableConfig.signal;\n        return [runnableConfig, callOptions];\n    }\n    /**\n     * Invokes the chat model with a single input.\n     * @param input The input for the language model.\n     * @param options The call options.\n     * @returns A Promise that resolves to a BaseMessageChunk.\n     */\n    async invoke(input, options) {\n        const promptValue = BaseChatModel._convertInputToPromptValue(input);\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\n        const chatGeneration = result.generations[0][0];\n        // TODO: Remove cast after figuring out inheritance\n        return chatGeneration.message;\n    }\n    // eslint-disable-next-line require-yield\n    async *_streamResponseChunks(_messages, _options, _runManager) {\n        throw new Error(\"Not implemented.\");\n    }\n    async *_streamIterator(input, options) {\n        // Subclass check required to avoid double callbacks with default implementation\n        if (this._streamResponseChunks ===\n            BaseChatModel.prototype._streamResponseChunks ||\n            this.disableStreaming) {\n            yield this.invoke(input, options);\n        }\n        else {\n            const prompt = BaseChatModel._convertInputToPromptValue(input);\n            const messages = prompt.toChatMessages();\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(options);\n            const inheritableMetadata = {\n                ...runnableConfig.metadata,\n                ...this.getLsParams(callOptions),\n            };\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: callOptions,\n                invocation_params: this?.invocationParams(callOptions),\n                batch_size: 1,\n            };\n            const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), [_formatForTracing(messages)], runnableConfig.runId, undefined, extra, undefined, undefined, runnableConfig.runName);\n            let generationChunk;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let llmOutput;\n            try {\n                for await (const chunk of this._streamResponseChunks(messages, callOptions, runManagers?.[0])) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    chunk.message.response_metadata = {\n                        ...chunk.generationInfo,\n                        ...chunk.message.response_metadata,\n                    };\n                    yield chunk.message;\n                    if (!generationChunk) {\n                        generationChunk = chunk;\n                    }\n                    else {\n                        generationChunk = generationChunk.concat(chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\n                // TODO: Remove cast after figuring out inheritance\n                generations: [[generationChunk]],\n                llmOutput,\n            })));\n        }\n    }\n    getLsParams(options) {\n        const providerName = this.getName().startsWith(\"Chat\")\n            ? this.getName().replace(\"Chat\", \"\")\n            : this.getName();\n        return {\n            ls_model_type: \"chat\",\n            ls_stop: options.stop,\n            ls_provider: providerName,\n        };\n    }\n    /** @ignore */\n    async _generateUncached(messages, parsedOptions, handledOptions, startedRunManagers) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        let runManagers;\n        if (startedRunManagers !== undefined &&\n            startedRunManagers.length === baseMessages.length) {\n            runManagers = startedRunManagers;\n        }\n        else {\n            const inheritableMetadata = {\n                ...handledOptions.metadata,\n                ...this.getLsParams(parsedOptions),\n            };\n            // create callback manager and start run\n            const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: parsedOptions,\n                invocation_params: this?.invocationParams(parsedOptions),\n                batch_size: 1,\n            };\n            runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        }\n        const generations = [];\n        const llmOutputs = [];\n        // Even if stream is not explicitly called, check if model is implicitly\n        // called from streamEvents() or streamLog() to get all streamed events.\n        // Bail out if _streamResponseChunks not overridden\n        const hasStreamingHandler = !!runManagers?.[0].handlers.find(callbackHandlerPrefersStreaming);\n        if (hasStreamingHandler &&\n            !this.disableStreaming &&\n            baseMessages.length === 1 &&\n            this._streamResponseChunks !==\n                BaseChatModel.prototype._streamResponseChunks) {\n            try {\n                const stream = await this._streamResponseChunks(baseMessages[0], parsedOptions, runManagers?.[0]);\n                let aggregated;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let llmOutput;\n                for await (const chunk of stream) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    if (aggregated === undefined) {\n                        aggregated = chunk;\n                    }\n                    else {\n                        aggregated = concat(aggregated, chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n                if (aggregated === undefined) {\n                    throw new Error(\"Received empty response from chat model call.\");\n                }\n                generations.push([aggregated]);\n                await runManagers?.[0].handleLLMEnd({\n                    generations,\n                    llmOutput,\n                });\n            }\n            catch (e) {\n                await runManagers?.[0].handleLLMError(e);\n                throw e;\n            }\n        }\n        else {\n            // generate results\n            const results = await Promise.allSettled(baseMessages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\n            // handle results\n            await Promise.all(results.map(async (pResult, i) => {\n                if (pResult.status === \"fulfilled\") {\n                    const result = pResult.value;\n                    for (const generation of result.generations) {\n                        if (generation.message.id == null) {\n                            const runId = runManagers?.at(0)?.runId;\n                            if (runId != null)\n                                generation.message._updateId(`run-${runId}`);\n                        }\n                        generation.message.response_metadata = {\n                            ...generation.generationInfo,\n                            ...generation.message.response_metadata,\n                        };\n                    }\n                    if (result.generations.length === 1) {\n                        result.generations[0].message.response_metadata = {\n                            ...result.llmOutput,\n                            ...result.generations[0].message.response_metadata,\n                        };\n                    }\n                    generations[i] = result.generations;\n                    llmOutputs[i] = result.llmOutput;\n                    return runManagers?.[i]?.handleLLMEnd({\n                        generations: [result.generations],\n                        llmOutput: result.llmOutput,\n                    });\n                }\n                else {\n                    // status === \"rejected\"\n                    await runManagers?.[i]?.handleLLMError(pResult.reason);\n                    return Promise.reject(pResult.reason);\n                }\n            }));\n        }\n        // create combined output\n        const output = {\n            generations,\n            llmOutput: llmOutputs.length\n                ? this._combineLLMOutput?.(...llmOutputs)\n                : undefined,\n        };\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    async _generateCached({ messages, cache, llmStringKey, parsedOptions, handledOptions, }) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const inheritableMetadata = {\n            ...handledOptions.metadata,\n            ...this.getLsParams(parsedOptions),\n        };\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: 1,\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        // generate results\n        const missingPromptIndices = [];\n        const results = await Promise.allSettled(baseMessages.map(async (baseMessage, index) => {\n            // Join all content into one string for the prompt index\n            const prompt = BaseChatModel._convertInputToPromptValue(baseMessage).toString();\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (result == null) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        // Map run managers to the results before filtering out null results\n        // Null results are just absent from the cache.\n        const cachedResults = results\n            .map((result, index) => ({ result, runManager: runManagers?.[index] }))\n            .filter(({ result }) => (result.status === \"fulfilled\" && result.value != null) ||\n            result.status === \"rejected\");\n        // Handle results and call run managers\n        const generations = [];\n        await Promise.all(cachedResults.map(async ({ result: promiseResult, runManager }, i) => {\n            if (promiseResult.status === \"fulfilled\") {\n                const result = promiseResult.value;\n                generations[i] = result.map((result) => {\n                    if (\"message\" in result &&\n                        isBaseMessage(result.message) &&\n                        isAIMessage(result.message)) {\n                        // eslint-disable-next-line no-param-reassign\n                        result.message.usage_metadata = {\n                            input_tokens: 0,\n                            output_tokens: 0,\n                            total_tokens: 0,\n                        };\n                    }\n                    // eslint-disable-next-line no-param-reassign\n                    result.generationInfo = {\n                        ...result.generationInfo,\n                        tokenUsage: {},\n                    };\n                    return result;\n                });\n                if (result.length) {\n                    await runManager?.handleLLMNewToken(result[0].text);\n                }\n                return runManager?.handleLLMEnd({\n                    generations: [result],\n                }, undefined, undefined, undefined, {\n                    cached: true,\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManager?.handleLLMError(promiseResult.reason, undefined, undefined, undefined, {\n                    cached: true,\n                });\n                return Promise.reject(promiseResult.reason);\n            }\n        }));\n        const output = {\n            generations,\n            missingPromptIndices,\n            startedRunManagers: runManagers,\n        };\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Generates chat based on the input messages.\n     * @param messages An array of arrays of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generate(messages, options, callbacks) {\n        // parse call options\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else {\n            parsedOptions = options;\n        }\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(parsedOptions);\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\n        if (!this.cache) {\n            return this._generateUncached(baseMessages, callOptions, runnableConfig);\n        }\n        const { cache } = this;\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\n        const { generations, missingPromptIndices, startedRunManagers } = await this._generateCached({\n            messages: baseMessages,\n            cache,\n            llmStringKey,\n            parsedOptions: callOptions,\n            handledOptions: runnableConfig,\n        });\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => baseMessages[i]), callOptions, runnableConfig, startedRunManagers !== undefined\n                ? missingPromptIndices.map((i) => startedRunManagers?.[i])\n                : undefined);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                // Join all content into one string for the prompt index\n                const prompt = BaseChatModel._convertInputToPromptValue(baseMessages[promptIndex]).toString();\n                return cache.update(prompt, llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _modelType() {\n        return \"base_chat_model\";\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this.invocationParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * Generates a prompt based on the input prompt values.\n     * @param promptValues An array of BasePromptValue instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generatePrompt(promptValues, options, callbacks) {\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\n        return this.generate(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async call(messages, options, callbacks) {\n        const result = await this.generate([messages.map(coerceMessageLikeToMessage)], options, callbacks);\n        const generations = result.generations;\n        return generations[0][0].message;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model with a prompt value.\n     * @param promptValue The value of the prompt.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async callPrompt(promptValue, options, callbacks) {\n        const promptMessages = promptValue.toChatMessages();\n        return this.call(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on the input messages.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async predictMessages(messages, options, callbacks) {\n        return this.call(messages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on a text input.\n     * @param text The text input.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a string.\n     */\n    async predict(text, options, callbacks) {\n        const message = new HumanMessage(text);\n        const result = await this.call([message], options, callbacks);\n        if (typeof result.content !== \"string\") {\n            throw new Error(\"Cannot use predict when output is not a string.\");\n        }\n        return result.content;\n    }\n    withStructuredOutput(outputSchema, config) {\n        if (typeof this.bindTools !== \"function\") {\n            throw new Error(`Chat model must implement \".bindTools()\" to use withStructuredOutput.`);\n        }\n        if (config?.strict) {\n            throw new Error(`\"strict\" mode is not supported for this model by default.`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const description = schema.description ?? \"A function available to call.\";\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        if (method === \"jsonMode\") {\n            throw new Error(`Base withStructuredOutput implementation only supports \"functionCalling\" as a method.`);\n        }\n        let functionName = name ?? \"extract\";\n        let tools;\n        if (isZodSchema(schema)) {\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: zodToJsonSchema(schema),\n                    },\n                },\n            ];\n        }\n        else {\n            if (\"name\" in schema) {\n                functionName = schema.name;\n            }\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: schema,\n                    },\n                },\n            ];\n        }\n        const llm = this.bindTools(tools);\n        const outputParser = RunnableLambda.from((input) => {\n            if (!input.tool_calls || input.tool_calls.length === 0) {\n                throw new Error(\"No tool calls found in the response.\");\n            }\n            const toolCall = input.tool_calls.find((tc) => tc.name === functionName);\n            if (!toolCall) {\n                throw new Error(`No tool call found with name ${functionName}.`);\n            }\n            return toolCall.args;\n        });\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"StructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"StructuredOutputRunnable\",\n        });\n    }\n}\n/**\n * An abstract class that extends BaseChatModel and provides a simple\n * implementation of _generate.\n */\nexport class SimpleChatModel extends BaseChatModel {\n    async _generate(messages, options, runManager) {\n        const text = await this._call(messages, options, runManager);\n        const message = new AIMessage(text);\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Cannot generate with a simple chat model when output is not a string.\");\n        }\n        return {\n            generations: [\n                {\n                    text: message.content,\n                    message,\n                },\n            ],\n        };\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11567, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/language_models/chat_models.js"],"sourcesContent":["export * from '../dist/language_models/chat_models.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11585, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/language_models/base.js"],"sourcesContent":["export * from '../dist/language_models/base.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11603, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/router.js"],"sourcesContent":["import { Runnable } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable that routes to a set of runnables based on Input['key'].\n * Returns the output of the selected runnable.\n * @example\n * ```typescript\n * import { RouterRunnable, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const router = new RouterRunnable({\n *   runnables: {\n *     toUpperCase: RunnableLambda.from((text: string) => text.toUpperCase()),\n *     reverseText: RunnableLambda.from((text: string) =>\n *       text.split(\"\").reverse().join(\"\")\n *     ),\n *   },\n * });\n *\n * // Invoke the 'reverseText' runnable\n * const result1 = router.invoke({ key: \"reverseText\", input: \"Hello World\" });\n *\n * // \"dlroW olleH\"\n *\n * // Invoke the 'toUpperCase' runnable\n * const result2 = router.invoke({ key: \"toUpperCase\", input: \"Hello World\" });\n *\n * // \"HELLO WORLD\"\n * ```\n */\nexport class RouterRunnable extends Runnable {\n    static lc_name() {\n        return \"RouterRunnable\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnables = fields.runnables;\n    }\n    async invoke(input, options) {\n        const { key, input: actualInput } = input;\n        const runnable = this.runnables[key];\n        if (runnable === undefined) {\n            throw new Error(`No runnable associated with key \"${key}\".`);\n        }\n        return runnable.invoke(actualInput, ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const keys = inputs.map((input) => input.key);\n        const actualInputs = inputs.map((input) => input.input);\n        const missingKey = keys.find((key) => this.runnables[key] === undefined);\n        if (missingKey !== undefined) {\n            throw new Error(`One or more keys do not have a corresponding runnable.`);\n        }\n        const runnables = keys.map((key) => this.runnables[key]);\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = optionsList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const batchSize = maxConcurrency && maxConcurrency > 0 ? maxConcurrency : inputs.length;\n        const batchResults = [];\n        for (let i = 0; i < actualInputs.length; i += batchSize) {\n            const batchPromises = actualInputs\n                .slice(i, i + batchSize)\n                .map((actualInput, i) => runnables[i].invoke(actualInput, optionsList[i]));\n            const batchResult = await Promise.all(batchPromises);\n            batchResults.push(batchResult);\n        }\n        return batchResults.flat();\n    }\n    async stream(input, options) {\n        const { key, input: actualInput } = input;\n        const runnable = this.runnables[key];\n        if (runnable === undefined) {\n            throw new Error(`No runnable associated with key \"${key}\".`);\n        }\n        return runnable.stream(actualInput, options);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AA4BO,MAAM,uBAAuB,kKAAA,CAAA,WAAQ;IACxC,OAAO,UAAU;QACb,OAAO;IACX;IACA,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAY;QAC1C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;YACrC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,SAAS,GAAG,OAAO,SAAS;IACrC;IACA,MAAM,OAAO,KAAK,EAAE,OAAO,EAAE;QACzB,MAAM,EAAE,GAAG,EAAE,OAAO,WAAW,EAAE,GAAG;QACpC,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,IAAI;QACpC,IAAI,aAAa,WAAW;YACxB,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,IAAI,EAAE,CAAC;QAC/D;QACA,OAAO,SAAS,MAAM,CAAC,aAAa,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE;IACrD;IACA,MAAM,MAAM,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE;QACvC,MAAM,OAAO,OAAO,GAAG,CAAC,CAAC,QAAU,MAAM,GAAG;QAC5C,MAAM,eAAe,OAAO,GAAG,CAAC,CAAC,QAAU,MAAM,KAAK;QACtD,MAAM,aAAa,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK;QAC9D,IAAI,eAAe,WAAW;YAC1B,MAAM,IAAI,MAAM,CAAC,sDAAsD,CAAC;QAC5E;QACA,MAAM,YAAY,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,CAAC,SAAS,CAAC,IAAI;QACvD,MAAM,cAAc,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,OAAO,MAAM;QACrE,MAAM,iBAAiB,WAAW,CAAC,EAAE,EAAE,kBAAkB,cAAc;QACvE,MAAM,YAAY,kBAAkB,iBAAiB,IAAI,iBAAiB,OAAO,MAAM;QACvF,MAAM,eAAe,EAAE;QACvB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,KAAK,UAAW;YACrD,MAAM,gBAAgB,aACjB,KAAK,CAAC,GAAG,IAAI,WACb,GAAG,CAAC,CAAC,aAAa,IAAM,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,WAAW,CAAC,EAAE;YAC5E,MAAM,cAAc,MAAM,QAAQ,GAAG,CAAC;YACtC,aAAa,IAAI,CAAC;QACtB;QACA,OAAO,aAAa,IAAI;IAC5B;IACA,MAAM,OAAO,KAAK,EAAE,OAAO,EAAE;QACzB,MAAM,EAAE,GAAG,EAAE,OAAO,WAAW,EAAE,GAAG;QACpC,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,IAAI;QACpC,IAAI,aAAa,WAAW;YACxB,MAAM,IAAI,MAAM,CAAC,iCAAiC,EAAE,IAAI,EAAE,CAAC;QAC/D;QACA,OAAO,SAAS,MAAM,CAAC,aAAa;IACxC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11681, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/branch.js"],"sourcesContent":["import { Runnable, _coerceToDict, _coerceToRunnable, } from \"./base.js\";\nimport { getCallbackManagerForConfig, patchConfig, } from \"./config.js\";\nimport { concat } from \"../utils/stream.js\";\n/**\n * Class that represents a runnable branch. The RunnableBranch is\n * initialized with an array of branches and a default branch. When invoked,\n * it evaluates the condition of each branch in order and executes the\n * corresponding branch if the condition is true. If none of the conditions\n * are true, it executes the default branch.\n * @example\n * ```typescript\n * const branch = RunnableBranch.from([\n *   [\n *     (x: { topic: string; question: string }) =>\n *       x.topic.toLowerCase().includes(\"anthropic\"),\n *     anthropicChain,\n *   ],\n *   [\n *     (x: { topic: string; question: string }) =>\n *       x.topic.toLowerCase().includes(\"langchain\"),\n *     langChainChain,\n *   ],\n *   generalChain,\n * ]);\n *\n * const fullChain = RunnableSequence.from([\n *   {\n *     topic: classificationChain,\n *     question: (input: { question: string }) => input.question,\n *   },\n *   branch,\n * ]);\n *\n * const result = await fullChain.invoke({\n *   question: \"how do I use LangChain?\",\n * });\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnableBranch extends Runnable {\n    static lc_name() {\n        return \"RunnableBranch\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"default\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"branches\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.branches = fields.branches;\n        this.default = fields.default;\n    }\n    /**\n     * Convenience method for instantiating a RunnableBranch from\n     * RunnableLikes (objects, functions, or Runnables).\n     *\n     * Each item in the input except for the last one should be a\n     * tuple with two items. The first is a \"condition\" RunnableLike that\n     * returns \"true\" if the second RunnableLike in the tuple should run.\n     *\n     * The final item in the input should be a RunnableLike that acts as a\n     * default branch if no other branches match.\n     *\n     * @example\n     * ```ts\n     * import { RunnableBranch } from \"@langchain/core/runnables\";\n     *\n     * const branch = RunnableBranch.from([\n     *   [(x: number) => x > 0, (x: number) => x + 1],\n     *   [(x: number) => x < 0, (x: number) => x - 1],\n     *   (x: number) => x\n     * ]);\n     * ```\n     * @param branches An array where the every item except the last is a tuple of [condition, runnable]\n     *   pairs. The last item is a default runnable which is invoked if no other condition matches.\n     * @returns A new RunnableBranch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from(branches) {\n        if (branches.length < 1) {\n            throw new Error(\"RunnableBranch requires at least one branch\");\n        }\n        const branchLikes = branches.slice(0, -1);\n        const coercedBranches = branchLikes.map(([condition, runnable]) => [\n            _coerceToRunnable(condition),\n            _coerceToRunnable(runnable),\n        ]);\n        const defaultBranch = _coerceToRunnable(branches[branches.length - 1]);\n        return new this({\n            branches: coercedBranches,\n            default: defaultBranch,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        let result;\n        for (let i = 0; i < this.branches.length; i += 1) {\n            const [condition, branchRunnable] = this.branches[i];\n            const conditionValue = await condition.invoke(input, patchConfig(config, {\n                callbacks: runManager?.getChild(`condition:${i + 1}`),\n            }));\n            if (conditionValue) {\n                result = await branchRunnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`branch:${i + 1}`),\n                }));\n                break;\n            }\n        }\n        if (!result) {\n            result = await this.default.invoke(input, patchConfig(config, {\n                callbacks: runManager?.getChild(\"branch:default\"),\n            }));\n        }\n        return result;\n    }\n    async invoke(input, config = {}) {\n        return this._callWithConfig(this._invoke, input, config);\n    }\n    async *_streamIterator(input, config) {\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config?.runId, undefined, undefined, undefined, config?.runName);\n        let finalOutput;\n        let finalOutputSupported = true;\n        let stream;\n        try {\n            for (let i = 0; i < this.branches.length; i += 1) {\n                const [condition, branchRunnable] = this.branches[i];\n                const conditionValue = await condition.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`condition:${i + 1}`),\n                }));\n                if (conditionValue) {\n                    stream = await branchRunnable.stream(input, patchConfig(config, {\n                        callbacks: runManager?.getChild(`branch:${i + 1}`),\n                    }));\n                    for await (const chunk of stream) {\n                        yield chunk;\n                        if (finalOutputSupported) {\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                try {\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = undefined;\n                                    finalOutputSupported = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            if (stream === undefined) {\n                stream = await this.default.stream(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(\"branch:default\"),\n                }));\n                for await (const chunk of stream) {\n                    yield chunk;\n                    if (finalOutputSupported) {\n                        if (finalOutput === undefined) {\n                            finalOutput = chunk;\n                        }\n                        else {\n                            try {\n                                finalOutput = concat(finalOutput, chunk);\n                            }\n                            catch (e) {\n                                finalOutput = undefined;\n                                finalOutputSupported = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {});\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11857, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/history.js"],"sourcesContent":["import { AIMessage, HumanMessage, isBaseMessage, } from \"../messages/index.js\";\nimport { RunnableBinding, RunnableLambda, } from \"./base.js\";\nimport { RunnablePassthrough } from \"./passthrough.js\";\n/**\n * Wraps a LCEL chain and manages history. It appends input messages\n * and chain outputs as history, and adds the current history messages to\n * the chain input.\n * @example\n * ```typescript\n * // yarn add @langchain/anthropic @langchain/community @upstash/redis\n *\n * import {\n *   ChatPromptTemplate,\n *   MessagesPlaceholder,\n * } from \"@langchain/core/prompts\";\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n * import { UpstashRedisChatMessageHistory } from \"@langchain/community/stores/message/upstash_redis\";\n * // For demos, you can also use an in-memory store:\n * // import { ChatMessageHistory } from \"langchain/stores/message/in_memory\";\n *\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"system\", \"You're an assistant who's good at {ability}\"],\n *   new MessagesPlaceholder(\"history\"),\n *   [\"human\", \"{question}\"],\n * ]);\n *\n * const chain = prompt.pipe(new ChatAnthropic({}));\n *\n * const chainWithHistory = new RunnableWithMessageHistory({\n *   runnable: chain,\n *   getMessageHistory: (sessionId) =>\n *     new UpstashRedisChatMessageHistory({\n *       sessionId,\n *       config: {\n *         url: process.env.UPSTASH_REDIS_REST_URL!,\n *         token: process.env.UPSTASH_REDIS_REST_TOKEN!,\n *       },\n *     }),\n *   inputMessagesKey: \"question\",\n *   historyMessagesKey: \"history\",\n * });\n *\n * const result = await chainWithHistory.invoke(\n *   {\n *     ability: \"math\",\n *     question: \"What does cosine mean?\",\n *   },\n *   {\n *     configurable: {\n *       sessionId: \"some_string_identifying_a_user\",\n *     },\n *   }\n * );\n *\n * const result2 = await chainWithHistory.invoke(\n *   {\n *     ability: \"math\",\n *     question: \"What's its inverse?\",\n *   },\n *   {\n *     configurable: {\n *       sessionId: \"some_string_identifying_a_user\",\n *     },\n *   }\n * );\n * ```\n */\nexport class RunnableWithMessageHistory extends RunnableBinding {\n    constructor(fields) {\n        let historyChain = RunnableLambda.from((input, options) => this._enterHistory(input, options ?? {})).withConfig({ runName: \"loadHistory\" });\n        const messagesKey = fields.historyMessagesKey ?? fields.inputMessagesKey;\n        if (messagesKey) {\n            historyChain = RunnablePassthrough.assign({\n                [messagesKey]: historyChain,\n            }).withConfig({ runName: \"insertHistory\" });\n        }\n        const bound = historyChain\n            .pipe(fields.runnable.withListeners({\n            onEnd: (run, config) => this._exitHistory(run, config ?? {}),\n        }))\n            .withConfig({ runName: \"RunnableWithMessageHistory\" });\n        const config = fields.config ?? {};\n        super({\n            ...fields,\n            config,\n            bound,\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"historyMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"getMessageHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.getMessageHistory = fields.getMessageHistory;\n        this.inputMessagesKey = fields.inputMessagesKey;\n        this.outputMessagesKey = fields.outputMessagesKey;\n        this.historyMessagesKey = fields.historyMessagesKey;\n    }\n    _getInputMessages(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    inputValue) {\n        let parsedInputValue;\n        if (typeof inputValue === \"object\" &&\n            !Array.isArray(inputValue) &&\n            !isBaseMessage(inputValue)) {\n            let key;\n            if (this.inputMessagesKey) {\n                key = this.inputMessagesKey;\n            }\n            else if (Object.keys(inputValue).length === 1) {\n                key = Object.keys(inputValue)[0];\n            }\n            else {\n                key = \"input\";\n            }\n            if (Array.isArray(inputValue[key]) && Array.isArray(inputValue[key][0])) {\n                parsedInputValue = inputValue[key][0];\n            }\n            else {\n                parsedInputValue = inputValue[key];\n            }\n        }\n        else {\n            parsedInputValue = inputValue;\n        }\n        if (typeof parsedInputValue === \"string\") {\n            return [new HumanMessage(parsedInputValue)];\n        }\n        else if (Array.isArray(parsedInputValue)) {\n            return parsedInputValue;\n        }\n        else if (isBaseMessage(parsedInputValue)) {\n            return [parsedInputValue];\n        }\n        else {\n            throw new Error(`Expected a string, BaseMessage, or array of BaseMessages.\\nGot ${JSON.stringify(parsedInputValue, null, 2)}`);\n        }\n    }\n    _getOutputMessages(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    outputValue) {\n        let parsedOutputValue;\n        if (!Array.isArray(outputValue) &&\n            !isBaseMessage(outputValue) &&\n            typeof outputValue !== \"string\") {\n            let key;\n            if (this.outputMessagesKey !== undefined) {\n                key = this.outputMessagesKey;\n            }\n            else if (Object.keys(outputValue).length === 1) {\n                key = Object.keys(outputValue)[0];\n            }\n            else {\n                key = \"output\";\n            }\n            // If you are wrapping a chat model directly\n            // The output is actually this weird generations object\n            if (outputValue.generations !== undefined) {\n                parsedOutputValue = outputValue.generations[0][0].message;\n            }\n            else {\n                parsedOutputValue = outputValue[key];\n            }\n        }\n        else {\n            parsedOutputValue = outputValue;\n        }\n        if (typeof parsedOutputValue === \"string\") {\n            return [new AIMessage(parsedOutputValue)];\n        }\n        else if (Array.isArray(parsedOutputValue)) {\n            return parsedOutputValue;\n        }\n        else if (isBaseMessage(parsedOutputValue)) {\n            return [parsedOutputValue];\n        }\n        else {\n            throw new Error(`Expected a string, BaseMessage, or array of BaseMessages. Received: ${JSON.stringify(parsedOutputValue, null, 2)}`);\n        }\n    }\n    async _enterHistory(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, kwargs) {\n        const history = kwargs?.configurable?.messageHistory;\n        const messages = await history.getMessages();\n        if (this.historyMessagesKey === undefined) {\n            return messages.concat(this._getInputMessages(input));\n        }\n        return messages;\n    }\n    async _exitHistory(run, config) {\n        const history = config.configurable?.messageHistory;\n        // Get input messages\n        let inputs;\n        // Chat model inputs are nested arrays\n        if (Array.isArray(run.inputs) && Array.isArray(run.inputs[0])) {\n            inputs = run.inputs[0];\n        }\n        else {\n            inputs = run.inputs;\n        }\n        let inputMessages = this._getInputMessages(inputs);\n        // If historic messages were prepended to the input messages, remove them to\n        // avoid adding duplicate messages to history.\n        if (this.historyMessagesKey === undefined) {\n            const existingMessages = await history.getMessages();\n            inputMessages = inputMessages.slice(existingMessages.length);\n        }\n        // Get output messages\n        const outputValue = run.outputs;\n        if (!outputValue) {\n            throw new Error(`Output values from 'Run' undefined. Run: ${JSON.stringify(run, null, 2)}`);\n        }\n        const outputMessages = this._getOutputMessages(outputValue);\n        await history.addMessages([...inputMessages, ...outputMessages]);\n    }\n    async _mergeConfig(...configs) {\n        const config = await super._mergeConfig(...configs);\n        // Extract sessionId\n        if (!config.configurable || !config.configurable.sessionId) {\n            const exampleInput = {\n                [this.inputMessagesKey ?? \"input\"]: \"foo\",\n            };\n            const exampleConfig = { configurable: { sessionId: \"123\" } };\n            throw new Error(`sessionId is required. Pass it in as part of the config argument to .invoke() or .stream()\\n` +\n                `eg. chain.invoke(${JSON.stringify(exampleInput)}, ${JSON.stringify(exampleConfig)})`);\n        }\n        // attach messageHistory\n        const { sessionId } = config.configurable;\n        config.configurable.messageHistory = await this.getMessageHistory(sessionId);\n        return config;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12062, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/runnables/index.js"],"sourcesContent":["export { Runnable, RunnableBinding, RunnableEach, RunnableRetry, RunnableSequence, RunnableMap, RunnableParallel, RunnableLambda, RunnableWithFallbacks, RunnableAssign, RunnablePick, _coerceToRunnable, RunnableToolLike, } from \"./base.js\";\nexport { getCallbackManagerForConfig, patchConfig, ensureConfig, mergeConfigs, pickRunnableConfigKeys, } from \"./config.js\";\nexport { RunnablePassthrough } from \"./passthrough.js\";\nexport { RouterRunnable } from \"./router.js\";\nexport { RunnableBranch } from \"./branch.js\";\nexport { RunnableWithMessageHistory, } from \"./history.js\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12095, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/runnables.js"],"sourcesContent":["export * from './dist/runnables/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12113, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/base.js"],"sourcesContent":["import { Runnable } from \"../runnables/index.js\";\nimport { addLangChainErrorFields } from \"../errors/index.js\";\n/**\n * Abstract base class for parsing the output of a Large Language Model\n * (LLM) call. It provides methods for parsing the result of an LLM call\n * and invoking the parser with a given input.\n */\nexport class BaseLLMOutputParser extends Runnable {\n    /**\n     * Parses the result of an LLM call with a given prompt. By default, it\n     * simply calls `parseResult`.\n     * @param generations The generations from an LLM call.\n     * @param _prompt The prompt used in the LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n    _baseMessageToString(message) {\n        return typeof message.content === \"string\"\n            ? message.content\n            : this._baseMessageContentToString(message.content);\n    }\n    _baseMessageContentToString(content) {\n        return JSON.stringify(content);\n    }\n    /**\n     * Calls the parser with a given input and optional configuration options.\n     * If the input is a string, it creates a generation with the input as\n     * text and calls `parseResult`. If the input is a `BaseMessage`, it\n     * creates a generation with the input as a message and the content of the\n     * input as text, and then calls `parseResult`.\n     * @param input The input to the parser, which can be a string or a `BaseMessage`.\n     * @param options Optional configuration options.\n     * @returns A promise of the parsed output.\n     */\n    async invoke(input, options) {\n        if (typeof input === \"string\") {\n            return this._callWithConfig(async (input, options) => this.parseResult([{ text: input }], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n        else {\n            return this._callWithConfig(async (input, options) => this.parseResult([\n                {\n                    message: input,\n                    text: this._baseMessageToString(input),\n                },\n            ], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call.\n */\nexport class BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\n/**\n * Exception that output parsers should raise to signify a parsing error.\n *\n * This exists to differentiate parsing errors from other code or execution errors\n * that also may arise inside the output parser. OutputParserExceptions will be\n * available to catch and handle in ways to fix the parsing error, while other\n * errors will be raised.\n *\n * @param message - The error that's being re-raised or an error message.\n * @param llmOutput - String model output which is error-ing.\n * @param observation - String explanation of error which can be passed to a\n *     model to try and remediate the issue.\n * @param sendToLLM - Whether to send the observation and llm_output back to an Agent\n *     after an OutputParserException has been raised. This gives the underlying\n *     model driving the agent the context that the previous output was improperly\n *     structured, in the hopes that it will update the output to the correct\n *     format.\n */\nexport class OutputParserException extends Error {\n    constructor(message, llmOutput, observation, sendToLLM = false) {\n        super(message);\n        Object.defineProperty(this, \"llmOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendToLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmOutput = llmOutput;\n        this.observation = observation;\n        this.sendToLLM = sendToLLM;\n        if (sendToLLM) {\n            if (observation === undefined || llmOutput === undefined) {\n                throw new Error(\"Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true\");\n            }\n        }\n        addLangChainErrorFields(this, \"OUTPUT_PARSING_FAILURE\");\n    }\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;;;AAMO,MAAM,4BAA4B,kKAAA,CAAA,WAAQ;IAC7C;;;;;;;KAOC,GACD,sBAAsB,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE;QACnD,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa;IACzC;IACA,qBAAqB,OAAO,EAAE;QAC1B,OAAO,OAAO,QAAQ,OAAO,KAAK,WAC5B,QAAQ,OAAO,GACf,IAAI,CAAC,2BAA2B,CAAC,QAAQ,OAAO;IAC1D;IACA,4BAA4B,OAAO,EAAE;QACjC,OAAO,KAAK,SAAS,CAAC;IAC1B;IACA;;;;;;;;;KASC,GACD,MAAM,OAAO,KAAK,EAAE,OAAO,EAAE;QACzB,IAAI,OAAO,UAAU,UAAU;YAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,OAAO,UAAY,IAAI,CAAC,WAAW,CAAC;oBAAC;wBAAE,MAAM;oBAAM;iBAAE,EAAE,SAAS,YAAY,OAAO;gBAAE,GAAG,OAAO;gBAAE,SAAS;YAAS;QAC1J,OACK;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,OAAO,UAAY,IAAI,CAAC,WAAW,CAAC;oBACnE;wBACI,SAAS;wBACT,MAAM,IAAI,CAAC,oBAAoB,CAAC;oBACpC;iBACH,EAAE,SAAS,YAAY,OAAO;gBAAE,GAAG,OAAO;gBAAE,SAAS;YAAS;QACnE;IACJ;AACJ;AAIO,MAAM,yBAAyB;IAClC,YAAY,WAAW,EAAE,SAAS,EAAE;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,EAAE;IAC3C;IACA,MAAM,gBAAgB,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC5B;IACA;;KAEC,GACD,QAAQ;QACJ,MAAM,IAAI,MAAM;IACpB;AACJ;AAmBO,MAAM,8BAA8B;IACvC,YAAY,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,KAAK,CAAE;QAC5D,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;YACrC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,eAAe;YACvC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;YACrC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,WAAW;YACX,IAAI,gBAAgB,aAAa,cAAc,WAAW;gBACtD,MAAM,IAAI,MAAM;YACpB;QACJ;QACA,CAAA,GAAA,gKAAA,CAAA,0BAAuB,AAAD,EAAE,IAAI,EAAE;IAClC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12223, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/transform.js"],"sourcesContent":["import { deepCompareStrict } from \"@cfworker/json-schema\";\nimport { BaseOutputParser } from \"./base.js\";\nimport { isBaseMessage, isBaseMessageChunk, } from \"../messages/base.js\";\nimport { convertToChunk } from \"../messages/utils.js\";\nimport { GenerationChunk, ChatGenerationChunk, } from \"../outputs.js\";\n/**\n * Class to parse the output of an LLM call that also allows streaming inputs.\n */\nexport class BaseTransformOutputParser extends BaseOutputParser {\n    async *_transform(inputGenerator) {\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk === \"string\") {\n                yield this.parseResult([{ text: chunk }]);\n            }\n            else {\n                yield this.parseResult([\n                    {\n                        message: chunk,\n                        text: this._baseMessageToString(chunk),\n                    },\n                ]);\n            }\n        }\n    }\n    /**\n     * Transforms an asynchronous generator of input into an asynchronous\n     * generator of parsed output.\n     * @param inputGenerator An asynchronous generator of input.\n     * @param options A configuration object.\n     * @returns An asynchronous generator of parsed output.\n     */\n    async *transform(inputGenerator, options) {\n        yield* this._transformStreamWithConfig(inputGenerator, this._transform.bind(this), {\n            ...options,\n            runType: \"parser\",\n        });\n    }\n}\n/**\n * A base class for output parsers that can handle streaming input. It\n * extends the `BaseTransformOutputParser` class and provides a method for\n * converting parsed outputs into a diff format.\n */\nexport class BaseCumulativeTransformOutputParser extends BaseTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"diff\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.diff = fields?.diff ?? this.diff;\n    }\n    async *_transform(inputGenerator) {\n        let prevParsed;\n        let accGen;\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk !== \"string\" && typeof chunk.content !== \"string\") {\n                throw new Error(\"Cannot handle non-string output.\");\n            }\n            let chunkGen;\n            if (isBaseMessageChunk(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: chunk,\n                    text: chunk.content,\n                });\n            }\n            else if (isBaseMessage(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: convertToChunk(chunk),\n                    text: chunk.content,\n                });\n            }\n            else {\n                chunkGen = new GenerationChunk({ text: chunk });\n            }\n            if (accGen === undefined) {\n                accGen = chunkGen;\n            }\n            else {\n                accGen = accGen.concat(chunkGen);\n            }\n            const parsed = await this.parsePartialResult([accGen]);\n            if (parsed !== undefined &&\n                parsed !== null &&\n                !deepCompareStrict(parsed, prevParsed)) {\n                if (this.diff) {\n                    yield this._diff(prevParsed, parsed);\n                }\n                else {\n                    yield parsed;\n                }\n                prevParsed = parsed;\n            }\n        }\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;AAIO,MAAM,kCAAkC,uKAAA,CAAA,mBAAgB;IAC3D,OAAO,WAAW,cAAc,EAAE;QAC9B,WAAW,MAAM,SAAS,eAAgB;YACtC,IAAI,OAAO,UAAU,UAAU;gBAC3B,MAAM,IAAI,CAAC,WAAW,CAAC;oBAAC;wBAAE,MAAM;oBAAM;iBAAE;YAC5C,OACK;gBACD,MAAM,IAAI,CAAC,WAAW,CAAC;oBACnB;wBACI,SAAS;wBACT,MAAM,IAAI,CAAC,oBAAoB,CAAC;oBACpC;iBACH;YACL;QACJ;IACJ;IACA;;;;;;KAMC,GACD,OAAO,UAAU,cAAc,EAAE,OAAO,EAAE;QACtC,OAAO,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG;YAC/E,GAAG,OAAO;YACV,SAAS;QACb;IACJ;AACJ;AAMO,MAAM,4CAA4C;IACrD,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC;QACN,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;YAChC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,IAAI,CAAC,IAAI,GAAG,QAAQ,QAAQ,IAAI,CAAC,IAAI;IACzC;IACA,OAAO,WAAW,cAAc,EAAE;QAC9B,IAAI;QACJ,IAAI;QACJ,WAAW,MAAM,SAAS,eAAgB;YACtC,IAAI,OAAO,UAAU,YAAY,OAAO,MAAM,OAAO,KAAK,UAAU;gBAChE,MAAM,IAAI,MAAM;YACpB;YACA,IAAI;YACJ,IAAI,CAAA,GAAA,iKAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;gBAC3B,IAAI,OAAO,MAAM,OAAO,KAAK,UAAU;oBACnC,MAAM,IAAI,MAAM;gBACpB;gBACA,WAAW,IAAI,wJAAA,CAAA,sBAAmB,CAAC;oBAC/B,SAAS;oBACT,MAAM,MAAM,OAAO;gBACvB;YACJ,OACK,IAAI,CAAA,GAAA,iKAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;gBAC3B,IAAI,OAAO,MAAM,OAAO,KAAK,UAAU;oBACnC,MAAM,IAAI,MAAM;gBACpB;gBACA,WAAW,IAAI,wJAAA,CAAA,sBAAmB,CAAC;oBAC/B,SAAS,CAAA,GAAA,kKAAA,CAAA,iBAAc,AAAD,EAAE;oBACxB,MAAM,MAAM,OAAO;gBACvB;YACJ,OACK;gBACD,WAAW,IAAI,wJAAA,CAAA,kBAAe,CAAC;oBAAE,MAAM;gBAAM;YACjD;YACA,IAAI,WAAW,WAAW;gBACtB,SAAS;YACb,OACK;gBACD,SAAS,OAAO,MAAM,CAAC;YAC3B;YACA,MAAM,SAAS,MAAM,IAAI,CAAC,kBAAkB,CAAC;gBAAC;aAAO;YACrD,IAAI,WAAW,aACX,WAAW,QACX,CAAC,CAAA,GAAA,0LAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ,aAAa;gBACxC,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY;gBACjC,OACK;oBACD,MAAM;gBACV;gBACA,aAAa;YACjB;QACJ;IACJ;IACA,wBAAwB;QACpB,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12338, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/bytes.js"],"sourcesContent":["import { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * OutputParser that parses LLMResult into the top likely string and\n * encodes it into bytes.\n */\nexport class BytesOutputParser extends BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"bytes\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"textEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new TextEncoder()\n        });\n    }\n    static lc_name() {\n        return \"BytesOutputParser\";\n    }\n    parse(text) {\n        return Promise.resolve(this.textEncoder.encode(text));\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM,0BAA0B,4KAAA,CAAA,4BAAyB;IAC5D,aAAc;QACV,KAAK,IAAI;QACT,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;gBAAkB;aAAQ;QACxD;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,eAAe;YACvC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,IAAI;QACf;IACJ;IACA,OAAO,UAAU;QACb,OAAO;IACX;IACA,MAAM,IAAI,EAAE;QACR,OAAO,QAAQ,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IACnD;IACA,wBAAwB;QACpB,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12385, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/list.js"],"sourcesContent":["import { OutputParserException } from \"./base.js\";\nimport { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * Class to parse the output of an LLM call to a list.\n * @augments BaseOutputParser\n */\nexport class ListOutputParser extends BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async *_transform(inputGenerator) {\n        let buffer = \"\";\n        for await (const input of inputGenerator) {\n            if (typeof input === \"string\") {\n                // add current chunk to buffer\n                buffer += input;\n            }\n            else {\n                // extract message content and add to buffer\n                buffer += input.content;\n            }\n            // get parts in buffer\n            if (!this.re) {\n                const parts = await this.parse(buffer);\n                if (parts.length > 1) {\n                    // if there are multiple parts, yield all but the last one\n                    for (const part of parts.slice(0, -1)) {\n                        yield [part];\n                    }\n                    // keep the last part in the buffer\n                    buffer = parts[parts.length - 1];\n                }\n            }\n            else {\n                // if there is a regex, get all matches\n                const matches = [...buffer.matchAll(this.re)];\n                if (matches.length > 1) {\n                    let doneIdx = 0;\n                    // if there are multiple matches, yield all but the last one\n                    for (const match of matches.slice(0, -1)) {\n                        yield [match[1]];\n                        doneIdx += (match.index ?? 0) + match[0].length;\n                    }\n                    // keep the last match in the buffer\n                    buffer = buffer.slice(doneIdx);\n                }\n            }\n        }\n        // yield the last part\n        for (const part of await this.parse(buffer)) {\n            yield [part];\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call as a comma-separated list.\n * @augments ListOutputParser\n */\nexport class CommaSeparatedListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"CommaSeparatedListOutputParser\";\n    }\n    /**\n     * Parses the given text into an array of strings, using a comma as the\n     * separator. If the parsing fails, throws an OutputParserException.\n     * @param text The text to parse.\n     * @returns An array of strings obtained by splitting the input text at each comma.\n     */\n    async parse(text) {\n        try {\n            return text\n                .trim()\n                .split(\",\")\n                .map((s) => s.trim());\n        }\n        catch (e) {\n            throw new OutputParserException(`Could not parse output: ${text}`, text);\n        }\n    }\n    /**\n     * Provides instructions on the expected format of the response for the\n     * CommaSeparatedListOutputParser.\n     * @returns A string containing instructions on the expected format of the response.\n     */\n    getFormatInstructions() {\n        return `Your response should be a list of comma separated values, eg: \\`foo, bar, baz\\``;\n    }\n}\n/**\n * Class to parse the output of an LLM call to a list with a specific length and separator.\n * @augments ListOutputParser\n */\nexport class CustomListOutputParser extends ListOutputParser {\n    constructor({ length, separator }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.length = length;\n        this.separator = separator || \",\";\n    }\n    /**\n     * Parses the given text into an array of strings, using the specified\n     * separator. If the parsing fails or the number of items in the list\n     * doesn't match the expected length, throws an OutputParserException.\n     * @param text The text to parse.\n     * @returns An array of strings obtained by splitting the input text at each occurrence of the specified separator.\n     */\n    async parse(text) {\n        try {\n            const items = text\n                .trim()\n                .split(this.separator)\n                .map((s) => s.trim());\n            if (this.length !== undefined && items.length !== this.length) {\n                throw new OutputParserException(`Incorrect number of items. Expected ${this.length}, got ${items.length}.`);\n            }\n            return items;\n        }\n        catch (e) {\n            if (Object.getPrototypeOf(e) === OutputParserException.prototype) {\n                throw e;\n            }\n            throw new OutputParserException(`Could not parse output: ${text}`);\n        }\n    }\n    /**\n     * Provides instructions on the expected format of the response for the\n     * CustomListOutputParser, including the number of items and the\n     * separator.\n     * @returns A string containing instructions on the expected format of the response.\n     */\n    getFormatInstructions() {\n        return `Your response should be a list of ${this.length === undefined ? \"\" : `${this.length} `}items separated by \"${this.separator}\" (eg: \\`foo${this.separator} bar${this.separator} baz\\`)`;\n    }\n}\nexport class NumberedListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: /\\d+\\.\\s([^\\n]+)/g\n        });\n    }\n    static lc_name() {\n        return \"NumberedListOutputParser\";\n    }\n    getFormatInstructions() {\n        return `Your response should be a numbered list with each item on a new line. For example: \\n\\n1. foo\\n\\n2. bar\\n\\n3. baz`;\n    }\n    async parse(text) {\n        return [...(text.matchAll(this.re) ?? [])].map((m) => m[1]);\n    }\n}\nexport class MarkdownListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: /^\\s*[-*]\\s([^\\n]+)$/gm\n        });\n    }\n    static lc_name() {\n        return \"NumberedListOutputParser\";\n    }\n    getFormatInstructions() {\n        return `Your response should be a numbered list with each item on a new line. For example: \\n\\n1. foo\\n\\n2. bar\\n\\n3. baz`;\n    }\n    async parse(text) {\n        return [...(text.matchAll(this.re) ?? [])].map((m) => m[1]);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12638, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/string.js"],"sourcesContent":["import { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * OutputParser that parses LLMResult into the top likely string.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n *\n * const chain = RunnableSequence.from([\n *   promptTemplate,\n *   new ChatOpenAI({}),\n *   new StringOutputParser(),\n * ]);\n *\n * const result = await chain.invoke({ topic: \"bears\" });\n * console.log(\"What do you call a bear with no teeth? A gummy bear!\");\n * ```\n */\nexport class StringOutputParser extends BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"string\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"StrOutputParser\";\n    }\n    /**\n     * Parses a string output from an LLM call. This method is meant to be\n     * implemented by subclasses to define how a string output from an LLM\n     * should be parsed.\n     * @param text The string output from an LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n    _textContentToString(content) {\n        return content.text;\n    }\n    _imageUrlContentToString(_content) {\n        throw new Error(`Cannot coerce a multimodal \"image_url\" message part into a string.`);\n    }\n    _messageContentComplexToString(content) {\n        switch (content.type) {\n            case \"text\":\n            case \"text_delta\":\n                if (\"text\" in content) {\n                    // Type guard for MessageContentText\n                    return this._textContentToString(content);\n                }\n                break;\n            case \"image_url\":\n                if (\"image_url\" in content) {\n                    // Type guard for MessageContentImageUrl\n                    return this._imageUrlContentToString(content);\n                }\n                break;\n            default:\n                throw new Error(`Cannot coerce \"${content.type}\" message part into a string.`);\n        }\n        throw new Error(`Invalid content type: ${content.type}`);\n    }\n    _baseMessageContentToString(content) {\n        return content.reduce((acc, item) => acc + this._messageContentComplexToString(item), \"\");\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAmBO,MAAM,2BAA2B,4KAAA,CAAA,4BAAyB;IAC7D,aAAc;QACV,KAAK,IAAI;QACT,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;gBAAkB;aAAS;QACzD;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;IACJ;IACA,OAAO,UAAU;QACb,OAAO;IACX;IACA;;;;;;;KAOC,GACD,MAAM,IAAI,EAAE;QACR,OAAO,QAAQ,OAAO,CAAC;IAC3B;IACA,wBAAwB;QACpB,OAAO;IACX;IACA,qBAAqB,OAAO,EAAE;QAC1B,OAAO,QAAQ,IAAI;IACvB;IACA,yBAAyB,QAAQ,EAAE;QAC/B,MAAM,IAAI,MAAM,CAAC,kEAAkE,CAAC;IACxF;IACA,+BAA+B,OAAO,EAAE;QACpC,OAAQ,QAAQ,IAAI;YAChB,KAAK;YACL,KAAK;gBACD,IAAI,UAAU,SAAS;oBACnB,oCAAoC;oBACpC,OAAO,IAAI,CAAC,oBAAoB,CAAC;gBACrC;gBACA;YACJ,KAAK;gBACD,IAAI,eAAe,SAAS;oBACxB,wCAAwC;oBACxC,OAAO,IAAI,CAAC,wBAAwB,CAAC;gBACzC;gBACA;YACJ;gBACI,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,QAAQ,IAAI,CAAC,6BAA6B,CAAC;QACrF;QACA,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,QAAQ,IAAI,EAAE;IAC3D;IACA,4BAA4B,OAAO,EAAE;QACjC,OAAO,QAAQ,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,IAAI,CAAC,8BAA8B,CAAC,OAAO;IAC1F;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12715, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/structured.js"],"sourcesContent":["import { z } from \"zod\";\nimport { zodToJsonSchema, } from \"zod-to-json-schema\";\nimport { BaseOutputParser, OutputParserException, } from \"./base.js\";\nexport class StructuredOutputParser extends BaseOutputParser {\n    static lc_name() {\n        return \"StructuredOutputParser\";\n    }\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(schema) {\n        super(schema);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"structured\"]\n        });\n    }\n    /**\n     * Creates a new StructuredOutputParser from a Zod schema.\n     * @param schema The Zod schema which the output should match\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    /**\n     * Creates a new StructuredOutputParser from a set of names and\n     * descriptions.\n     * @param schemas An object where each key is a name and each value is a description\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    /**\n     * Returns a markdown code snippet with a JSON object formatted according\n     * to the schema.\n     * @param options Optional. The options for formatting the instructions\n     * @returns A markdown code snippet with a JSON object formatted according to the schema.\n     */\n    getFormatInstructions() {\n        return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify(zodToJsonSchema(this.schema))}\n\\`\\`\\`\n`;\n    }\n    /**\n     * Parses the given text according to the schema.\n     * @param text The text to parse\n     * @returns The parsed output.\n     */\n    async parse(text) {\n        try {\n            const json = text.includes(\"```\")\n                ? text.trim().split(/```(?:json)?/)[1]\n                : text.trim();\n            const escapedJson = json\n                .replace(/\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/g, (_match, capturedGroup) => {\n                const escapedInsideQuotes = capturedGroup.replace(/\\n/g, \"\\\\n\");\n                return `\"${escapedInsideQuotes}\"`;\n            })\n                .replace(/\\n/g, \"\");\n            return await this.schema.parseAsync(JSON.parse(escapedJson));\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\n/**\n * A specific type of `StructuredOutputParser` that parses JSON data\n * formatted as a markdown code snippet.\n */\nexport class JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n    static lc_name() {\n        return \"JsonMarkdownStructuredOutputParser\";\n    }\n    getFormatInstructions(options) {\n        const interpolationDepth = options?.interpolationDepth ?? 1;\n        if (interpolationDepth < 1) {\n            throw new Error(\"f string interpolation depth must be at least 1\");\n        }\n        return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction(zodToJsonSchema(this.schema))\n            .replaceAll(\"{\", \"{\".repeat(interpolationDepth))\n            .replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n    }\n    _schemaToInstruction(schemaInput, indent = 2) {\n        const schema = schemaInput;\n        if (\"type\" in schema) {\n            let nullable = false;\n            let type;\n            if (Array.isArray(schema.type)) {\n                const nullIdx = schema.type.findIndex((type) => type === \"null\");\n                if (nullIdx !== -1) {\n                    nullable = true;\n                    schema.type.splice(nullIdx, 1);\n                }\n                type = schema.type.join(\" | \");\n            }\n            else {\n                type = schema.type;\n            }\n            if (schema.type === \"object\" && schema.properties) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                const properties = Object.entries(schema.properties)\n                    .map(([key, value]) => {\n                    const isOptional = schema.required?.includes(key)\n                        ? \"\"\n                        : \" (optional)\";\n                    return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n                })\n                    .join(\"\\n\");\n                return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n            }\n            if (schema.type === \"array\" && schema.items) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n            }\n            const isNullable = nullable ? \" (nullable)\" : \"\";\n            const description = schema.description ? ` // ${schema.description}` : \"\";\n            return `${type}${description}${isNullable}`;\n        }\n        if (\"anyOf\" in schema) {\n            return schema.anyOf\n                .map((s) => this._schemaToInstruction(s, indent))\n                .join(`\\n${\" \".repeat(indent - 2)}`);\n        }\n        throw new Error(\"unsupported schema type\");\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n}\n/**\n * A type of `StructuredOutputParser` that handles asymmetric input and\n * output schemas.\n */\nexport class AsymmetricStructuredOutputParser extends BaseOutputParser {\n    constructor({ inputSchema }) {\n        super(...arguments);\n        Object.defineProperty(this, \"structuredInputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n    }\n    async parse(text) {\n        let parsedInput;\n        try {\n            parsedInput = await this.structuredInputParser.parse(text);\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n        return this.outputProcessor(parsedInput);\n    }\n    getFormatInstructions() {\n        return this.structuredInputParser.getFormatInstructions();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12900, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/json_patch.js"],"sourcesContent":["export { compare, applyPatch, } from \"./fast-json-patch/index.js\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12918, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/json.js"],"sourcesContent":["import { BaseCumulativeTransformOutputParser } from \"./transform.js\";\nimport { compare } from \"../utils/json_patch.js\";\nimport { parseJsonMarkdown, parsePartialJson } from \"../utils/json.js\";\n/**\n * Class for parsing the output of an LLM into a JSON object.\n */\nexport class JsonOutputParser extends BaseCumulativeTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"JsonOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return compare(prev, next);\n    }\n    // This should actually return Partial<T>, but there's no way\n    // to specify emitted chunks as instances separate from the main output type.\n    async parsePartialResult(generations) {\n        return parseJsonMarkdown(generations[0].text);\n    }\n    async parse(text) {\n        return parseJsonMarkdown(text, JSON.parse);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\nexport { parsePartialJson, parseJsonMarkdown };\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;;;;AAIO,MAAM,yBAAyB,4KAAA,CAAA,sCAAmC;IACrE,aAAc;QACV,KAAK,IAAI;QACT,OAAO,cAAc,CAAC,IAAI,EAAE,gBAAgB;YACxC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;gBAAC;gBAAkB;aAAiB;QAC/C;QACA,OAAO,cAAc,CAAC,IAAI,EAAE,mBAAmB;YAC3C,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO;QACX;IACJ;IACA,OAAO,UAAU;QACb,OAAO;IACX;IACA,MAAM,IAAI,EAAE,IAAI,EAAE;QACd,IAAI,CAAC,MAAM;YACP,OAAO;QACX;QACA,IAAI,CAAC,MAAM;YACP,OAAO;gBAAC;oBAAE,IAAI;oBAAW,MAAM;oBAAI,OAAO;gBAAK;aAAE;QACrD;QACA,OAAO,CAAA,GAAA,gMAAA,CAAA,UAAO,AAAD,EAAE,MAAM;IACzB;IACA,6DAA6D;IAC7D,6EAA6E;IAC7E,MAAM,mBAAmB,WAAW,EAAE;QAClC,OAAO,CAAA,GAAA,8JAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI;IAChD;IACA,MAAM,MAAM,IAAI,EAAE;QACd,OAAO,CAAA,GAAA,8JAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,KAAK,KAAK;IAC7C;IACA,wBAAwB;QACpB,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12995, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/sax-js/sax.js"],"sourcesContent":["// @ts-nocheck\n// Inlined to deal with portability issues\n// Originally from: https://github.com/isaacs/sax-js\nconst initializeSax = function () {\n    const sax = {};\n    sax.parser = function (strict, opt) {\n        return new SAXParser(strict, opt);\n    };\n    sax.SAXParser = SAXParser;\n    sax.SAXStream = SAXStream;\n    sax.createStream = createStream;\n    // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n    // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n    // since that's the earliest that a buffer overrun could occur.  This way, checks are\n    // as rare as required, but as often as necessary to ensure never crossing this bound.\n    // Furthermore, buffers are only tested at most once per write(), so passing a very\n    // large string into write() might have undesirable effects, but this is manageable by\n    // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n    // edge case, result in creating at most one complete copy of the string passed in.\n    // Set to Infinity to have unlimited buffers.\n    sax.MAX_BUFFER_LENGTH = 64 * 1024;\n    const buffers = [\n        \"comment\",\n        \"sgmlDecl\",\n        \"textNode\",\n        \"tagName\",\n        \"doctype\",\n        \"procInstName\",\n        \"procInstBody\",\n        \"entity\",\n        \"attribName\",\n        \"attribValue\",\n        \"cdata\",\n        \"script\",\n    ];\n    sax.EVENTS = [\n        \"text\",\n        \"processinginstruction\",\n        \"sgmldeclaration\",\n        \"doctype\",\n        \"comment\",\n        \"opentagstart\",\n        \"attribute\",\n        \"opentag\",\n        \"closetag\",\n        \"opencdata\",\n        \"cdata\",\n        \"closecdata\",\n        \"error\",\n        \"end\",\n        \"ready\",\n        \"script\",\n        \"opennamespace\",\n        \"closenamespace\",\n    ];\n    function SAXParser(strict, opt) {\n        if (!(this instanceof SAXParser)) {\n            return new SAXParser(strict, opt);\n        }\n        var parser = this;\n        clearBuffers(parser);\n        parser.q = parser.c = \"\";\n        parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;\n        parser.opt = opt || {};\n        parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;\n        parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\";\n        parser.tags = [];\n        parser.closed = parser.closedRoot = parser.sawRoot = false;\n        parser.tag = parser.error = null;\n        parser.strict = !!strict;\n        parser.noscript = !!(strict || parser.opt.noscript);\n        parser.state = S.BEGIN;\n        parser.strictEntities = parser.opt.strictEntities;\n        parser.ENTITIES = parser.strictEntities\n            ? Object.create(sax.XML_ENTITIES)\n            : Object.create(sax.ENTITIES);\n        parser.attribList = [];\n        // namespaces form a prototype chain.\n        // it always points at the current tag,\n        // which protos to its parent tag.\n        if (parser.opt.xmlns) {\n            parser.ns = Object.create(rootNS);\n        }\n        // mostly just for error reporting\n        parser.trackPosition = parser.opt.position !== false;\n        if (parser.trackPosition) {\n            parser.position = parser.line = parser.column = 0;\n        }\n        emit(parser, \"onready\");\n    }\n    if (!Object.create) {\n        Object.create = function (o) {\n            function F() { }\n            F.prototype = o;\n            var newf = new F();\n            return newf;\n        };\n    }\n    if (!Object.keys) {\n        Object.keys = function (o) {\n            var a = [];\n            for (var i in o)\n                if (o.hasOwnProperty(i))\n                    a.push(i);\n            return a;\n        };\n    }\n    function checkBufferLength(parser) {\n        var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);\n        var maxActual = 0;\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            var len = parser[buffers[i]].length;\n            if (len > maxAllowed) {\n                // Text/cdata nodes can get big, and since they're buffered,\n                // we can get here under normal conditions.\n                // Avoid issues by emitting the text node now,\n                // so at least it won't get any bigger.\n                switch (buffers[i]) {\n                    case \"textNode\":\n                        closeText(parser);\n                        break;\n                    case \"cdata\":\n                        emitNode(parser, \"oncdata\", parser.cdata);\n                        parser.cdata = \"\";\n                        break;\n                    case \"script\":\n                        emitNode(parser, \"onscript\", parser.script);\n                        parser.script = \"\";\n                        break;\n                    default:\n                        error(parser, \"Max buffer length exceeded: \" + buffers[i]);\n                }\n            }\n            maxActual = Math.max(maxActual, len);\n        }\n        // schedule the next check for the earliest possible buffer overrun.\n        var m = sax.MAX_BUFFER_LENGTH - maxActual;\n        parser.bufferCheckPosition = m + parser.position;\n    }\n    function clearBuffers(parser) {\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            parser[buffers[i]] = \"\";\n        }\n    }\n    function flushBuffers(parser) {\n        closeText(parser);\n        if (parser.cdata !== \"\") {\n            emitNode(parser, \"oncdata\", parser.cdata);\n            parser.cdata = \"\";\n        }\n        if (parser.script !== \"\") {\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n    }\n    SAXParser.prototype = {\n        end: function () {\n            end(this);\n        },\n        write: write,\n        resume: function () {\n            this.error = null;\n            return this;\n        },\n        close: function () {\n            return this.write(null);\n        },\n        flush: function () {\n            flushBuffers(this);\n        },\n    };\n    var Stream = ReadableStream;\n    if (!Stream)\n        Stream = function () { };\n    var streamWraps = sax.EVENTS.filter(function (ev) {\n        return ev !== \"error\" && ev !== \"end\";\n    });\n    function createStream(strict, opt) {\n        return new SAXStream(strict, opt);\n    }\n    function SAXStream(strict, opt) {\n        if (!(this instanceof SAXStream)) {\n            return new SAXStream(strict, opt);\n        }\n        Stream.apply(this);\n        this._parser = new SAXParser(strict, opt);\n        this.writable = true;\n        this.readable = true;\n        var me = this;\n        this._parser.onend = function () {\n            me.emit(\"end\");\n        };\n        this._parser.onerror = function (er) {\n            me.emit(\"error\", er);\n            // if didn't throw, then means error was handled.\n            // go ahead and clear error, so we can write again.\n            me._parser.error = null;\n        };\n        this._decoder = null;\n        streamWraps.forEach(function (ev) {\n            Object.defineProperty(me, \"on\" + ev, {\n                get: function () {\n                    return me._parser[\"on\" + ev];\n                },\n                set: function (h) {\n                    if (!h) {\n                        me.removeAllListeners(ev);\n                        me._parser[\"on\" + ev] = h;\n                        return h;\n                    }\n                    me.on(ev, h);\n                },\n                enumerable: true,\n                configurable: false,\n            });\n        });\n    }\n    SAXStream.prototype = Object.create(Stream.prototype, {\n        constructor: {\n            value: SAXStream,\n        },\n    });\n    SAXStream.prototype.write = function (data) {\n        this._parser.write(data.toString());\n        this.emit(\"data\", data);\n        return true;\n    };\n    SAXStream.prototype.end = function (chunk) {\n        if (chunk && chunk.length) {\n            this.write(chunk);\n        }\n        this._parser.end();\n        return true;\n    };\n    SAXStream.prototype.on = function (ev, handler) {\n        var me = this;\n        if (!me._parser[\"on\" + ev] && streamWraps.indexOf(ev) !== -1) {\n            me._parser[\"on\" + ev] = function () {\n                var args = arguments.length === 1\n                    ? [arguments[0]]\n                    : Array.apply(null, arguments);\n                args.splice(0, 0, ev);\n                me.emit.apply(me, args);\n            };\n        }\n        return Stream.prototype.on.call(me, ev, handler);\n    };\n    // this really needs to be replaced with character classes.\n    // XML allows all manner of ridiculous numbers and digits.\n    var CDATA = \"[CDATA[\";\n    var DOCTYPE = \"DOCTYPE\";\n    var XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n    var XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n    var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE };\n    // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n    // This implementation works on strings, a single character at a time\n    // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n    // without a significant breaking change to either this  parser, or the\n    // JavaScript language.  Implementation of an emoji-capable xml parser\n    // is left as an exercise for the reader.\n    var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    function isWhitespace(c) {\n        return c === \" \" || c === \"\\n\" || c === \"\\r\" || c === \"\\t\";\n    }\n    function isQuote(c) {\n        return c === '\"' || c === \"'\";\n    }\n    function isAttribEnd(c) {\n        return c === \">\" || isWhitespace(c);\n    }\n    function isMatch(regex, c) {\n        return regex.test(c);\n    }\n    function notMatch(regex, c) {\n        return !isMatch(regex, c);\n    }\n    var S = 0;\n    sax.STATE = {\n        BEGIN: S++,\n        BEGIN_WHITESPACE: S++,\n        TEXT: S++,\n        TEXT_ENTITY: S++,\n        OPEN_WAKA: S++,\n        SGML_DECL: S++,\n        SGML_DECL_QUOTED: S++,\n        DOCTYPE: S++,\n        DOCTYPE_QUOTED: S++,\n        DOCTYPE_DTD: S++,\n        DOCTYPE_DTD_QUOTED: S++,\n        COMMENT_STARTING: S++,\n        COMMENT: S++,\n        COMMENT_ENDING: S++,\n        COMMENT_ENDED: S++,\n        CDATA: S++,\n        CDATA_ENDING: S++,\n        CDATA_ENDING_2: S++,\n        PROC_INST: S++,\n        PROC_INST_BODY: S++,\n        PROC_INST_ENDING: S++,\n        OPEN_TAG: S++,\n        OPEN_TAG_SLASH: S++,\n        ATTRIB: S++,\n        ATTRIB_NAME: S++,\n        ATTRIB_NAME_SAW_WHITE: S++,\n        ATTRIB_VALUE: S++,\n        ATTRIB_VALUE_QUOTED: S++,\n        ATTRIB_VALUE_CLOSED: S++,\n        ATTRIB_VALUE_UNQUOTED: S++,\n        ATTRIB_VALUE_ENTITY_Q: S++,\n        ATTRIB_VALUE_ENTITY_U: S++,\n        CLOSE_TAG: S++,\n        CLOSE_TAG_SAW_WHITE: S++,\n        SCRIPT: S++,\n        SCRIPT_ENDING: S++, // <script> ... <\n    };\n    sax.XML_ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n    };\n    sax.ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n        AElig: 198,\n        Aacute: 193,\n        Acirc: 194,\n        Agrave: 192,\n        Aring: 197,\n        Atilde: 195,\n        Auml: 196,\n        Ccedil: 199,\n        ETH: 208,\n        Eacute: 201,\n        Ecirc: 202,\n        Egrave: 200,\n        Euml: 203,\n        Iacute: 205,\n        Icirc: 206,\n        Igrave: 204,\n        Iuml: 207,\n        Ntilde: 209,\n        Oacute: 211,\n        Ocirc: 212,\n        Ograve: 210,\n        Oslash: 216,\n        Otilde: 213,\n        Ouml: 214,\n        THORN: 222,\n        Uacute: 218,\n        Ucirc: 219,\n        Ugrave: 217,\n        Uuml: 220,\n        Yacute: 221,\n        aacute: 225,\n        acirc: 226,\n        aelig: 230,\n        agrave: 224,\n        aring: 229,\n        atilde: 227,\n        auml: 228,\n        ccedil: 231,\n        eacute: 233,\n        ecirc: 234,\n        egrave: 232,\n        eth: 240,\n        euml: 235,\n        iacute: 237,\n        icirc: 238,\n        igrave: 236,\n        iuml: 239,\n        ntilde: 241,\n        oacute: 243,\n        ocirc: 244,\n        ograve: 242,\n        oslash: 248,\n        otilde: 245,\n        ouml: 246,\n        szlig: 223,\n        thorn: 254,\n        uacute: 250,\n        ucirc: 251,\n        ugrave: 249,\n        uuml: 252,\n        yacute: 253,\n        yuml: 255,\n        copy: 169,\n        reg: 174,\n        nbsp: 160,\n        iexcl: 161,\n        cent: 162,\n        pound: 163,\n        curren: 164,\n        yen: 165,\n        brvbar: 166,\n        sect: 167,\n        uml: 168,\n        ordf: 170,\n        laquo: 171,\n        not: 172,\n        shy: 173,\n        macr: 175,\n        deg: 176,\n        plusmn: 177,\n        sup1: 185,\n        sup2: 178,\n        sup3: 179,\n        acute: 180,\n        micro: 181,\n        para: 182,\n        middot: 183,\n        cedil: 184,\n        ordm: 186,\n        raquo: 187,\n        frac14: 188,\n        frac12: 189,\n        frac34: 190,\n        iquest: 191,\n        times: 215,\n        divide: 247,\n        OElig: 338,\n        oelig: 339,\n        Scaron: 352,\n        scaron: 353,\n        Yuml: 376,\n        fnof: 402,\n        circ: 710,\n        tilde: 732,\n        Alpha: 913,\n        Beta: 914,\n        Gamma: 915,\n        Delta: 916,\n        Epsilon: 917,\n        Zeta: 918,\n        Eta: 919,\n        Theta: 920,\n        Iota: 921,\n        Kappa: 922,\n        Lambda: 923,\n        Mu: 924,\n        Nu: 925,\n        Xi: 926,\n        Omicron: 927,\n        Pi: 928,\n        Rho: 929,\n        Sigma: 931,\n        Tau: 932,\n        Upsilon: 933,\n        Phi: 934,\n        Chi: 935,\n        Psi: 936,\n        Omega: 937,\n        alpha: 945,\n        beta: 946,\n        gamma: 947,\n        delta: 948,\n        epsilon: 949,\n        zeta: 950,\n        eta: 951,\n        theta: 952,\n        iota: 953,\n        kappa: 954,\n        lambda: 955,\n        mu: 956,\n        nu: 957,\n        xi: 958,\n        omicron: 959,\n        pi: 960,\n        rho: 961,\n        sigmaf: 962,\n        sigma: 963,\n        tau: 964,\n        upsilon: 965,\n        phi: 966,\n        chi: 967,\n        psi: 968,\n        omega: 969,\n        thetasym: 977,\n        upsih: 978,\n        piv: 982,\n        ensp: 8194,\n        emsp: 8195,\n        thinsp: 8201,\n        zwnj: 8204,\n        zwj: 8205,\n        lrm: 8206,\n        rlm: 8207,\n        ndash: 8211,\n        mdash: 8212,\n        lsquo: 8216,\n        rsquo: 8217,\n        sbquo: 8218,\n        ldquo: 8220,\n        rdquo: 8221,\n        bdquo: 8222,\n        dagger: 8224,\n        Dagger: 8225,\n        bull: 8226,\n        hellip: 8230,\n        permil: 8240,\n        prime: 8242,\n        Prime: 8243,\n        lsaquo: 8249,\n        rsaquo: 8250,\n        oline: 8254,\n        frasl: 8260,\n        euro: 8364,\n        image: 8465,\n        weierp: 8472,\n        real: 8476,\n        trade: 8482,\n        alefsym: 8501,\n        larr: 8592,\n        uarr: 8593,\n        rarr: 8594,\n        darr: 8595,\n        harr: 8596,\n        crarr: 8629,\n        lArr: 8656,\n        uArr: 8657,\n        rArr: 8658,\n        dArr: 8659,\n        hArr: 8660,\n        forall: 8704,\n        part: 8706,\n        exist: 8707,\n        empty: 8709,\n        nabla: 8711,\n        isin: 8712,\n        notin: 8713,\n        ni: 8715,\n        prod: 8719,\n        sum: 8721,\n        minus: 8722,\n        lowast: 8727,\n        radic: 8730,\n        prop: 8733,\n        infin: 8734,\n        ang: 8736,\n        and: 8743,\n        or: 8744,\n        cap: 8745,\n        cup: 8746,\n        int: 8747,\n        there4: 8756,\n        sim: 8764,\n        cong: 8773,\n        asymp: 8776,\n        ne: 8800,\n        equiv: 8801,\n        le: 8804,\n        ge: 8805,\n        sub: 8834,\n        sup: 8835,\n        nsub: 8836,\n        sube: 8838,\n        supe: 8839,\n        oplus: 8853,\n        otimes: 8855,\n        perp: 8869,\n        sdot: 8901,\n        lceil: 8968,\n        rceil: 8969,\n        lfloor: 8970,\n        rfloor: 8971,\n        lang: 9001,\n        rang: 9002,\n        loz: 9674,\n        spades: 9824,\n        clubs: 9827,\n        hearts: 9829,\n        diams: 9830,\n    };\n    Object.keys(sax.ENTITIES).forEach(function (key) {\n        var e = sax.ENTITIES[key];\n        var s = typeof e === \"number\" ? String.fromCharCode(e) : e;\n        sax.ENTITIES[key] = s;\n    });\n    for (var s in sax.STATE) {\n        sax.STATE[sax.STATE[s]] = s;\n    }\n    // shorthand\n    S = sax.STATE;\n    function emit(parser, event, data) {\n        parser[event] && parser[event](data);\n    }\n    function emitNode(parser, nodeType, data) {\n        if (parser.textNode)\n            closeText(parser);\n        emit(parser, nodeType, data);\n    }\n    function closeText(parser) {\n        parser.textNode = textopts(parser.opt, parser.textNode);\n        if (parser.textNode)\n            emit(parser, \"ontext\", parser.textNode);\n        parser.textNode = \"\";\n    }\n    function textopts(opt, text) {\n        if (opt.trim)\n            text = text.trim();\n        if (opt.normalize)\n            text = text.replace(/\\s+/g, \" \");\n        return text;\n    }\n    function error(parser, er) {\n        closeText(parser);\n        if (parser.trackPosition) {\n            er +=\n                \"\\nLine: \" +\n                    parser.line +\n                    \"\\nColumn: \" +\n                    parser.column +\n                    \"\\nChar: \" +\n                    parser.c;\n        }\n        er = new Error(er);\n        parser.error = er;\n        emit(parser, \"onerror\", er);\n        return parser;\n    }\n    function end(parser) {\n        if (parser.sawRoot && !parser.closedRoot)\n            strictFail(parser, \"Unclosed root tag\");\n        if (parser.state !== S.BEGIN &&\n            parser.state !== S.BEGIN_WHITESPACE &&\n            parser.state !== S.TEXT) {\n            error(parser, \"Unexpected end\");\n        }\n        closeText(parser);\n        parser.c = \"\";\n        parser.closed = true;\n        emit(parser, \"onend\");\n        SAXParser.call(parser, parser.strict, parser.opt);\n        return parser;\n    }\n    function strictFail(parser, message) {\n        if (typeof parser !== \"object\" || !(parser instanceof SAXParser)) {\n            throw new Error(\"bad call to strictFail\");\n        }\n        if (parser.strict) {\n            error(parser, message);\n        }\n    }\n    function newTag(parser) {\n        if (!parser.strict)\n            parser.tagName = parser.tagName[parser.looseCase]();\n        var parent = parser.tags[parser.tags.length - 1] || parser;\n        var tag = (parser.tag = { name: parser.tagName, attributes: {} });\n        // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n        if (parser.opt.xmlns) {\n            tag.ns = parent.ns;\n        }\n        parser.attribList.length = 0;\n        emitNode(parser, \"onopentagstart\", tag);\n    }\n    function qname(name, attribute) {\n        var i = name.indexOf(\":\");\n        var qualName = i < 0 ? [\"\", name] : name.split(\":\");\n        var prefix = qualName[0];\n        var local = qualName[1];\n        // <x \"xmlns\"=\"http://foo\">\n        if (attribute && name === \"xmlns\") {\n            prefix = \"xmlns\";\n            local = \"\";\n        }\n        return { prefix: prefix, local: local };\n    }\n    function attrib(parser) {\n        if (!parser.strict) {\n            parser.attribName = parser.attribName[parser.looseCase]();\n        }\n        if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n            parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n            parser.attribName = parser.attribValue = \"\";\n            return;\n        }\n        if (parser.opt.xmlns) {\n            var qn = qname(parser.attribName, true);\n            var prefix = qn.prefix;\n            var local = qn.local;\n            if (prefix === \"xmlns\") {\n                // namespace binding attribute. push the binding into scope\n                if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n                    strictFail(parser, \"xml: prefix must be bound to \" +\n                        XML_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else if (local === \"xmlns\" &&\n                    parser.attribValue !== XMLNS_NAMESPACE) {\n                    strictFail(parser, \"xmlns: prefix must be bound to \" +\n                        XMLNS_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else {\n                    var tag = parser.tag;\n                    var parent = parser.tags[parser.tags.length - 1] || parser;\n                    if (tag.ns === parent.ns) {\n                        tag.ns = Object.create(parent.ns);\n                    }\n                    tag.ns[local] = parser.attribValue;\n                }\n            }\n            // defer onattribute events until all attributes have been seen\n            // so any new bindings can take effect. preserve attribute order\n            // so deferred events can be emitted in document order\n            parser.attribList.push([parser.attribName, parser.attribValue]);\n        }\n        else {\n            // in non-xmlns mode, we can emit the event right away\n            parser.tag.attributes[parser.attribName] = parser.attribValue;\n            emitNode(parser, \"onattribute\", {\n                name: parser.attribName,\n                value: parser.attribValue,\n            });\n        }\n        parser.attribName = parser.attribValue = \"\";\n    }\n    function openTag(parser, selfClosing) {\n        if (parser.opt.xmlns) {\n            // emit namespace binding events\n            var tag = parser.tag;\n            // add namespace info to tag\n            var qn = qname(parser.tagName);\n            tag.prefix = qn.prefix;\n            tag.local = qn.local;\n            tag.uri = tag.ns[qn.prefix] || \"\";\n            if (tag.prefix && !tag.uri) {\n                strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(parser.tagName));\n                tag.uri = qn.prefix;\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (tag.ns && parent.ns !== tag.ns) {\n                Object.keys(tag.ns).forEach(function (p) {\n                    emitNode(parser, \"onopennamespace\", {\n                        prefix: p,\n                        uri: tag.ns[p],\n                    });\n                });\n            }\n            // handle deferred onattribute events\n            // Note: do not apply default ns to attributes:\n            //   http://www.w3.org/TR/REC-xml-names/#defaulting\n            for (var i = 0, l = parser.attribList.length; i < l; i++) {\n                var nv = parser.attribList[i];\n                var name = nv[0];\n                var value = nv[1];\n                var qualName = qname(name, true);\n                var prefix = qualName.prefix;\n                var local = qualName.local;\n                var uri = prefix === \"\" ? \"\" : tag.ns[prefix] || \"\";\n                var a = {\n                    name: name,\n                    value: value,\n                    prefix: prefix,\n                    local: local,\n                    uri: uri,\n                };\n                // if there's any attributes with an undefined namespace,\n                // then fail on them now.\n                if (prefix && prefix !== \"xmlns\" && !uri) {\n                    strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(prefix));\n                    a.uri = prefix;\n                }\n                parser.tag.attributes[name] = a;\n                emitNode(parser, \"onattribute\", a);\n            }\n            parser.attribList.length = 0;\n        }\n        parser.tag.isSelfClosing = !!selfClosing;\n        // process the tag\n        parser.sawRoot = true;\n        parser.tags.push(parser.tag);\n        emitNode(parser, \"onopentag\", parser.tag);\n        if (!selfClosing) {\n            // special case for <script> in non-strict mode.\n            if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n                parser.state = S.SCRIPT;\n            }\n            else {\n                parser.state = S.TEXT;\n            }\n            parser.tag = null;\n            parser.tagName = \"\";\n        }\n        parser.attribName = parser.attribValue = \"\";\n        parser.attribList.length = 0;\n    }\n    function closeTag(parser) {\n        if (!parser.tagName) {\n            strictFail(parser, \"Weird empty close tag.\");\n            parser.textNode += \"</>\";\n            parser.state = S.TEXT;\n            return;\n        }\n        if (parser.script) {\n            if (parser.tagName !== \"script\") {\n                parser.script += \"</\" + parser.tagName + \">\";\n                parser.tagName = \"\";\n                parser.state = S.SCRIPT;\n                return;\n            }\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n        // first make sure that the closing tag actually exists.\n        // <a><b></c></b></a> will close everything, otherwise.\n        var t = parser.tags.length;\n        var tagName = parser.tagName;\n        if (!parser.strict) {\n            tagName = tagName[parser.looseCase]();\n        }\n        var closeTo = tagName;\n        while (t--) {\n            var close = parser.tags[t];\n            if (close.name !== closeTo) {\n                // fail the first time in strict mode\n                strictFail(parser, \"Unexpected close tag\");\n            }\n            else {\n                break;\n            }\n        }\n        // didn't find it.  we already failed for strict, so just abort.\n        if (t < 0) {\n            strictFail(parser, \"Unmatched closing tag: \" + parser.tagName);\n            parser.textNode += \"</\" + parser.tagName + \">\";\n            parser.state = S.TEXT;\n            return;\n        }\n        parser.tagName = tagName;\n        var s = parser.tags.length;\n        while (s-- > t) {\n            var tag = (parser.tag = parser.tags.pop());\n            parser.tagName = parser.tag.name;\n            emitNode(parser, \"onclosetag\", parser.tagName);\n            var x = {};\n            for (var i in tag.ns) {\n                x[i] = tag.ns[i];\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (parser.opt.xmlns && tag.ns !== parent.ns) {\n                // remove namespace bindings introduced by tag\n                Object.keys(tag.ns).forEach(function (p) {\n                    var n = tag.ns[p];\n                    emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n });\n                });\n            }\n        }\n        if (t === 0)\n            parser.closedRoot = true;\n        parser.tagName = parser.attribValue = parser.attribName = \"\";\n        parser.attribList.length = 0;\n        parser.state = S.TEXT;\n    }\n    function parseEntity(parser) {\n        var entity = parser.entity;\n        var entityLC = entity.toLowerCase();\n        var num;\n        var numStr = \"\";\n        if (parser.ENTITIES[entity]) {\n            return parser.ENTITIES[entity];\n        }\n        if (parser.ENTITIES[entityLC]) {\n            return parser.ENTITIES[entityLC];\n        }\n        entity = entityLC;\n        if (entity.charAt(0) === \"#\") {\n            if (entity.charAt(1) === \"x\") {\n                entity = entity.slice(2);\n                num = parseInt(entity, 16);\n                numStr = num.toString(16);\n            }\n            else {\n                entity = entity.slice(1);\n                num = parseInt(entity, 10);\n                numStr = num.toString(10);\n            }\n        }\n        entity = entity.replace(/^0+/, \"\");\n        if (isNaN(num) || numStr.toLowerCase() !== entity) {\n            strictFail(parser, \"Invalid character entity\");\n            return \"&\" + parser.entity + \";\";\n        }\n        return String.fromCodePoint(num);\n    }\n    function beginWhiteSpace(parser, c) {\n        if (c === \"<\") {\n            parser.state = S.OPEN_WAKA;\n            parser.startTagPosition = parser.position;\n        }\n        else if (!isWhitespace(c)) {\n            // have to process this as a text node.\n            // weird, but happens.\n            strictFail(parser, \"Non-whitespace before first tag.\");\n            parser.textNode = c;\n            parser.state = S.TEXT;\n        }\n    }\n    function charAt(chunk, i) {\n        var result = \"\";\n        if (i < chunk.length) {\n            result = chunk.charAt(i);\n        }\n        return result;\n    }\n    function write(chunk) {\n        var parser = this;\n        if (this.error) {\n            throw this.error;\n        }\n        if (parser.closed) {\n            return error(parser, \"Cannot write after close. Assign an onready handler.\");\n        }\n        if (chunk === null) {\n            return end(parser);\n        }\n        if (typeof chunk === \"object\") {\n            chunk = chunk.toString();\n        }\n        var i = 0;\n        var c = \"\";\n        while (true) {\n            c = charAt(chunk, i++);\n            parser.c = c;\n            if (!c) {\n                break;\n            }\n            if (parser.trackPosition) {\n                parser.position++;\n                if (c === \"\\n\") {\n                    parser.line++;\n                    parser.column = 0;\n                }\n                else {\n                    parser.column++;\n                }\n            }\n            switch (parser.state) {\n                case S.BEGIN:\n                    parser.state = S.BEGIN_WHITESPACE;\n                    if (c === \"\\uFEFF\") {\n                        continue;\n                    }\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.BEGIN_WHITESPACE:\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.TEXT:\n                    if (parser.sawRoot && !parser.closedRoot) {\n                        var starti = i - 1;\n                        while (c && c !== \"<\" && c !== \"&\") {\n                            c = charAt(chunk, i++);\n                            if (c && parser.trackPosition) {\n                                parser.position++;\n                                if (c === \"\\n\") {\n                                    parser.line++;\n                                    parser.column = 0;\n                                }\n                                else {\n                                    parser.column++;\n                                }\n                            }\n                        }\n                        parser.textNode += chunk.substring(starti, i - 1);\n                    }\n                    if (c === \"<\" &&\n                        !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n                        parser.state = S.OPEN_WAKA;\n                        parser.startTagPosition = parser.position;\n                    }\n                    else {\n                        if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n                            strictFail(parser, \"Text data outside of root node.\");\n                        }\n                        if (c === \"&\") {\n                            parser.state = S.TEXT_ENTITY;\n                        }\n                        else {\n                            parser.textNode += c;\n                        }\n                    }\n                    continue;\n                case S.SCRIPT:\n                    // only non-strict\n                    if (c === \"<\") {\n                        parser.state = S.SCRIPT_ENDING;\n                    }\n                    else {\n                        parser.script += c;\n                    }\n                    continue;\n                case S.SCRIPT_ENDING:\n                    if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                    }\n                    else {\n                        parser.script += \"<\" + c;\n                        parser.state = S.SCRIPT;\n                    }\n                    continue;\n                case S.OPEN_WAKA:\n                    // either a /, ?, !, or text is coming next.\n                    if (c === \"!\") {\n                        parser.state = S.SGML_DECL;\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (isWhitespace(c)) {\n                        // wait for it...\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.state = S.OPEN_TAG;\n                        parser.tagName = c;\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                        parser.tagName = \"\";\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST;\n                        parser.procInstName = parser.procInstBody = \"\";\n                    }\n                    else {\n                        strictFail(parser, \"Unencoded <\");\n                        // if there was some whitespace, then add that in.\n                        if (parser.startTagPosition + 1 < parser.position) {\n                            var pad = parser.position - parser.startTagPosition;\n                            c = new Array(pad).join(\" \") + c;\n                        }\n                        parser.textNode += \"<\" + c;\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.SGML_DECL:\n                    if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n                        emitNode(parser, \"onopencdata\");\n                        parser.state = S.CDATA;\n                        parser.sgmlDecl = \"\";\n                        parser.cdata = \"\";\n                    }\n                    else if (parser.sgmlDecl + c === \"--\") {\n                        parser.state = S.COMMENT;\n                        parser.comment = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n                        parser.state = S.DOCTYPE;\n                        if (parser.doctype || parser.sawRoot) {\n                            strictFail(parser, \"Inappropriately located doctype declaration\");\n                        }\n                        parser.doctype = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (c === \">\") {\n                        emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl);\n                        parser.sgmlDecl = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.SGML_DECL_QUOTED;\n                        parser.sgmlDecl += c;\n                    }\n                    else {\n                        parser.sgmlDecl += c;\n                    }\n                    continue;\n                case S.SGML_DECL_QUOTED:\n                    if (c === parser.q) {\n                        parser.state = S.SGML_DECL;\n                        parser.q = \"\";\n                    }\n                    parser.sgmlDecl += c;\n                    continue;\n                case S.DOCTYPE:\n                    if (c === \">\") {\n                        parser.state = S.TEXT;\n                        emitNode(parser, \"ondoctype\", parser.doctype);\n                        parser.doctype = true; // just remember that we saw it.\n                    }\n                    else {\n                        parser.doctype += c;\n                        if (c === \"[\") {\n                            parser.state = S.DOCTYPE_DTD;\n                        }\n                        else if (isQuote(c)) {\n                            parser.state = S.DOCTYPE_QUOTED;\n                            parser.q = c;\n                        }\n                    }\n                    continue;\n                case S.DOCTYPE_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.q = \"\";\n                        parser.state = S.DOCTYPE;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD:\n                    parser.doctype += c;\n                    if (c === \"]\") {\n                        parser.state = S.DOCTYPE;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.DOCTYPE_DTD_QUOTED;\n                        parser.q = c;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.state = S.DOCTYPE_DTD;\n                        parser.q = \"\";\n                    }\n                    continue;\n                case S.COMMENT:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDING;\n                    }\n                    else {\n                        parser.comment += c;\n                    }\n                    continue;\n                case S.COMMENT_ENDING:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDED;\n                        parser.comment = textopts(parser.opt, parser.comment);\n                        if (parser.comment) {\n                            emitNode(parser, \"oncomment\", parser.comment);\n                        }\n                        parser.comment = \"\";\n                    }\n                    else {\n                        parser.comment += \"-\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    continue;\n                case S.COMMENT_ENDED:\n                    if (c !== \">\") {\n                        strictFail(parser, \"Malformed comment\");\n                        // allow <!-- blah -- bloo --> in non-strict mode,\n                        // which is a comment of \" blah -- bloo \"\n                        parser.comment += \"--\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    else {\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.CDATA:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING;\n                    }\n                    else {\n                        parser.cdata += c;\n                    }\n                    continue;\n                case S.CDATA_ENDING:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING_2;\n                    }\n                    else {\n                        parser.cdata += \"]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.CDATA_ENDING_2:\n                    if (c === \">\") {\n                        if (parser.cdata) {\n                            emitNode(parser, \"oncdata\", parser.cdata);\n                        }\n                        emitNode(parser, \"onclosecdata\");\n                        parser.cdata = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (c === \"]\") {\n                        parser.cdata += \"]\";\n                    }\n                    else {\n                        parser.cdata += \"]]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.PROC_INST:\n                    if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    else {\n                        parser.procInstName += c;\n                    }\n                    continue;\n                case S.PROC_INST_BODY:\n                    if (!parser.procInstBody && isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else {\n                        parser.procInstBody += c;\n                    }\n                    continue;\n                case S.PROC_INST_ENDING:\n                    if (c === \">\") {\n                        emitNode(parser, \"onprocessinginstruction\", {\n                            name: parser.procInstName,\n                            body: parser.procInstBody,\n                        });\n                        parser.procInstName = parser.procInstBody = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else {\n                        parser.procInstBody += \"?\" + c;\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    continue;\n                case S.OPEN_TAG:\n                    if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else {\n                        newTag(parser);\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (c === \"/\") {\n                            parser.state = S.OPEN_TAG_SLASH;\n                        }\n                        else {\n                            if (!isWhitespace(c)) {\n                                strictFail(parser, \"Invalid character in tag name\");\n                            }\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.OPEN_TAG_SLASH:\n                    if (c === \">\") {\n                        openTag(parser, true);\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Forward-slash in opening tag not followed by >\");\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.ATTRIB:\n                    // haven't read the attribute name yet.\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (c === \">\") {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.attribValue = parser.attribName;\n                        attrib(parser);\n                        openTag(parser);\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB_NAME_SAW_WHITE;\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.attribName += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME_SAW_WHITE:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.tag.attributes[parser.attribName] = \"\";\n                        parser.attribValue = \"\";\n                        emitNode(parser, \"onattribute\", {\n                            name: parser.attribName,\n                            value: \"\",\n                        });\n                        parser.attribName = \"\";\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (isMatch(nameStart, c)) {\n                            parser.attribName = c;\n                            parser.state = S.ATTRIB_NAME;\n                        }\n                        else {\n                            strictFail(parser, \"Invalid attribute name\");\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.ATTRIB_VALUE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (isQuote(c)) {\n                        parser.q = c;\n                        parser.state = S.ATTRIB_VALUE_QUOTED;\n                    }\n                    else {\n                        strictFail(parser, \"Unquoted attribute value\");\n                        parser.state = S.ATTRIB_VALUE_UNQUOTED;\n                        parser.attribValue = c;\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_QUOTED:\n                    if (c !== parser.q) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_Q;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    parser.q = \"\";\n                    parser.state = S.ATTRIB_VALUE_CLOSED;\n                    continue;\n                case S.ATTRIB_VALUE_CLOSED:\n                    if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        strictFail(parser, \"No whitespace between attributes\");\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_UNQUOTED:\n                    if (!isAttribEnd(c)) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_U;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else {\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.CLOSE_TAG:\n                    if (!parser.tagName) {\n                        if (isWhitespace(c)) {\n                            continue;\n                        }\n                        else if (notMatch(nameStart, c)) {\n                            if (parser.script) {\n                                parser.script += \"</\" + c;\n                                parser.state = S.SCRIPT;\n                            }\n                            else {\n                                strictFail(parser, \"Invalid tagname in closing tag.\");\n                            }\n                        }\n                        else {\n                            parser.tagName = c;\n                        }\n                    }\n                    else if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else if (parser.script) {\n                        parser.script += \"</\" + parser.tagName;\n                        parser.tagName = \"\";\n                        parser.state = S.SCRIPT;\n                    }\n                    else {\n                        if (!isWhitespace(c)) {\n                            strictFail(parser, \"Invalid tagname in closing tag\");\n                        }\n                        parser.state = S.CLOSE_TAG_SAW_WHITE;\n                    }\n                    continue;\n                case S.CLOSE_TAG_SAW_WHITE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Invalid characters in closing tag\");\n                    }\n                    continue;\n                case S.TEXT_ENTITY:\n                case S.ATTRIB_VALUE_ENTITY_Q:\n                case S.ATTRIB_VALUE_ENTITY_U:\n                    var returnState;\n                    var buffer;\n                    switch (parser.state) {\n                        case S.TEXT_ENTITY:\n                            returnState = S.TEXT;\n                            buffer = \"textNode\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_Q:\n                            returnState = S.ATTRIB_VALUE_QUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_U:\n                            returnState = S.ATTRIB_VALUE_UNQUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                    }\n                    if (c === \";\") {\n                        if (parser.opt.unparsedEntities) {\n                            var parsedEntity = parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                            parser.write(parsedEntity);\n                        }\n                        else {\n                            parser[buffer] += parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                        }\n                    }\n                    else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n                        parser.entity += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid character in entity name\");\n                        parser[buffer] += \"&\" + parser.entity + c;\n                        parser.entity = \"\";\n                        parser.state = returnState;\n                    }\n                    continue;\n                default: /* istanbul ignore next */ {\n                    throw new Error(parser, \"Unknown state: \" + parser.state);\n                }\n            }\n        } // while\n        if (parser.position >= parser.bufferCheckPosition) {\n            checkBufferLength(parser);\n        }\n        return parser;\n    }\n    /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n    /* istanbul ignore next */\n    if (!String.fromCodePoint) {\n        (function () {\n            var stringFromCharCode = String.fromCharCode;\n            var floor = Math.floor;\n            var fromCodePoint = function () {\n                var MAX_SIZE = 0x4000;\n                var codeUnits = [];\n                var highSurrogate;\n                var lowSurrogate;\n                var index = -1;\n                var length = arguments.length;\n                if (!length) {\n                    return \"\";\n                }\n                var result = \"\";\n                while (++index < length) {\n                    var codePoint = Number(arguments[index]);\n                    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                        codePoint < 0 || // not a valid Unicode code point\n                        codePoint > 0x10ffff || // not a valid Unicode code point\n                        floor(codePoint) !== codePoint // not an integer\n                    ) {\n                        throw RangeError(\"Invalid code point: \" + codePoint);\n                    }\n                    if (codePoint <= 0xffff) {\n                        // BMP code point\n                        codeUnits.push(codePoint);\n                    }\n                    else {\n                        // Astral code point; split in surrogate halves\n                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                        codePoint -= 0x10000;\n                        highSurrogate = (codePoint >> 10) + 0xd800;\n                        lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                        codeUnits.push(highSurrogate, lowSurrogate);\n                    }\n                    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                        result += stringFromCharCode.apply(null, codeUnits);\n                        codeUnits.length = 0;\n                    }\n                }\n                return result;\n            };\n            /* istanbul ignore next */\n            if (Object.defineProperty) {\n                Object.defineProperty(String, \"fromCodePoint\", {\n                    value: fromCodePoint,\n                    configurable: true,\n                    writable: true,\n                });\n            }\n            else {\n                String.fromCodePoint = fromCodePoint;\n            }\n        })();\n    }\n    return sax;\n};\nconst sax = /** #__PURE__ */ initializeSax();\nexport { sax };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14468, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/xml.js"],"sourcesContent":["import { BaseCumulativeTransformOutputParser, } from \"./transform.js\";\nimport { compare } from \"../utils/json_patch.js\";\nimport { sax } from \"../utils/sax-js/sax.js\";\nexport const XML_FORMAT_INSTRUCTIONS = `The output should be formatted as a XML file.\n1. Output should conform to the tags below. \n2. If tags are not given, make them on your own.\n3. Remember to always open and close all the tags.\n\nAs an example, for the tags [\"foo\", \"bar\", \"baz\"]:\n1. String \"<foo>\\n   <bar>\\n      <baz></baz>\\n   </bar>\\n</foo>\" is a well-formatted instance of the schema. \n2. String \"<foo>\\n   <bar>\\n   </foo>\" is a badly-formatted instance.\n3. String \"<foo>\\n   <tag>\\n   </tag>\\n</foo>\" is a badly-formatted instance.\n\nHere are the output tags:\n\\`\\`\\`\n{tags}\n\\`\\`\\``;\nexport class XMLOutputParser extends BaseCumulativeTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.tags = fields?.tags;\n    }\n    static lc_name() {\n        return \"XMLOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return compare(prev, next);\n    }\n    async parsePartialResult(generations) {\n        return parseXMLMarkdown(generations[0].text);\n    }\n    async parse(text) {\n        return parseXMLMarkdown(text);\n    }\n    getFormatInstructions() {\n        const withTags = !!(this.tags && this.tags.length > 0);\n        return withTags\n            ? XML_FORMAT_INSTRUCTIONS.replace(\"{tags}\", this.tags?.join(\", \") ?? \"\")\n            : XML_FORMAT_INSTRUCTIONS;\n    }\n}\nconst strip = (text) => text\n    .split(\"\\n\")\n    .map((line) => line.replace(/^\\s+/, \"\"))\n    .join(\"\\n\")\n    .trim();\nconst parseParsedResult = (input) => {\n    if (Object.keys(input).length === 0) {\n        return {};\n    }\n    const result = {};\n    if (input.children.length > 0) {\n        result[input.name] = input.children.map(parseParsedResult);\n        return result;\n    }\n    else {\n        result[input.name] = input.text ?? undefined;\n        return result;\n    }\n};\nexport function parseXMLMarkdown(s) {\n    const cleanedString = strip(s);\n    const parser = sax.parser(true);\n    let parsedResult = {};\n    const elementStack = [];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.onopentag = (node) => {\n        const element = {\n            name: node.name,\n            attributes: node.attributes,\n            children: [],\n            text: \"\",\n            isSelfClosing: node.isSelfClosing,\n        };\n        if (elementStack.length > 0) {\n            const parentElement = elementStack[elementStack.length - 1];\n            parentElement.children.push(element);\n        }\n        else {\n            parsedResult = element;\n        }\n        if (!node.isSelfClosing) {\n            elementStack.push(element);\n        }\n    };\n    parser.onclosetag = () => {\n        if (elementStack.length > 0) {\n            const lastElement = elementStack.pop();\n            if (elementStack.length === 0 && lastElement) {\n                parsedResult = lastElement;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.ontext = (text) => {\n        if (elementStack.length > 0) {\n            const currentElement = elementStack[elementStack.length - 1];\n            currentElement.text += text;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.onattribute = (attr) => {\n        if (elementStack.length > 0) {\n            const currentElement = elementStack[elementStack.length - 1];\n            currentElement.attributes[attr.name] = attr.value;\n        }\n    };\n    // Try to find XML string within triple backticks.\n    const match = /```(xml)?(.*)```/s.exec(cleanedString);\n    const xmlString = match ? match[2] : cleanedString;\n    parser.write(xmlString).close();\n    // Remove the XML declaration if present\n    if (parsedResult && parsedResult.name === \"?xml\") {\n        parsedResult = parsedResult.children[0];\n    }\n    return parseParsedResult(parsedResult);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14625, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/index.js"],"sourcesContent":["export * from \"./base.js\";\nexport * from \"./bytes.js\";\nexport * from \"./list.js\";\nexport * from \"./string.js\";\nexport * from \"./structured.js\";\nexport * from \"./transform.js\";\nexport * from \"./json.js\";\nexport * from \"./xml.js\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14664, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/output_parsers.js"],"sourcesContent":["export * from './dist/output_parsers/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14682, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/openai_tools/json_output_tools_parsers.js"],"sourcesContent":["import { OutputParserException } from \"../base.js\";\nimport { parsePartialJson } from \"../json.js\";\nimport { BaseCumulativeTransformOutputParser, } from \"../transform.js\";\nimport { isAIMessage } from \"../../messages/ai.js\";\nexport function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, options) {\n    if (rawToolCall.function === undefined) {\n        return undefined;\n    }\n    let functionArgs;\n    if (options?.partial) {\n        try {\n            functionArgs = parsePartialJson(rawToolCall.function.arguments ?? \"{}\");\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    else {\n        try {\n            functionArgs = JSON.parse(rawToolCall.function.arguments);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            throw new OutputParserException([\n                `Function \"${rawToolCall.function.name}\" arguments:`,\n                ``,\n                rawToolCall.function.arguments,\n                ``,\n                `are not valid JSON.`,\n                `Error: ${e.message}`,\n            ].join(\"\\n\"));\n        }\n    }\n    const parsedToolCall = {\n        name: rawToolCall.function.name,\n        args: functionArgs,\n        type: \"tool_call\",\n    };\n    if (options?.returnId) {\n        parsedToolCall.id = rawToolCall.id;\n    }\n    return parsedToolCall;\n}\nexport function convertLangChainToolCallToOpenAI(toolCall) {\n    if (toolCall.id === undefined) {\n        throw new Error(`All OpenAI tool calls must have an \"id\" field.`);\n    }\n    return {\n        id: toolCall.id,\n        type: \"function\",\n        function: {\n            name: toolCall.name,\n            arguments: JSON.stringify(toolCall.args),\n        },\n    };\n}\nexport function makeInvalidToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, errorMsg) {\n    return {\n        name: rawToolCall.function?.name,\n        args: rawToolCall.function?.arguments,\n        id: rawToolCall.id,\n        error: errorMsg,\n        type: \"invalid_tool_call\",\n    };\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object.\n */\nexport class JsonOutputToolsParser extends BaseCumulativeTransformOutputParser {\n    static lc_name() {\n        return \"JsonOutputToolsParser\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.returnId = fields?.returnId ?? this.returnId;\n    }\n    _diff() {\n        throw new Error(\"Not supported.\");\n    }\n    async parse() {\n        throw new Error(\"Not implemented.\");\n    }\n    async parseResult(generations) {\n        const result = await this.parsePartialResult(generations, false);\n        return result;\n    }\n    /**\n     * Parses the output and returns a JSON object. If `argsOnly` is true,\n     * only the arguments of the function call are returned.\n     * @param generations The output of the LLM to parse.\n     * @returns A JSON object representation of the function call or its arguments.\n     */\n    async parsePartialResult(generations, partial = true\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        const message = generations[0].message;\n        let toolCalls;\n        if (isAIMessage(message) && message.tool_calls?.length) {\n            toolCalls = message.tool_calls.map((toolCall) => {\n                const { id, ...rest } = toolCall;\n                if (!this.returnId) {\n                    return rest;\n                }\n                return {\n                    id,\n                    ...rest,\n                };\n            });\n        }\n        else if (message.additional_kwargs.tool_calls !== undefined) {\n            const rawToolCalls = JSON.parse(JSON.stringify(message.additional_kwargs.tool_calls));\n            toolCalls = rawToolCalls.map((rawToolCall) => {\n                return parseToolCall(rawToolCall, { returnId: this.returnId, partial });\n            });\n        }\n        if (!toolCalls) {\n            return [];\n        }\n        const parsedToolCalls = [];\n        for (const toolCall of toolCalls) {\n            if (toolCall !== undefined) {\n                const backwardsCompatibleToolCall = {\n                    type: toolCall.name,\n                    args: toolCall.args,\n                    id: toolCall.id,\n                };\n                parsedToolCalls.push(backwardsCompatibleToolCall);\n            }\n        }\n        return parsedToolCalls;\n    }\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object if you are\n * expecting only a single tool to be called.\n */\nexport class JsonOutputKeyToolsParser extends JsonOutputToolsParser {\n    static lc_name() {\n        return \"JsonOutputKeyToolsParser\";\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /** The type of tool calls to return. */\n        Object.defineProperty(this, \"keyName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Whether to return only the first tool call. */\n        Object.defineProperty(this, \"returnSingle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"zodSchema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keyName = params.keyName;\n        this.returnSingle = params.returnSingle ?? this.returnSingle;\n        this.zodSchema = params.zodSchema;\n    }\n    async _validateResult(result) {\n        if (this.zodSchema === undefined) {\n            return result;\n        }\n        const zodParsedResult = await this.zodSchema.safeParseAsync(result);\n        if (zodParsedResult.success) {\n            return zodParsedResult.data;\n        }\n        else {\n            throw new OutputParserException(`Failed to parse. Text: \"${JSON.stringify(result, null, 2)}\". Error: ${JSON.stringify(zodParsedResult.error.errors)}`, JSON.stringify(result, null, 2));\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parsePartialResult(generations) {\n        const results = await super.parsePartialResult(generations);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return returnedValues[0];\n        }\n        return returnedValues;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parseResult(generations) {\n        const results = await super.parsePartialResult(generations, false);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return this._validateResult(returnedValues[0]);\n        }\n        const toolCallResults = await Promise.all(returnedValues.map((value) => this._validateResult(value)));\n        return toolCallResults;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14946, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/output_parsers/openai_tools/index.js"],"sourcesContent":["export * from \"./json_output_tools_parsers.js\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14964, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/output_parsers/openai_tools.js"],"sourcesContent":["export * from '../dist/output_parsers/openai_tools/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14982, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tools/types.js"],"sourcesContent":["import { Runnable, } from \"../runnables/base.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\n/**\n * Confirm whether the inputted tool is an instance of `StructuredToolInterface`.\n *\n * @param {StructuredToolInterface | JSONSchema | undefined} tool The tool to check if it is an instance of `StructuredToolInterface`.\n * @returns {tool is StructuredToolInterface} Whether the inputted tool is an instance of `StructuredToolInterface`.\n */\nexport function isStructuredTool(tool) {\n    return (tool !== undefined &&\n        Array.isArray(tool.lc_namespace));\n}\n/**\n * Confirm whether the inputted tool is an instance of `RunnableToolLike`.\n *\n * @param {unknown | undefined} tool The tool to check if it is an instance of `RunnableToolLike`.\n * @returns {tool is RunnableToolLike} Whether the inputted tool is an instance of `RunnableToolLike`.\n */\nexport function isRunnableToolLike(tool) {\n    return (tool !== undefined &&\n        Runnable.isRunnable(tool) &&\n        \"lc_name\" in tool.constructor &&\n        typeof tool.constructor.lc_name === \"function\" &&\n        tool.constructor.lc_name() === \"RunnableToolLike\");\n}\n/**\n * Confirm whether or not the tool contains the necessary properties to be considered a `StructuredToolParams`.\n *\n * @param {unknown | undefined} tool The object to check if it is a `StructuredToolParams`.\n * @returns {tool is StructuredToolParams} Whether the inputted object is a `StructuredToolParams`.\n */\nexport function isStructuredToolParams(tool) {\n    return (!!tool &&\n        typeof tool === \"object\" &&\n        \"name\" in tool &&\n        \"schema\" in tool &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (isZodSchema(tool.schema) ||\n            (tool.schema != null &&\n                typeof tool.schema === \"object\" &&\n                \"type\" in tool.schema &&\n                typeof tool.schema.type === \"string\" &&\n                [\"null\", \"boolean\", \"object\", \"array\", \"number\", \"string\"].includes(tool.schema.type))));\n}\n/**\n * Whether or not the tool is one of StructuredTool, RunnableTool or StructuredToolParams.\n * It returns `is StructuredToolParams` since that is the most minimal interface of the three,\n * while still containing the necessary properties to be passed to a LLM for tool calling.\n *\n * @param {unknown | undefined} tool The tool to check if it is a LangChain tool.\n * @returns {tool is StructuredToolParams} Whether the inputted tool is a LangChain tool.\n */\nexport function isLangChainTool(tool) {\n    return (isStructuredToolParams(tool) ||\n        isRunnableToolLike(tool) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        isStructuredTool(tool));\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAOO,SAAS,iBAAiB,IAAI;IACjC,OAAQ,SAAS,aACb,MAAM,OAAO,CAAC,KAAK,YAAY;AACvC;AAOO,SAAS,mBAAmB,IAAI;IACnC,OAAQ,SAAS,aACb,kKAAA,CAAA,WAAQ,CAAC,UAAU,CAAC,SACpB,aAAa,KAAK,WAAW,IAC7B,OAAO,KAAK,WAAW,CAAC,OAAO,KAAK,cACpC,KAAK,WAAW,CAAC,OAAO,OAAO;AACvC;AAOO,SAAS,uBAAuB,IAAI;IACvC,OAAQ,CAAC,CAAC,QACN,OAAO,SAAS,YAChB,UAAU,QACV,YAAY,QACZ,8DAA8D;IAC9D,CAAC,CAAA,GAAA,gLAAA,CAAA,cAAW,AAAD,EAAE,KAAK,MAAM,KACnB,KAAK,MAAM,IAAI,QACZ,OAAO,KAAK,MAAM,KAAK,YACvB,UAAU,KAAK,MAAM,IACrB,OAAO,KAAK,MAAM,CAAC,IAAI,KAAK,YAC5B;QAAC;QAAQ;QAAW;QAAU;QAAS;QAAU;KAAS,CAAC,QAAQ,CAAC,KAAK,MAAM,CAAC,IAAI,CAAE;AACtG;AASO,SAAS,gBAAgB,IAAI;IAChC,OAAQ,uBAAuB,SAC3B,mBAAmB,SACnB,8DAA8D;IAC9D,iBAAiB;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15019, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/json_schema.js"],"sourcesContent":["import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { dereference } from \"@cfworker/json-schema\";\nimport { isZodSchema } from \"./types/is_zod_schema.js\";\nexport { deepCompareStrict, Validator } from \"@cfworker/json-schema\";\n/**\n * Converts a Zod schema or JSON schema to a JSON schema.\n * @param schema - The schema to convert.\n * @returns The converted schema.\n */\nexport function toJsonSchema(schema) {\n    if (isZodSchema(schema)) {\n        return zodToJsonSchema(schema);\n    }\n    return schema;\n}\n/**\n * Validates if a JSON schema validates only strings. May return false negatives in some edge cases\n * (like recursive or unresolvable refs).\n *\n * @param schema - The schema to validate.\n * @returns `true` if the schema validates only strings, `false` otherwise.\n */\nexport function validatesOnlyStrings(schema) {\n    // Null, undefined, or empty schema\n    if (!schema ||\n        typeof schema !== \"object\" ||\n        Object.keys(schema).length === 0 ||\n        Array.isArray(schema)) {\n        return false; // Validates anything, not just strings\n    }\n    // Explicit type constraint\n    if (\"type\" in schema) {\n        if (typeof schema.type === \"string\") {\n            return schema.type === \"string\";\n        }\n        if (Array.isArray(schema.type)) {\n            // not sure why someone would do `\"type\": [\"string\"]` or especially `\"type\": [\"string\",\n            // \"string\", \"string\", ...]` but we're not here to judge\n            return schema.type.every((t) => t === \"string\");\n        }\n        return false; // Invalid or non-string type\n    }\n    // Enum with only string values\n    if (\"enum\" in schema) {\n        return (Array.isArray(schema.enum) &&\n            schema.enum.length > 0 &&\n            schema.enum.every((val) => typeof val === \"string\"));\n    }\n    // String constant\n    if (\"const\" in schema) {\n        return typeof schema.const === \"string\";\n    }\n    // Schema combinations\n    if (\"allOf\" in schema && Array.isArray(schema.allOf)) {\n        // If any subschema validates only strings, then the overall schema validates only strings\n        return schema.allOf.some((subschema) => validatesOnlyStrings(subschema));\n    }\n    if ((\"anyOf\" in schema && Array.isArray(schema.anyOf)) ||\n        (\"oneOf\" in schema && Array.isArray(schema.oneOf))) {\n        const subschemas = (\"anyOf\" in schema ? schema.anyOf : schema.oneOf);\n        // All subschemas must validate only strings\n        return (subschemas.length > 0 &&\n            subschemas.every((subschema) => validatesOnlyStrings(subschema)));\n    }\n    // We're not going to try on this one, it's too complex - we just assume if it has a \"not\" key and hasn't matched one of the above checks, it's not a string schema.\n    if (\"not\" in schema) {\n        return false; // The not case can validate non-strings\n    }\n    if (\"$ref\" in schema && typeof schema.$ref === \"string\") {\n        const ref = schema.$ref;\n        const resolved = dereference(schema);\n        if (resolved[ref]) {\n            return validatesOnlyStrings(resolved[ref]);\n        }\n        return false;\n    }\n    // ignore recursive refs and other cases where type is omitted for now\n    // ignore other cases for now where type is omitted\n    return false;\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAOO,SAAS,aAAa,MAAM;IAC/B,IAAI,CAAA,GAAA,gLAAA,CAAA,cAAW,AAAD,EAAE,SAAS;QACrB,OAAO,CAAA,GAAA,+KAAA,CAAA,kBAAe,AAAD,EAAE;IAC3B;IACA,OAAO;AACX;AAQO,SAAS,qBAAqB,MAAM;IACvC,mCAAmC;IACnC,IAAI,CAAC,UACD,OAAO,WAAW,YAClB,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK,KAC/B,MAAM,OAAO,CAAC,SAAS;QACvB,OAAO,OAAO,uCAAuC;IACzD;IACA,2BAA2B;IAC3B,IAAI,UAAU,QAAQ;QAClB,IAAI,OAAO,OAAO,IAAI,KAAK,UAAU;YACjC,OAAO,OAAO,IAAI,KAAK;QAC3B;QACA,IAAI,MAAM,OAAO,CAAC,OAAO,IAAI,GAAG;YAC5B,uFAAuF;YACvF,wDAAwD;YACxD,OAAO,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAM,MAAM;QAC1C;QACA,OAAO,OAAO,6BAA6B;IAC/C;IACA,+BAA+B;IAC/B,IAAI,UAAU,QAAQ;QAClB,OAAQ,MAAM,OAAO,CAAC,OAAO,IAAI,KAC7B,OAAO,IAAI,CAAC,MAAM,GAAG,KACrB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,MAAQ,OAAO,QAAQ;IAClD;IACA,kBAAkB;IAClB,IAAI,WAAW,QAAQ;QACnB,OAAO,OAAO,OAAO,KAAK,KAAK;IACnC;IACA,sBAAsB;IACtB,IAAI,WAAW,UAAU,MAAM,OAAO,CAAC,OAAO,KAAK,GAAG;QAClD,0FAA0F;QAC1F,OAAO,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,YAAc,qBAAqB;IACjE;IACA,IAAI,AAAC,WAAW,UAAU,MAAM,OAAO,CAAC,OAAO,KAAK,KAC/C,WAAW,UAAU,MAAM,OAAO,CAAC,OAAO,KAAK,GAAI;QACpD,MAAM,aAAc,WAAW,SAAS,OAAO,KAAK,GAAG,OAAO,KAAK;QACnE,4CAA4C;QAC5C,OAAQ,WAAW,MAAM,GAAG,KACxB,WAAW,KAAK,CAAC,CAAC,YAAc,qBAAqB;IAC7D;IACA,oKAAoK;IACpK,IAAI,SAAS,QAAQ;QACjB,OAAO,OAAO,wCAAwC;IAC1D;IACA,IAAI,UAAU,UAAU,OAAO,OAAO,IAAI,KAAK,UAAU;QACrD,MAAM,MAAM,OAAO,IAAI;QACvB,MAAM,WAAW,CAAA,GAAA,4KAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,QAAQ,CAAC,IAAI,EAAE;YACf,OAAO,qBAAqB,QAAQ,CAAC,IAAI;QAC7C;QACA,OAAO;IACX;IACA,sEAAsE;IACtE,mDAAmD;IACnD,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15106, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/function_calling.js"],"sourcesContent":["import { isLangChainTool, } from \"../tools/types.js\";\nimport { toJsonSchema } from \"./json_schema.js\";\n// These utility functions were moved to a more appropriate location,\n// but we still export them here for backwards compatibility.\nexport { isStructuredTool, isStructuredToolParams, isRunnableToolLike, isLangChainTool, } from \"../tools/types.js\";\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a format\n * that is compatible with OpenAI function calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, it uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` or `RunnableToolLike`\n * into a JSON schema, which is then used as the parameters for the OpenAI function.\n *\n * @param {StructuredToolInterface | RunnableToolLike} tool The tool to convert to an OpenAI function.\n * @returns {FunctionDefinition} The inputted tool in OpenAI function format.\n */\nexport function convertToOpenAIFunction(tool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: toJsonSchema(tool.schema),\n        // Do not include the `strict` field if it is `undefined`.\n        ...(fieldsCopy?.strict !== undefined ? { strict: fieldsCopy.strict } : {}),\n    };\n}\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a\n * format that is compatible with OpenAI tool calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, it uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` or `RunnableToolLike`\n * into a JSON schema, which is then used as the parameters for the OpenAI tool.\n *\n * @param {StructuredToolInterface | Record<string, any> | RunnableToolLike} tool The tool to convert to an OpenAI tool.\n * @returns {ToolDefinition} The inputted tool in OpenAI tool format.\n */\nexport function convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    let toolDef;\n    if (isLangChainTool(tool)) {\n        toolDef = {\n            type: \"function\",\n            function: convertToOpenAIFunction(tool),\n        };\n    }\n    else {\n        toolDef = tool;\n    }\n    if (fieldsCopy?.strict !== undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        toolDef.function.strict = fieldsCopy.strict;\n    }\n    return toolDef;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAcO,SAAS,wBAAwB,IAAI,EAAE,MAAM;IAChD,yCAAyC;IACzC,MAAM,aAAa,OAAO,WAAW,WAAW,YAAY;IAC5D,OAAO;QACH,MAAM,KAAK,IAAI;QACf,aAAa,KAAK,WAAW;QAC7B,YAAY,CAAA,GAAA,qLAAA,CAAA,eAAY,AAAD,EAAE,KAAK,MAAM;QACpC,0DAA0D;QAC1D,GAAI,YAAY,WAAW,YAAY;YAAE,QAAQ,WAAW,MAAM;QAAC,IAAI,CAAC,CAAC;IAC7E;AACJ;AAWO,SAAS,oBAChB,8DAA8D;AAC9D,IAAI,EAAE,MAAM;IACR,yCAAyC;IACzC,MAAM,aAAa,OAAO,WAAW,WAAW,YAAY;IAC5D,IAAI;IACJ,IAAI,CAAA,GAAA,+JAAA,CAAA,kBAAe,AAAD,EAAE,OAAO;QACvB,UAAU;YACN,MAAM;YACN,UAAU,wBAAwB;QACtC;IACJ,OACK;QACD,UAAU;IACd;IACA,IAAI,YAAY,WAAW,WAAW;QAClC,8DAA8D;QAC9D,QAAQ,QAAQ,CAAC,MAAM,GAAG,WAAW,MAAM;IAC/C;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15164, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/utils/function_calling.js"],"sourcesContent":["export * from '../dist/utils/function_calling.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15182, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/types/index.js"],"sourcesContent":["export * from \"./is_zod_schema.js\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15200, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/utils/types.js"],"sourcesContent":["export * from '../dist/utils/types/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15228, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/language_models/llms.js"],"sourcesContent":["import { AIMessage, getBufferString, } from \"../messages/index.js\";\nimport { RUN_KEY, GenerationChunk, } from \"../outputs.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { BaseLanguageModel, } from \"./base.js\";\nimport { concat } from \"../utils/stream.js\";\nimport { callbackHandlerPrefersStreaming } from \"../callbacks/base.js\";\n/**\n * LLM Wrapper. Takes in a prompt (or prompts) and returns a string.\n */\nexport class BaseLLM extends BaseLanguageModel {\n    constructor({ concurrency, ...rest }) {\n        super(concurrency ? { maxConcurrency: concurrency, ...rest } : rest);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"llms\", this._llmType()]\n        });\n    }\n    /**\n     * This method takes an input and options, and returns a string. It\n     * converts the input to a prompt value and generates a result based on\n     * the prompt.\n     * @param input Input for the LLM.\n     * @param options Options for the LLM call.\n     * @returns A string result based on the prompt.\n     */\n    async invoke(input, options) {\n        const promptValue = BaseLLM._convertInputToPromptValue(input);\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\n        return result.generations[0][0].text;\n    }\n    // eslint-disable-next-line require-yield\n    async *_streamResponseChunks(_input, _options, _runManager) {\n        throw new Error(\"Not implemented.\");\n    }\n    _separateRunnableConfigFromCallOptionsCompat(options) {\n        // For backwards compat, keep `signal` in both runnableConfig and callOptions\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\n        callOptions.signal = runnableConfig.signal;\n        return [runnableConfig, callOptions];\n    }\n    async *_streamIterator(input, options) {\n        // Subclass check required to avoid double callbacks with default implementation\n        if (this._streamResponseChunks === BaseLLM.prototype._streamResponseChunks) {\n            yield this.invoke(input, options);\n        }\n        else {\n            const prompt = BaseLLM._convertInputToPromptValue(input);\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(options);\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, runnableConfig.metadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: callOptions,\n                invocation_params: this?.invocationParams(callOptions),\n                batch_size: 1,\n            };\n            const runManagers = await callbackManager_?.handleLLMStart(this.toJSON(), [prompt.toString()], runnableConfig.runId, undefined, extra, undefined, undefined, runnableConfig.runName);\n            let generation = new GenerationChunk({\n                text: \"\",\n            });\n            try {\n                for await (const chunk of this._streamResponseChunks(prompt.toString(), callOptions, runManagers?.[0])) {\n                    if (!generation) {\n                        generation = chunk;\n                    }\n                    else {\n                        generation = generation.concat(chunk);\n                    }\n                    if (typeof chunk.text === \"string\") {\n                        yield chunk.text;\n                    }\n                }\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\n                generations: [[generation]],\n            })));\n        }\n    }\n    /**\n     * This method takes prompt values, options, and callbacks, and generates\n     * a result based on the prompts.\n     * @param promptValues Prompt values for the LLM.\n     * @param options Options for the LLM call.\n     * @param callbacks Callbacks for the LLM call.\n     * @returns An LLMResult based on the prompts.\n     */\n    async generatePrompt(promptValues, options, callbacks) {\n        const prompts = promptValues.map((promptValue) => promptValue.toString());\n        return this.generate(prompts, options, callbacks);\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _flattenLLMResult(llmResult) {\n        const llmResults = [];\n        for (let i = 0; i < llmResult.generations.length; i += 1) {\n            const genList = llmResult.generations[i];\n            if (i === 0) {\n                llmResults.push({\n                    generations: [genList],\n                    llmOutput: llmResult.llmOutput,\n                });\n            }\n            else {\n                const llmOutput = llmResult.llmOutput\n                    ? { ...llmResult.llmOutput, tokenUsage: {} }\n                    : undefined;\n                llmResults.push({\n                    generations: [genList],\n                    llmOutput,\n                });\n            }\n        }\n        return llmResults;\n    }\n    /** @ignore */\n    async _generateUncached(prompts, parsedOptions, handledOptions, startedRunManagers) {\n        let runManagers;\n        if (startedRunManagers !== undefined &&\n            startedRunManagers.length === prompts.length) {\n            runManagers = startedRunManagers;\n        }\n        else {\n            const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, handledOptions.metadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: parsedOptions,\n                invocation_params: this?.invocationParams(parsedOptions),\n                batch_size: prompts.length,\n            };\n            runManagers = await callbackManager_?.handleLLMStart(this.toJSON(), prompts, handledOptions.runId, undefined, extra, undefined, undefined, handledOptions?.runName);\n        }\n        // Even if stream is not explicitly called, check if model is implicitly\n        // called from streamEvents() or streamLog() to get all streamed events.\n        // Bail out if _streamResponseChunks not overridden\n        const hasStreamingHandler = !!runManagers?.[0].handlers.find(callbackHandlerPrefersStreaming);\n        let output;\n        if (hasStreamingHandler &&\n            prompts.length === 1 &&\n            this._streamResponseChunks !== BaseLLM.prototype._streamResponseChunks) {\n            try {\n                const stream = await this._streamResponseChunks(prompts[0], parsedOptions, runManagers?.[0]);\n                let aggregated;\n                for await (const chunk of stream) {\n                    if (aggregated === undefined) {\n                        aggregated = chunk;\n                    }\n                    else {\n                        aggregated = concat(aggregated, chunk);\n                    }\n                }\n                if (aggregated === undefined) {\n                    throw new Error(\"Received empty response from chat model call.\");\n                }\n                output = { generations: [[aggregated]], llmOutput: {} };\n                await runManagers?.[0].handleLLMEnd(output);\n            }\n            catch (e) {\n                await runManagers?.[0].handleLLMError(e);\n                throw e;\n            }\n        }\n        else {\n            try {\n                output = await this._generate(prompts, parsedOptions, runManagers?.[0]);\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            const flattenedOutputs = this._flattenLLMResult(output);\n            await Promise.all((runManagers ?? []).map((runManager, i) => runManager?.handleLLMEnd(flattenedOutputs[i])));\n        }\n        const runIds = runManagers?.map((manager) => manager.runId) || undefined;\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runIds ? { runIds } : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    async _generateCached({ prompts, cache, llmStringKey, parsedOptions, handledOptions, runId, }) {\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, handledOptions.metadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: prompts.length,\n        };\n        const runManagers = await callbackManager_?.handleLLMStart(this.toJSON(), prompts, runId, undefined, extra, undefined, undefined, handledOptions?.runName);\n        // generate results\n        const missingPromptIndices = [];\n        const results = await Promise.allSettled(prompts.map(async (prompt, index) => {\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (result == null) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        // Map run managers to the results before filtering out null results\n        // Null results are just absent from the cache.\n        const cachedResults = results\n            .map((result, index) => ({ result, runManager: runManagers?.[index] }))\n            .filter(({ result }) => (result.status === \"fulfilled\" && result.value != null) ||\n            result.status === \"rejected\");\n        // Handle results and call run managers\n        const generations = [];\n        await Promise.all(cachedResults.map(async ({ result: promiseResult, runManager }, i) => {\n            if (promiseResult.status === \"fulfilled\") {\n                const result = promiseResult.value;\n                generations[i] = result.map((result) => {\n                    // eslint-disable-next-line no-param-reassign\n                    result.generationInfo = {\n                        ...result.generationInfo,\n                        tokenUsage: {},\n                    };\n                    return result;\n                });\n                if (result.length) {\n                    await runManager?.handleLLMNewToken(result[0].text);\n                }\n                return runManager?.handleLLMEnd({\n                    generations: [result],\n                }, undefined, undefined, undefined, {\n                    cached: true,\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManager?.handleLLMError(promiseResult.reason, undefined, undefined, undefined, {\n                    cached: true,\n                });\n                return Promise.reject(promiseResult.reason);\n            }\n        }));\n        const output = {\n            generations,\n            missingPromptIndices,\n            startedRunManagers: runManagers,\n        };\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Run the LLM on the given prompts and input, handling caching.\n     */\n    async generate(prompts, options, callbacks) {\n        if (!Array.isArray(prompts)) {\n            throw new Error(\"Argument 'prompts' is expected to be a string[]\");\n        }\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else {\n            parsedOptions = options;\n        }\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(parsedOptions);\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\n        if (!this.cache) {\n            return this._generateUncached(prompts, callOptions, runnableConfig);\n        }\n        const { cache } = this;\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\n        const { generations, missingPromptIndices, startedRunManagers } = await this._generateCached({\n            prompts,\n            cache,\n            llmStringKey,\n            parsedOptions: callOptions,\n            handledOptions: runnableConfig,\n            runId: runnableConfig.runId,\n        });\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => prompts[i]), callOptions, runnableConfig, startedRunManagers !== undefined\n                ? missingPromptIndices.map((i) => startedRunManagers?.[i])\n                : undefined);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                return cache.update(prompts[promptIndex], llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     * Convenience wrapper for {@link generate} that takes in a single string prompt and returns a single string output.\n     */\n    async call(prompt, options, callbacks) {\n        const { generations } = await this.generate([prompt], options, callbacks);\n        return generations[0][0].text;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * This method is similar to `call`, but it's used for making predictions\n     * based on the input text.\n     * @param text Input text for the prediction.\n     * @param options Options for the LLM call.\n     * @param callbacks Callbacks for the LLM call.\n     * @returns A prediction based on the input text.\n     */\n    async predict(text, options, callbacks) {\n        return this.call(text, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * This method takes a list of messages, options, and callbacks, and\n     * returns a predicted message.\n     * @param messages A list of messages for the prediction.\n     * @param options Options for the LLM call.\n     * @param callbacks Callbacks for the LLM call.\n     * @returns A predicted message based on the list of messages.\n     */\n    async predictMessages(messages, options, callbacks) {\n        const text = getBufferString(messages);\n        const prediction = await this.call(text, options, callbacks);\n        return new AIMessage(prediction);\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    _modelType() {\n        return \"base_llm\";\n    }\n}\n/**\n * LLM class that provides a simpler interface to subclass than {@link BaseLLM}.\n *\n * Requires only implementing a simpler {@link _call} method instead of {@link _generate}.\n *\n * @augments BaseLLM\n */\nexport class LLM extends BaseLLM {\n    async _generate(prompts, options, runManager) {\n        const generations = await Promise.all(prompts.map((prompt, promptIndex) => this._call(prompt, { ...options, promptIndex }, runManager).then((text) => [{ text }])));\n        return { generations };\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15640, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/language_models/llms.js"],"sourcesContent":["export * from '../dist/language_models/llms.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15658, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/utils/chunk_array.js"],"sourcesContent":["export const chunkArray = (arr, chunkSize) => arr.reduce((chunks, elem, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n    const chunk = chunks[chunkIndex] || [];\n    // eslint-disable-next-line no-param-reassign\n    chunks[chunkIndex] = chunk.concat([elem]);\n    return chunks;\n}, []);\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,CAAC,KAAK,YAAc,IAAI,MAAM,CAAC,CAAC,QAAQ,MAAM;QACpE,MAAM,aAAa,KAAK,KAAK,CAAC,QAAQ;QACtC,MAAM,QAAQ,MAAM,CAAC,WAAW,IAAI,EAAE;QACtC,6CAA6C;QAC7C,MAAM,CAAC,WAAW,GAAG,MAAM,MAAM,CAAC;YAAC;SAAK;QACxC,OAAO;IACX,GAAG,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15676, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/utils/chunk_array.js"],"sourcesContent":["export * from '../dist/utils/chunk_array.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15694, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/embeddings.js"],"sourcesContent":["import { AsyncCaller } from \"./utils/async_caller.js\";\n/**\n * An abstract class that provides methods for embedding documents and\n * queries using LangChain.\n */\nexport class Embeddings {\n    constructor(params) {\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(params ?? {});\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM;IACT,YAAY,MAAM,CAAE;QAChB;;;SAGC,GACD,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU;YAClC,YAAY;YACZ,cAAc;YACd,UAAU;YACV,OAAO,KAAK;QAChB;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,sKAAA,CAAA,cAAW,CAAC,UAAU,CAAC;IAC7C;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15719, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/embeddings.js"],"sourcesContent":["export * from './dist/embeddings.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15737, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/dist/tools/index.js"],"sourcesContent":["import { z } from \"zod\";\nimport { validate, } from \"@cfworker/json-schema\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { BaseLangChain } from \"../language_models/base.js\";\nimport { ensureConfig, patchConfig, pickRunnableConfigKeys, } from \"../runnables/config.js\";\nimport { isDirectToolOutput, ToolMessage } from \"../messages/tool.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { _configHasToolCallId, _isToolCall, ToolInputParsingException, } from \"./utils.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\nimport { validatesOnlyStrings } from \"../utils/json_schema.js\";\nexport { isLangChainTool, isRunnableToolLike, isStructuredTool, isStructuredToolParams, } from \"./types.js\";\nexport { ToolInputParsingException };\n/**\n * Base class for Tools that accept input of any shape defined by a Zod schema.\n */\nexport class StructuredTool extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"tools\"];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        /**\n         * Whether to return the tool's output directly.\n         *\n         * Setting this to true means that after the tool is called,\n         * an agent should stop looping.\n         */\n        Object.defineProperty(this, \"returnDirect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"verboseParsingErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\n         * The tool response format.\n         *\n         * If \"content\" then the output of the tool is interpreted as the contents of a\n         * ToolMessage. If \"content_and_artifact\" then the output is expected to be a\n         * two-tuple corresponding to the (content, artifact) of a ToolMessage.\n         *\n         * @default \"content\"\n         */\n        Object.defineProperty(this, \"responseFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"content\"\n        });\n        this.verboseParsingErrors =\n            fields?.verboseParsingErrors ?? this.verboseParsingErrors;\n        this.responseFormat = fields?.responseFormat ?? this.responseFormat;\n    }\n    /**\n     * Invokes the tool with the provided input and configuration.\n     * @param input The input for the tool.\n     * @param config Optional configuration for the tool.\n     * @returns A Promise that resolves with the tool's output.\n     */\n    async invoke(input, config) {\n        let toolInput;\n        let enrichedConfig = ensureConfig(config);\n        if (_isToolCall(input)) {\n            toolInput = input.args;\n            enrichedConfig = {\n                ...enrichedConfig,\n                toolCall: input,\n            };\n        }\n        else {\n            toolInput = input;\n        }\n        return this.call(toolInput, enrichedConfig);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument, configuration, and tags. It\n     * parses the input according to the schema, handles any errors, and\n     * manages callbacks.\n     * @param arg The input argument for the tool.\n     * @param configArg Optional configuration or callbacks for the tool.\n     * @param tags Optional tags for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        // Determine the actual input that needs parsing/validation.\n        // If arg is a ToolCall, use its args; otherwise, use arg directly.\n        const inputForValidation = _isToolCall(arg) ? arg.args : arg;\n        let parsed; // This will hold the successfully parsed input of the expected output type.\n        if (isZodSchema(this.schema)) {\n            try {\n                // Validate the inputForValidation - TS needs help here as it can't exclude ToolCall based on the check\n                parsed = await this.schema.parseAsync(inputForValidation);\n            }\n            catch (e) {\n                let message = `Received tool input did not match expected schema`;\n                if (this.verboseParsingErrors) {\n                    message = `${message}\\nDetails: ${e.message}`;\n                }\n                // Pass the original raw input arg to the exception\n                throw new ToolInputParsingException(message, JSON.stringify(arg));\n            }\n        }\n        else {\n            const result = validate(inputForValidation, this.schema);\n            if (!result.valid) {\n                let message = `Received tool input did not match expected schema`;\n                if (this.verboseParsingErrors) {\n                    message = `${message}\\nDetails: ${result.errors\n                        .map((e) => `${e.keywordLocation}: ${e.error}`)\n                        .join(\"\\n\")}`;\n                }\n                // Pass the original raw input arg to the exception\n                throw new ToolInputParsingException(message, JSON.stringify(arg));\n            }\n            // Assign the validated input to parsed\n            // We cast here because validate() doesn't narrow the type sufficiently for TS, but we know it's valid.\n            parsed = inputForValidation;\n        }\n        const config = parseCallbackConfigArg(configArg);\n        const callbackManager_ = CallbackManager.configure(config.callbacks, this.callbacks, config.tags || tags, this.tags, config.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleToolStart(this.toJSON(), \n        // Log the original raw input arg\n        typeof arg === \"string\" ? arg : JSON.stringify(arg), config.runId, undefined, undefined, undefined, config.runName);\n        delete config.runId;\n        let result;\n        try {\n            // Pass the correctly typed parsed input to _call\n            result = await this._call(parsed, runManager, config);\n        }\n        catch (e) {\n            await runManager?.handleToolError(e);\n            throw e;\n        }\n        let content;\n        let artifact;\n        if (this.responseFormat === \"content_and_artifact\") {\n            if (Array.isArray(result) && result.length === 2) {\n                [content, artifact] = result;\n            }\n            else {\n                throw new Error(`Tool response format is \"content_and_artifact\" but the output was not a two-tuple.\\nResult: ${JSON.stringify(result)}`);\n            }\n        }\n        else {\n            content = result;\n        }\n        let toolCallId;\n        // Extract toolCallId ONLY if the original arg was a ToolCall\n        if (_isToolCall(arg)) {\n            toolCallId = arg.id;\n        }\n        // Or if it was provided in the config's toolCall property\n        if (!toolCallId && _configHasToolCallId(config)) {\n            toolCallId = config.toolCall.id;\n        }\n        const formattedOutput = _formatToolOutput({\n            content,\n            artifact,\n            toolCallId,\n            name: this.name,\n        });\n        await runManager?.handleToolEnd(formattedOutput);\n        return formattedOutput;\n    }\n}\n/**\n * Base class for Tools that accept input as a string.\n */\nexport class Tool extends StructuredTool {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: z\n                .object({ input: z.string().optional() })\n                .transform((obj) => obj.input)\n        });\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument and callbacks. It handles\n     * string inputs specifically.\n     * @param arg The input argument for the tool, which can be a string, undefined, or an input of the tool's schema.\n     * @param callbacks Optional callbacks for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    // Match the base class signature including the generics and conditional return type\n    call(arg, callbacks) {\n        // Prepare the input for the base class call method.\n        // If arg is string or undefined, wrap it; otherwise, pass ToolCall or { input: ... } directly.\n        const structuredArg = typeof arg === \"string\" || arg == null ? { input: arg } : arg;\n        // Ensure TConfig is passed to super.call\n        return super.call(structuredArg, callbacks);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and description.\n */\nexport class DynamicTool extends Tool {\n    static lc_name() {\n        return \"DynamicTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        // Call the Tool class's call method, passing generics through\n        // Cast config to TConfig to satisfy the super.call signature\n        return super.call(arg, config);\n    }\n    /** @ignore */\n    async _call(input, // DynamicTool's _call specifically expects a string after schema transformation\n    runManager, parentConfig) {\n        return this.func(input, runManager, parentConfig);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and\n * description, designed to work with structured data. It extends the\n * StructuredTool class and overrides the _call method to execute the\n * provided function when the tool is called.\n *\n * Schema can be passed as Zod or JSON schema. The tool will not validate\n * input if JSON schema is passed.\n */\nexport class DynamicStructuredTool extends StructuredTool {\n    static lc_name() {\n        return \"DynamicStructuredTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n        this.schema = fields.schema;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    // Match the base class signature\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        // Call the base class method, passing generics through\n        // Cast config to TConfig to satisfy the super.call signature\n        return super.call(arg, config, tags);\n    }\n    _call(arg, runManager, parentConfig) {\n        return this.func(arg, runManager, parentConfig);\n    }\n}\n/**\n * Abstract base class for toolkits in LangChain. Toolkits are collections\n * of tools that agents can use. Subclasses must implement the `tools`\n * property to provide the specific tools for the toolkit.\n */\nexport class BaseToolkit {\n    getTools() {\n        return this.tools;\n    }\n}\nexport function tool(func, fields) {\n    const isShapelessZodSchema = fields.schema &&\n        isZodSchema(fields.schema) &&\n        (!(\"shape\" in fields.schema) || !fields.schema.shape);\n    const isStringJSONSchema = validatesOnlyStrings(fields.schema);\n    // If the schema is not provided, or it's a shapeless schema (e.g. a ZodString), create a DynamicTool\n    if (!fields.schema || isShapelessZodSchema || isStringJSONSchema) {\n        return new DynamicTool({\n            ...fields,\n            description: fields.description ??\n                fields.schema?.description ??\n                `${fields.name} tool`,\n            func: async (input, runManager, config) => {\n                return new Promise((resolve, reject) => {\n                    const childConfig = patchConfig(config, {\n                        callbacks: runManager?.getChild(),\n                    });\n                    void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                        try {\n                            // TS doesn't restrict the type here based on the guard above\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            resolve(func(input, childConfig));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            },\n        });\n    }\n    const schema = fields.schema;\n    const description = fields.description ??\n        fields.schema.description ??\n        `${fields.name} tool`;\n    return new DynamicStructuredTool({\n        ...fields,\n        description,\n        schema,\n        func: async (input, runManager, config) => {\n            return new Promise((resolve, reject) => {\n                const childConfig = patchConfig(config, {\n                    callbacks: runManager?.getChild(),\n                });\n                void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                    try {\n                        resolve(func(input, childConfig));\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n            });\n        },\n    });\n}\nfunction _formatToolOutput(params) {\n    const { content, artifact, toolCallId } = params;\n    if (toolCallId && !isDirectToolOutput(content)) {\n        if (typeof content === \"string\" ||\n            (Array.isArray(content) &&\n                content.every((item) => typeof item === \"object\"))) {\n            return new ToolMessage({\n                content,\n                artifact,\n                tool_call_id: toolCallId,\n                name: params.name,\n            });\n        }\n        else {\n            return new ToolMessage({\n                content: _stringify(content),\n                artifact,\n                tool_call_id: toolCallId,\n                name: params.name,\n            });\n        }\n    }\n    else {\n        return content;\n    }\n}\nfunction _stringify(content) {\n    try {\n        return JSON.stringify(content, null, 2) ?? \"\";\n    }\n    catch (_noOp) {\n        return `${content}`;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16154, "column": 0}, "map": {"version":3,"sources":["file:///home/m/pandoraprov4/node_modules/%40langchain/core/tools.js"],"sourcesContent":["export * from './dist/tools/index.js'"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}}]
}